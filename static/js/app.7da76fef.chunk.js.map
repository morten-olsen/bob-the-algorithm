{"version":3,"sources":["src/features/appointments/context.ts","src/features/async/hooks.ts","src/features/appointments/provider.tsx","src/features/day/context.ts","src/features/day/utils.ts","src/features/day/provider.tsx","src/features/day/hooks.ts","src/utils/data-context.tsx","src/features/goals/context.ts","src/features/location/context.ts","src/features/location/provider.tsx","src/features/location/hooks.ts","src/features/overrides/context.ts","src/features/overrides/provider.tsx","src/features/overrides/hooks.ts","src/features/data/types.ts","src/features/data/utils.ts","src/features/planner/algorithm/utils.ts","src/features/planner/algorithm/get-next.ts","src/features/planner/algorithm/build-graph.ts","src/features/planner/context.ts","src/features/routines/context.ts","src/features/routines/hooks.ts","src/features/goals/hooks.ts","src/features/planner/algorithm/construct-day.ts","src/features/planner/hooks.ts","src/features/appointments/hooks.ts","src/features/setup.tsx","src/ui/components/base/icon/index.tsx","src/ui/components/base/modal/react-modal.web.tsx","src/ui/components/base/row/cell.tsx","src/ui/typography/index.ts","src/ui/components/base/row/row.tsx","src/ui/components/base/row/placeholder-icon.tsx","src/ui/components/base/page/index.tsx","src/ui/components/base/popup/index.tsx","src/ui/components/base/modal/index.tsx","src/ui/components/base/button/index.tsx","src/ui/components/base/group/header.tsx","src/ui/components/base/group/index.tsx","src/ui/components/base/list/index.tsx","src/ui/components/date/bar/index.tsx","src/ui/components/form/input/index.tsx","src/ui/components/form/checkbox/index.tsx","src/ui/components/form/time/index.tsx","src/ui/components/form/date/index.tsx","src/ui/components/form/optional-selector/index.tsx","src/features/tasks/hooks.tsx","src/ui/components/tasks/list-item/index.tsx","src/ui/components/tasks/group/index.tsx","src/ui/screens/day/index.tsx","src/ui/screens/task/add.tsx","src/ui/screens/more/index.tsx","src/ui/screens/locations/list.tsx","src/ui/screens/locations/set.tsx","src/ui/screens/task/list.tsx","src/ui/screens/task/overrides.tsx","src/ui/components/plan/day/task.tsx","src/ui/components/plan/day/index.tsx","src/ui/screens/plan/index.tsx","src/ui/router/router.tsx","src/ui/theme/light.ts","App.tsx","src/app.tsx","node_modules/moment/locale sync /^/.//.*$"],"names":["AppointmentsStatus","useAsyncCallback","fn","deps","useState","result","setResult","prevArgs","setPrevArgs","loading","setLoading","error","setError","action","useCallback","invoke","a","async","args","output","undefined","useMemo","useAsync","options","useEffect","localOptions","rerun","AppointmentsContext","createContext","AppointmentsProvider","children","Platform","OS","status","unavailable","value","Provider","DateContext","dateToDay","input","year","getFullYear","month","getMonth","date","getDate","dayUtils","today","Date","dayToDate","day","toId","toString","padStart","DateProvider","setDate","useDate","useContext","createDataContext","createDefault","deserialize","Context","key","storageKey","current","setCurrent","next","AsyncStorageLib","setItem","JSON","stringify","setData","getItem","raw","parse","data","GoalsContext","GoalsProvider","LocationContext","LocationProvider","lookup","getTransition","locations","setLocations","AsyncStorage","location","index","id","set","remove","useLocations","Object","values","OverrideContext","OverrideProvider","currentDate","overrides","setOverrides","get","StorageKey","tasks","override","TaskType","largerThan","b","timeToMinutes","time","hour","minute","timeUtils","timeToString","stringToTime","split","map","trim","filter","Boolean","hourPart","minutePart","parseInt","Number","isInteger","isNaN","equal","max","min","add","minutes","toAdd","Math","floor","locationEqual","title","listContainLocation","list","target","find","l","getRemainingLocations","forEach","task","push","Strategies","isDead","impossible","t","required","getImpossible","remaining","startTime","calculateScore","transition","score","priority","impossibleTask","getNext","currentNode","context","nextNodes","remainingLocations","remainingTasks","Promise","all","end","endTime","parent","to","impossibeTasks","completed","dead","start","possibleTasks","orgTask","parentRemainging","duration","length","sleep","resolve","setTimeout","fil","Array","fill","i","buildGraph","strategy","allValid","callback","batchSize","sleepTime","nodeCount","running","leafList","completedList","deadList","complete","nodes","sort","node","pop","cancel","n","alive","firstValid","firstComplet","fullComplete","c","PlannerContext","PlannerProvider","RoutinesContext","RoutinesProvider","useRoutines","useGoals","constructDay","plans","type","name","from","reverse","getDays","stopDate","days","firstValue","arg","usePreparePlan","routines","goals","getOverrides","approved","getDay","appointments","useGetAppointments","getAppontments","actualStart","enabled","startMin","startMax","usePlan","preparePlan","prepareOptions","prepared","reduce","update","dayGoal","graph","winner","plan","goal","d","Setup","getTransit","Icon","size","color","theme","useTheme","Feather","colors","icon","sizes","icons","Modal","visible","elm","newElm","document","createElement","style","position","display","flexDirection","left","top","width","height","transform","body","appendChild","removeChild","ReactDOM","createPortal","Wrapper","styled","View","margins","medium","background","flex","direction","align","opacity","Touch","TouchableOpacity","Cell","onPress","props","accessibilityLabel","accessibilityRole","accessibilityHint","others","accessible","BaseText","Text","text","bold","font","baseSize","Jumbo","Title1","Body1","Overline","Link","Children","componentOrString","Component","Row","right","overline","description","cellProps","KeyboardAvoiding","KeyboardAvoidingView","Pressable","Page","keyboardShown","setKeyboardShown","keyboardDidShow","keyboardDidHide","Keyboard","addListener","removeListener","disabled","dismiss","behavior","Top","shadow","Outer","Content","ScrollView","Popup","onClose","rowProps","insets","useSafeAreaInsets","paddingBottom","bottom","alwaysBounceVertical","transparent","animationType","onRequestClose","onDismiss","primary","small","corners","Button","Header","Group","startHidden","setVisible","items","getKey","render","Collapsible","collapsed","item","marginLeft","List","FlatList","keyExtractor","renderItem","DateBar","selected","lines","markedDates","paddingTop","backgroundColor","calendarColor","selectedDate","startingDate","onDateSelected","utc","toDate","shouldAllowFontScaling","iconContainer","calendarHeaderStyle","fontSize","highlightDateNameStyle","iconLeftStyle","tintColor","iconRightStyle","highlightDateNumberStyle","dateNumberStyle","dateNameStyle","InputField","TextInput","label","placeholder","onChangeText","row","Checkbok","onChange","TimeField","TimeInput","DateInput","onSelect","allowClear","marked","selectedColor","showWeekNumbers","hideArrows","enableSwipeMonths","onDayPress","shade","TopButton","OptionalSelector","setEnabled","enabledText","disabledText","toggle","nextId","isSelected","includes","useTasks","useAppointments","routine","appointment","useSetTask","setRoutine","useSetRoutine","setGoal","useSetGoals","useRemoveTask","removeRoutine","useRemoveRoutine","removeGoal","useRemoveGoal","TaskListItem","TaskGroup","navigate","useNavigation","taskType","DayScreen","appointmentStatus","startTimeOverride","useSetStartTimeOverride","setStartTimeOverride","rejected","SideBySide","dayNames","_","TaskAddScreen","useRoute","params","goBack","nanoid","currentId","setTask","currentType","setCurrentType","setTitle","maxStart","setMaxStart","minStart","setMinStart","setDuration","hasLocation","setHasLocation","selectedLocations","setSelectedLocations","hasDays","setHasDays","selectedDays","setSelectedDays","setRequired","save","MoreScreen","LocationListScreen","removeLocation","LocationSetScreen","setLocation","longitute","latitude","TaskListScreen","removeTask","OverrideSetScreen","useSetTaskOverride","setOverride","useClearTaskOverride","clearOverrides","clear","Time","TimeBox","Filler","Block","chroma","darken","hex","Main","PlanDayTask","stringToColor","luminance","saturate","brighten","view","PlanDay","Scroll","PlanScreen","setStart","setEnd","runPlanning","entries","MoreStackNavigator","createNativeStackNavigator","MoreStack","Navigator","Screen","component","MainTabsNvaigator","createBottomTabNavigator","MainTabs","screenOptions","tabBarActiveTintColor","headerShown","tabBarLabel","tabBarIcon","focused","RootNavigator","createStackNavigator","Root","animationEnabled","presentation","Router","baseTheme","DefaultTheme","navigationTheme","card","NavigationContainer","light","destructive","secondary","textShade","large","App","usableTime","StatusBar","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","module","exports"],"mappings":"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","file":"static/js/app.7da76fef.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport { Appointment } from '../data';\nimport { Day } from '../day';\n\nenum AppointmentsStatus {\n  unavailable = 'unavailable',\n  unapproved = 'unapproved',\n  rejected = 'rejected',\n  approved = 'approved',\n}\n\ntype AppointmentsContextUnavailable = {\n  status: AppointmentsStatus.unavailable | AppointmentsStatus.rejected;\n};\n\ntype AppointmentsContextUnapprovedValue = {\n  status: AppointmentsStatus.unapproved;\n  request: () => Promise<void>;\n};\n\ntype AppointmentsContextApproved = {\n  status: AppointmentsStatus.approved;\n  getDay: (day: Day) => Promise<Appointment[]>;\n};\n\ntype AppointmentsContextValue =\n  | AppointmentsContextUnavailable\n  | AppointmentsContextUnapprovedValue\n  | AppointmentsContextApproved;\n\nconst AppointmentsContext = createContext<AppointmentsContextValue>(\n  undefined as any\n);\n\nexport type { AppointmentsContextValue };\nexport { AppointmentsContext, AppointmentsStatus };\n","import { useCallback, useEffect, useMemo, useState } from 'react';\n\ntype AsyncCallbackOutput<TArgs extends any[], TResult> = [\n  (...args: TArgs) => Promise<TResult>,\n  {\n    loading: boolean;\n    error?: any;\n    result?: TResult;\n    args?: TArgs;\n  }\n];\n\ntype AsyncOutput<TResult> = [\n  TResult | undefined,\n  {\n    loading: boolean;\n    error?: any;\n    rerun: () => Promise<TResult>;\n  }\n];\n\nconst useAsyncCallback = <TArgs extends any[], TResult>(\n  fn: (...args: TArgs) => Promise<TResult>,\n  deps: any[]\n): AsyncCallbackOutput<TArgs, TResult> => {\n  const [result, setResult] = useState<TResult>();\n  const [prevArgs, setPrevArgs] = useState<TArgs>();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<any>();\n\n  const action = useCallback(fn, deps);\n\n  const invoke = useCallback(\n    async (...args: TArgs) => {\n      setLoading(true);\n      setError(false);\n      setPrevArgs(args);\n      try {\n        const output = await action(...args);\n        setResult(output);\n        return output;\n      } catch (err) {\n        setResult(undefined);\n        setError(err);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [setLoading, setError, setResult, action, ...deps]\n  );\n\n  const options = useMemo(() => {\n    const output: AsyncCallbackOutput<TArgs, TResult> = [\n      invoke,\n      {\n        result,\n        loading,\n        error,\n        args: prevArgs,\n      },\n    ];\n    return output;\n  }, [invoke, result, loading, error, prevArgs, ...deps]);\n\n  return options;\n};\n\nconst useAsync = <TResult>(\n  fn: () => Promise<TResult>,\n  deps: any[]\n): AsyncOutput<TResult> => {\n  const [invoke, options] = useAsyncCallback(fn, deps);\n  useEffect(() => {\n    invoke();\n  }, [invoke]);\n\n  const localOptions = useMemo(\n    () => ({\n      loading: options.loading,\n      error: options.error,\n      rerun: invoke,\n    }),\n    [invoke, options.loading, options.error]\n  );\n\n  return [options.result, localOptions];\n};\n\nexport type { AsyncCallbackOutput };\nexport { useAsync, useAsyncCallback };\n","import React, { ReactNode } from 'react';\nimport { useAsync } from '#/features/async';\nimport { Platform } from 'react-native';\nimport {\n  AppointmentsContext,\n  AppointmentsContextValue,\n  AppointmentsStatus,\n} from './context';\n\ntype AppointmentsProviderProps = {\n  children: ReactNode;\n};\n\nconst AppointmentsProvider: React.FC<AppointmentsProviderProps> = ({\n  children,\n}) => {\n  const [value] = useAsync<AppointmentsContextValue>(async () => {\n    if (Platform.OS !== 'ios') {\n      return { status: AppointmentsStatus.unavailable };\n    }\n    return { status: AppointmentsStatus.unavailable };\n  }, []);\n\n  if (!value) {\n    return <></>;\n  }\n\n  return (\n    <AppointmentsContext.Provider value={value}>\n      {children}\n    </AppointmentsContext.Provider>\n  );\n};\n\nexport type { AppointmentsProviderProps };\nexport { AppointmentsProvider };\n","import { createContext } from 'react';\nimport { Day } from '.';\n\ntype DateContextValue = {\n  date: Day;\n  setDate: (date: Day) => void;\n};\n\nconst DateContext = createContext<DateContextValue>(undefined as any);\n\nexport type { DateContextValue };\nexport { DateContext };\n","import { Day } from './day';\n\nconst today = () => {\n  return dateToDay(new Date());\n};\n\nconst dayToDate = (day: Day) => {\n  return new Date(day.year, day.month - 1, day.date, 0, 0, 0, 0);\n};\n\nconst dateToDay = (input: Date) => {\n  const year = input.getFullYear();\n  const month = input.getMonth() + 1;\n  const date = input.getDate();\n  const day: Day = { year, month, date };\n  return day;\n};\n\nconst toId = (day: Day) => {\n  return `${day.year.toString().padStart(4, '0')}-${day.month\n    .toString()\n    .padStart(2, '0')}-${day.date.toString().padStart(2, '0')}`;\n};\n\nconst dayUtils = {\n  today,\n  dateToDay,\n  dayToDate,\n  toId,\n};\n\nexport { dayUtils };\n","import React, { ReactNode, useState } from 'react';\nimport { DateContext } from './context';\nimport { dayUtils } from './utils';\n\ntype DateProviderProps = {\n  children: ReactNode;\n};\n\nconst DateProvider: React.FC<DateProviderProps> = ({ children }) => {\n  const [date, setDate] = useState(dayUtils.today());\n\n  return (\n    <DateContext.Provider value={{ date, setDate }}>\n      {children}\n    </DateContext.Provider>\n  );\n};\n\nexport type { DateProviderProps };\nexport { DateProvider };\n","import { useContext } from 'react';\nimport { DateContext } from './context';\n\nexport const useDate = () => {\n  const { date } = useContext(DateContext);\n  return date;\n};\n\nexport const useSetDate = () => {\n  const { setDate } = useContext(DateContext);\n  return setDate;\n};\n","import React, { createContext, ReactNode, useState } from 'react';\nimport { useAsync, useAsyncCallback } from '#/features/async';\nimport AsyncStorageLib from '@react-native-async-storage/async-storage';\n\ntype DataContextOptions<T> = {\n  createDefault: () => T;\n  deserialize?: (item: T) => T;\n};\n\ntype DataContextProviderProps = {\n  storageKey: string;\n  children: ReactNode;\n};\n\nfunction createDataContext<T extends { [name: string]: any }>({\n  createDefault,\n  deserialize = (a) => a,\n}: DataContextOptions<T>) {\n  const Context = createContext<{\n    data: T;\n    setData: (data: T | ((current: T) => T)) => Promise<void>;\n  }>(undefined as any);\n\n  const Provider: React.FC<DataContextProviderProps> = ({\n    storageKey: key,\n    children,\n  }) => {\n    const [current, setCurrent] = useState<T>();\n\n    const [setData] = useAsyncCallback(\n      async (input: T | ((currentValue: T) => T)) => {\n        let next = typeof input === 'function' ? input(current!) : input;\n        setCurrent(next);\n        await AsyncStorageLib.setItem(key, JSON.stringify(next));\n      },\n      [key, current, setCurrent]\n    );\n\n    useAsync(async () => {\n      const raw = await AsyncStorageLib.getItem(key);\n      const next = raw ? deserialize(JSON.parse(raw)) : createDefault();\n      setCurrent(next);\n    }, [key, setCurrent]);\n\n    if (!current) {\n      return <></>;\n    }\n\n    return (\n      <Context.Provider value={{ data: current, setData }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n}\n\nexport { createDataContext };\n","import { createDataContext } from '#/utils/data-context';\nimport { Goal } from '../data';\n\nconst { Context: GoalsContext, Provider: GoalsProvider } = createDataContext<{\n  [id: string]: Goal;\n}>({\n  createDefault: () => ({}),\n});\n\nexport { GoalsContext, GoalsProvider };\n","import { Time, UserLocation } from '../data';\nimport { createContext } from 'react';\n\ntype Transition = {\n  time: number;\n  usableTime: number;\n  to: UserLocation;\n  from: UserLocation;\n};\n\ntype GetTransition = (\n  from: UserLocation,\n  to: UserLocation,\n  time: Time\n) => Promise<Transition>;\n\ntype LocationContextValue = {\n  locations: {\n    [id: string]: UserLocation;\n  };\n  set: (location: UserLocation) => any;\n  remove: (id: string) => any;\n  lookup?: (address: string) => UserLocation[];\n  getTransition: GetTransition;\n};\n\nconst LocationContext = createContext<LocationContextValue>(undefined as any);\n\nexport type { LocationContextValue, GetTransition, Transition };\nexport { LocationContext };\n","import React, { ReactNode, useState } from 'react';\nimport { useAsync, useAsyncCallback } from '#/features/async';\nimport { GetTransition } from './context';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LocationContext } from './context';\nimport { UserLocation } from '../data';\n\ntype LocationProviderProps = {\n  children: ReactNode;\n  lookup: (address: string) => UserLocation[];\n  getTransition: GetTransition;\n};\n\nconst LOCATION_STORAGE_KEY = 'locations';\n\nconst LocationProvider: React.FC<LocationProviderProps> = ({\n  children,\n  lookup,\n  getTransition,\n}) => {\n  const [locations, setLocations] = useState<{ [id: string]: UserLocation }>(\n    {}\n  );\n\n  useAsync(async () => {\n    const raw = await AsyncStorage.getItem(LOCATION_STORAGE_KEY);\n    if (raw) {\n      setLocations(JSON.parse(raw));\n    }\n  }, []);\n\n  const [set] = useAsyncCallback(\n    async (location: UserLocation) => {\n      const index = {\n        ...locations,\n        [location.id]: location,\n      };\n      setLocations(index);\n      await AsyncStorage.setItem(LOCATION_STORAGE_KEY, JSON.stringify(index));\n    },\n    [setLocations, locations]\n  );\n\n  const [remove] = useAsyncCallback(\n    async (id: string) => {\n      const index = {\n        ...locations,\n      };\n      delete index[id];\n      setLocations(index);\n      await AsyncStorage.setItem(LOCATION_STORAGE_KEY, JSON.stringify(index));\n    },\n    [setLocations, locations]\n  );\n\n  return (\n    <LocationContext.Provider\n      value={{\n        locations,\n        set,\n        remove,\n        lookup,\n        getTransition,\n      }}\n    >\n      {children}\n    </LocationContext.Provider>\n  );\n};\n\nexport type { LocationProviderProps };\nexport { LocationProvider };\n","import { useAsync } from '#/features/async';\nimport { useContext, useMemo } from 'react';\nimport {\n  requestForegroundPermissionsAsync,\n  getCurrentPositionAsync,\n} from 'expo-location';\nimport { LocationContext } from './context';\nimport { UserLocation } from '../data';\nimport { getDistanceFromLatLonInKm } from './utils';\n\nexport const useLocations = () => {\n  const { locations } = useContext(LocationContext);\n  const result = useMemo(() => Object.values(locations), [locations]);\n  return result;\n};\n\nexport const useSetLocation = () => {\n  const { set } = useContext(LocationContext);\n  return set;\n};\n\nexport const useRemoveLocation = () => {\n  const { remove } = useContext(LocationContext);\n  return remove;\n};\n\nexport const useGetTransition = () => {\n  const { getTransition } = useContext(LocationContext);\n  return getTransition;\n};\n\nexport const useLookup = () => {\n  const { lookup } = useContext(LocationContext);\n  return lookup;\n};\n\nexport const useCurrentLocation = (proximity: number = 0.5) => {\n  const { locations } = useContext(LocationContext);\n  const result = useAsync<UserLocation | undefined>(async () => {\n    let { status } = await requestForegroundPermissionsAsync();\n    if (status !== 'granted') {\n      return undefined;\n    }\n    let position = await getCurrentPositionAsync({});\n    const withDistance = Object.values(locations)\n      .map((location) => {\n        if (!location.position) {\n          return;\n        }\n        const distance = getDistanceFromLatLonInKm(\n          position.coords.latitude,\n          position.coords.longitude,\n          location.position.latitude,\n          location.position.longitute\n        );\n        return {\n          distance,\n          location,\n        };\n      })\n      .filter(Boolean)\n      .sort((a, b) => a!.distance - b!.distance);\n    const current = withDistance.find((d) => d!.distance < proximity);\n    if (!current) {\n      return {\n        id: `${position.coords.longitude} ${position.coords.latitude}`,\n        title: 'Unknown',\n        position: {\n          latitude: position.coords.latitude,\n          longitute: position.coords.longitude,\n        },\n      };\n    }\n    return current.location;\n  }, []);\n  return result;\n};\n","import React, { createContext, SetStateAction } from 'react';\nimport { Time, UserLocation } from '../data';\nimport { Day } from '../day';\n\ntype Override = {\n  locations?: UserLocation[] | null;\n  startMin?: Time;\n  startMax?: Time;\n  duration?: number;\n  required?: boolean;\n  priority?: number;\n  enabled?: boolean;\n};\n\ntype OverrideIndex = {\n  startTime?: Time;\n  tasks: {\n    [id: string]: Override;\n  };\n};\n\ntype OverrideContextValue = {\n  overrides: OverrideIndex;\n  get: (date: Day) => Promise<OverrideIndex>;\n  set: React.Dispatch<SetStateAction<OverrideIndex>>;\n};\nconst OverrideContext = createContext<OverrideContextValue>(undefined as any);\n\nexport type { Override, OverrideIndex, OverrideContextValue };\nexport { OverrideContext };\n","import AsyncStorageLib from '@react-native-async-storage/async-storage';\nimport React, { ReactNode, SetStateAction, useCallback, useState } from 'react';\nimport { useAsync } from '../async';\nimport { Day, useDate, dayUtils } from '../day';\nimport { OverrideContext, OverrideIndex } from './context';\n\ntype OverrideProviderProps = {\n  children: ReactNode;\n};\n\nconst StorageKey = 'overrides';\n\nconst OverrideProvider: React.FC<OverrideProviderProps> = ({ children }) => {\n  const currentDate = useDate();\n  const [overrides, setOverrides] = useState<OverrideIndex>();\n\n  const get = useCallback(async (date: Day): Promise<OverrideIndex> => {\n    const raw = await AsyncStorageLib.getItem(\n      `${StorageKey}_${dayUtils.toId(date)}`\n    );\n    if (!raw) {\n      return { tasks: {} };\n    }\n    return JSON.parse(raw);\n  }, []);\n\n  const set = useCallback(\n    async (override: SetStateAction<OverrideIndex>) => {\n      const next =\n        typeof override === 'function' ? override(overrides!) : overrides;\n      setOverrides(next);\n      await AsyncStorageLib.setItem(\n        `${StorageKey}_${dayUtils.toId(currentDate)}`,\n        JSON.stringify(next)\n      );\n    },\n    [currentDate, overrides]\n  );\n\n  useAsync(async () => {\n    setOverrides(await get(currentDate));\n  }, [currentDate, setOverrides]);\n\n  if (!overrides) {\n    return <></>;\n  }\n\n  return (\n    <OverrideContext.Provider value={{ overrides, get, set }}>\n      {children}\n    </OverrideContext.Provider>\n  );\n};\n\nexport type { OverrideProviderProps };\nexport { OverrideProvider };\n","import { useContext } from 'react';\nimport { useAsyncCallback } from '../async';\nimport { Time } from '../data';\nimport { Override, OverrideContext } from './context';\n\nexport const useOverrides = () => {\n  const { overrides } = useContext(OverrideContext);\n  return overrides;\n};\n\nexport const useSetOverride = () => {\n  const { set } = useContext(OverrideContext);\n  return set;\n};\n\nexport const useGetOverride = () => {\n  const { get } = useContext(OverrideContext);\n  return get;\n};\n\nexport const useSetTaskOverride = () => {\n  const { set } = useContext(OverrideContext);\n  const setTaskOverride = useAsyncCallback(\n    async (id: string, overrides: Override) => {\n      set((current) => ({\n        ...current,\n        tasks: {\n          ...current.tasks,\n          [id]: overrides,\n        },\n      }));\n    },\n    [set]\n  );\n  return setTaskOverride;\n};\n\nexport const useClearTaskOverride = () => {\n  const { set } = useContext(OverrideContext);\n  const clearTaskOverride = useAsyncCallback(\n    async (id: string) => {\n      set((current) => {\n        const tasks = { ...current.tasks };\n        delete tasks[id];\n        return {\n          ...current,\n          tasks,\n        };\n      });\n    },\n    [set]\n  );\n  return clearTaskOverride;\n};\n\nexport const useStartTimeOverride = () => {\n  const { overrides } = useContext(OverrideContext);\n  return overrides.startTime;\n};\n\nexport const useSetStartTimeOverride = () => {\n  const { set } = useContext(OverrideContext);\n  const setStartTime = useAsyncCallback(\n    async (startTime?: Time) => {\n      set((current) => ({\n        ...current,\n        startTime,\n      }));\n    },\n    [set]\n  );\n  return setStartTime;\n};\n","import { Day } from '../day';\n\nexport enum TaskType {\n  appointment = 'appointment',\n  goal = 'goal',\n  routine = 'routine',\n}\n\nexport type Time = {\n  hour: number;\n  minute: number;\n};\n\nexport type UserLocation = {\n  id: string;\n  title: string;\n  position: {\n    longitute: number;\n    latitude: number;\n  };\n};\n\nexport type TaskBase = {\n  type: TaskType;\n  id: string;\n  title: string;\n  locations?: UserLocation[];\n  required: boolean;\n  priority?: number;\n  startTime: {\n    min: Time;\n    max: Time;\n  };\n  duration: number;\n};\n\nexport type Appointment = TaskBase & {\n  type: TaskType.appointment;\n  calendarId: string;\n};\n\nexport type Goal = TaskBase & {\n  type: TaskType.goal;\n  completed: boolean;\n  deadline?: Day;\n  startDate?: Day;\n  days: boolean[];\n};\n\nexport type Routine = TaskBase & {\n  type: TaskType.routine;\n  days: boolean[];\n};\n\nexport type Task = Appointment | Goal | Routine;\n","import { Time } from './types';\n\nconst equal = (a: Time, b: Time) => {\n  return a.hour === b.hour && a.minute === b.minute;\n};\n\nconst stringToTime = (input: string) => {\n  const [hourPart, minutePart] = input\n    .split(':')\n    .map((a) => a.trim())\n    .filter(Boolean);\n  const hour = parseInt(hourPart, 10);\n  const minute = parseInt(minutePart || '0', 10);\n\n  if (\n    !Number.isInteger(hour) ||\n    !Number.isInteger(minute) ||\n    Number.isNaN(hour) ||\n    Number.isNaN(minute)\n  ) {\n    return undefined;\n  }\n\n  const result: Time = {\n    hour,\n    minute,\n  };\n\n  return result;\n};\n\nconst largerThan = (a: Time, b: Time) => {\n  return timeToMinutes(a) > timeToMinutes(b);\n};\n\nconst max = (a: Time, b: Time) => (largerThan(a, b) ? a : b);\nconst min = (a: Time, b: Time) => (largerThan(a, b) ? b : a);\n\nconst timeToString = (input: Time) => `${input.hour}:${input.minute}`;\n\nconst timeToMinutes = (time: Time) => time.hour * 60 + time.minute;\n\nconst minutesToTime = (minutes: number): Time => {\n  const hour = Math.floor(minutes / 60);\n  const minute = minutes % 60;\n  return { hour, minute };\n};\n\nconst add = (a: Time, b: Time | number) => {\n  const toAdd = typeof b === 'number' ? b : b.hour * 60 + b.minute;\n  const current = a.hour * 60 + a.minute + toAdd;\n  return minutesToTime(current);\n};\n\nconst timeUtils = {\n  timeToString,\n  stringToTime,\n  equal,\n  largerThan,\n  timeToMinutes,\n  max,\n  min,\n  add,\n};\n\nexport { timeUtils };\n","import { UserLocation } from '#/types/location';\nimport { Task } from '#/types/task';\n\nexport const locationEqual = (a: UserLocation, b: UserLocation) => {\n  if (a === b) {\n    return true;\n  }\n  // if (a.location === b.location) {\n  //   return true;\n  // }\n  // if (a.location && b.location && a.location.latitude === b.location.latitude && a.location.longitute === b.location.longitute) {\n  //   return true;\n  // }\n  if (a.title === b.title) {\n    return true;\n  }\n  return false;\n};\n\nexport const listContainLocation = (\n  list: UserLocation[],\n  target: UserLocation\n) => {\n  return !!list.find((l) => locationEqual(l, target));\n};\n\nexport const getRemainingLocations = (tasks: Task[], current: UserLocation) => {\n  const result: UserLocation[] = [];\n  tasks.forEach((task) => {\n    if (!task.locations) {\n      return;\n    }\n    for (let location of task.locations) {\n      if (\n        !listContainLocation(result, location) &&\n        !locationEqual(current, location)\n      ) {\n        result.push(location);\n      }\n    }\n  });\n  return result;\n};\n","import { Task, Time, timeUtils } from '#/features/data';\nimport { Transition } from '#/features/location';\nimport { Context, GraphNode } from '../types';\nimport { getRemainingLocations, listContainLocation } from './utils';\n\nconst DEFAULT_PRIORITY = 50;\n\nconst isDead = (impossible: Task[]) => {\n  const missingRequered = impossible.find((t) => t.required);\n  return !!missingRequered;\n};\n\ntype GetImpossibleResult = {\n  remaining: Task[];\n  impossible: Task[];\n};\n\nexport const getImpossible = (tasks: Task[], time: Time) => {\n  const result: GetImpossibleResult = {\n    remaining: [],\n    impossible: [],\n  };\n\n  for (let task of tasks) {\n    if (timeUtils.largerThan(time, task.startTime.max)) {\n      result.impossible.push(task);\n    } else {\n      result.remaining.push(task);\n    }\n  }\n\n  return result;\n};\n\ntype CalculateScoreOptions = {\n  tasks?: Task[];\n  transition?: Transition;\n  impossible: Task[];\n};\n\nconst calculateScore = ({\n  tasks,\n  transition,\n  impossible,\n}: CalculateScoreOptions) => {\n  let score = 0;\n\n  tasks?.forEach((task) => {\n    score += (task.priority || DEFAULT_PRIORITY) * 10;\n    impossible.forEach((impossibleTask) => {\n      if (impossibleTask.required) {\n        score -= 10000 + 1 * (impossibleTask.priority || DEFAULT_PRIORITY);\n      } else {\n        score -= 100 + 1 * (impossibleTask.priority || DEFAULT_PRIORITY);\n      }\n    });\n  });\n  if (transition) {\n    const minutes = transition.time;\n    score -= 10 + 1 * minutes;\n  }\n  return score;\n};\nconst getNext = async (\n  currentNode: GraphNode,\n  context: Context\n): Promise<GraphNode[]> => {\n  const nextNodes: GraphNode[] = [];\n  if (!currentNode.transition) {\n    const remainingLocations = getRemainingLocations(\n      currentNode.remainingTasks,\n      currentNode.location\n    );\n    await Promise.all(\n      remainingLocations.map(async (location) => {\n        const transition = await context.getTransition(\n          currentNode.location,\n          location,\n          currentNode.time.end\n        );\n        const endTime = timeUtils.add(currentNode.time.end, transition.time);\n        const { remaining, impossible } = getImpossible(\n          currentNode.remainingTasks,\n          endTime\n        );\n        const score = calculateScore({\n          transition,\n          impossible,\n        });\n        nextNodes.push({\n          parent: currentNode,\n          location: transition.to,\n          remainingTasks: remaining,\n          transition,\n          impossibeTasks: [...impossible, ...currentNode.impossibeTasks],\n          score: currentNode.score + score,\n          status: {\n            completed: false,\n            dead: false, // TODO: fix isDead(impossible),\n          },\n          time: {\n            start: currentNode.time.end,\n            end: endTime,\n          },\n        });\n      })\n    );\n  }\n  const possibleTasks = currentNode.remainingTasks.filter(\n    (task) =>\n      !task.locations ||\n      listContainLocation(task.locations, currentNode.location)\n  );\n  await Promise.all(\n    possibleTasks.map(async (orgTask) => {\n      const task = { ...orgTask };\n      let startTime = timeUtils.max(currentNode.time.end, task.startTime.min);\n      const parentRemainging = currentNode.remainingTasks.filter(\n        (t) => t !== orgTask\n      );\n      let endTime = timeUtils.add(startTime, task.duration);\n      const { remaining, impossible } = getImpossible(\n        parentRemainging,\n        endTime\n      );\n      const score = calculateScore({\n        tasks: [task],\n        impossible,\n      });\n      nextNodes.push({\n        parent: currentNode,\n        location: currentNode.location,\n        task,\n        remainingTasks: remaining,\n        impossibeTasks: [...impossible, ...currentNode.impossibeTasks],\n        score: currentNode.score + score,\n        status: {\n          completed: remaining.length === 0,\n          dead: isDead(impossible),\n        },\n        time: {\n          start: startTime,\n          end: endTime,\n        },\n      });\n    })\n  );\n  return nextNodes;\n};\n\nexport { getNext };\n","import { Task, Time, UserLocation } from '#/features/data';\nimport { Context, GraphNode } from '../types';\nimport { getImpossible, getNext } from './get-next';\n\nenum Strategies {\n  all = 'all',\n  allValid = 'all-valid',\n  firstValid = 'first-valid',\n  firstComplet = 'first-complete',\n}\ntype RunningStatus = {\n  current: 'running';\n  nodes: number;\n  start: Date;\n  strategy: Strategies;\n  cancel: () => void;\n};\n\ntype CompletedStatus = {\n  current: 'completed';\n  start: Date;\n  end: Date;\n  nodes: number;\n  strategy: Strategies;\n};\n\ntype Status = RunningStatus | CompletedStatus;\n\ntype BuildGraphOptions = {\n  location: UserLocation;\n  time: Time;\n  tasks: Task[];\n  context: Context;\n  strategy?: Strategies;\n  batchSize?: number;\n  sleepTime?: number;\n  callback?: (status: Status) => void;\n};\n\nconst sleep = (time: number) =>\n  new Promise((resolve) => setTimeout(resolve, time));\n\nconst fil = <T>(fn: ((item: T) => boolean)[], input: T[]): T[][] => {\n  const output: T[][] = new Array(fn.length).fill(undefined).map(() => []);\n  for (let i = 0; i < input.length; i++) {\n    for (let b = 0; b < fn.length; b++) {\n      if (fn[b](input[i])) {\n        output[b].push(input[i]);\n        break;\n      }\n    }\n  }\n  return output;\n};\n\nconst buildGraph = async ({\n  location,\n  time,\n  tasks,\n  context,\n  strategy = Strategies.allValid,\n  callback,\n  batchSize = 1000,\n  sleepTime = 10,\n}: BuildGraphOptions) => {\n  const start = new Date();\n  let nodeCount = 0;\n  let running = true;\n  const { remaining, impossible } = getImpossible(tasks, time);\n  let leafList: GraphNode[] = [\n    {\n      location,\n      time: {\n        end: time,\n        start: time,\n      },\n      score: 0,\n      remainingTasks: remaining,\n      impossibeTasks: impossible,\n      status: {\n        dead: false,\n        completed: false,\n      },\n    },\n  ];\n  const completedList: GraphNode[] = [];\n  const deadList: GraphNode[] = [];\n\n  const complete = (nodes: GraphNode[]) => {\n    if (callback) {\n      callback({\n        current: 'completed',\n        nodes: nodeCount,\n        start,\n        end: new Date(),\n        strategy,\n      });\n    }\n    return nodes.sort((a, b) => b.score - a.score);\n  };\n\n  while (true) {\n    nodeCount++;\n    if (!running) {\n      return [];\n    }\n    if (\n      leafList.length === 0 &&\n      completedList.length === 0 &&\n      strategy !== Strategies.all\n    ) {\n      strategy = Strategies.all;\n      leafList.push(...deadList);\n    }\n    const node = leafList.pop();\n    if (!node) {\n      break;\n    }\n    if (nodeCount % batchSize === 0) {\n      if (callback) {\n        callback({\n          current: 'running',\n          nodes: nodeCount,\n          strategy,\n          start,\n          cancel: () => {\n            running = false;\n          },\n        });\n      }\n      await sleep(sleepTime);\n    }\n    const next = await getNext(node, context);\n    const [alive, completed, dead] = fil(\n      [\n        (n) =>\n          (strategy === Strategies.all || !n.status.dead) &&\n          !n.status.completed,\n        (n) =>\n          !!n.status.completed &&\n          (strategy === Strategies.all || !n.status.dead),\n        (n) => n.status.dead,\n      ],\n      next\n    );\n    leafList.push(...alive);\n    if (strategy === Strategies.firstValid && completed.length > 0) {\n      return complete(completed);\n    }\n    if (completed.length > 0) {\n      completedList.push(...completed);\n    }\n    if (strategy === Strategies.firstComplet) {\n      const fullComplete = completed.find((c) => c.impossibeTasks.length === 0);\n      if (fullComplete) {\n        return complete([fullComplete]);\n      }\n    }\n    if (strategy !== Strategies.all) {\n      deadList.push(...dead);\n    }\n  }\n\n  return complete(completedList);\n};\n\nexport type { Status, BuildGraphOptions };\nexport { buildGraph, Strategies };\n","import { createDataContext } from '#/utils/data-context';\nimport { Time } from '../data';\nimport { Strategies } from './algorithm/build-graph';\n\ntype PlannerOptions = {\n  strategy: Strategies;\n  startTime: Time;\n};\n\nconst { Context: PlannerContext, Provider: PlannerProvider } =\n  createDataContext<PlannerOptions>({\n    createDefault: () => ({\n      startTime: { hour: 7, minute: 0 },\n      strategy: Strategies.firstComplet,\n    }),\n  });\n\nexport type { PlannerOptions };\nexport { PlannerContext, PlannerProvider };\n","import { createDataContext } from '#/utils/data-context';\nimport { Routine } from '../data';\n\nconst { Context: RoutinesContext, Provider: RoutinesProvider } =\n  createDataContext<{ [id: string]: Routine }>({\n    createDefault: () => ({}),\n  });\n\nexport { RoutinesContext, RoutinesProvider };\n","import { useCallback, useContext, useMemo } from 'react';\nimport { Routine } from '../data';\nimport { RoutinesContext } from './context';\n\nexport const useRoutines = () => {\n  const { data } = useContext(RoutinesContext);\n  const current = useMemo(() => Object.values(data), [data]);\n  return current;\n};\n\nexport const useSetRoutine = () => {\n  const { setData } = useContext(RoutinesContext);\n  const set = useCallback(\n    (routine: Routine) =>\n      setData((current) => ({\n        ...current,\n        [routine.id]: routine,\n      })),\n    [setData]\n  );\n\n  return set;\n};\n\nexport const useRemoveRoutine = () => {\n  const { setData } = useContext(RoutinesContext);\n  const removeRoutine = useCallback(\n    (id: string) => {\n      setData((current) => {\n        const next = { ...current };\n        delete next[id];\n        return next;\n      });\n    },\n    [setData]\n  );\n\n  return removeRoutine;\n};\n","import { useCallback, useContext, useMemo } from 'react';\nimport { Goal } from '../data';\nimport { GoalsContext } from './context';\n\nexport const useGoals = () => {\n  const { data } = useContext(GoalsContext);\n  const current = useMemo(() => Object.values(data), [data]);\n  return current;\n};\n\nexport const useSetGoals = () => {\n  const { setData } = useContext(GoalsContext);\n  const set = useCallback(\n    (goal: Goal) =>\n      setData((current) => ({\n        ...current,\n        [goal.id]: goal,\n      })),\n    [setData]\n  );\n\n  return set;\n};\n\nexport const useRemoveGoal = () => {\n  const { setData } = useContext(GoalsContext);\n  const removeRoutine = useCallback(\n    (id: string) => {\n      setData((current) => {\n        const next = { ...current };\n        delete next[id];\n        return next;\n      });\n    },\n    [setData]\n  );\n\n  return removeRoutine;\n};\n","import { timeUtils } from '#/features/data';\nimport { GraphNode, PlannedEntry } from '../types';\n\nconst constructDay = (node: GraphNode) => {\n  let current: GraphNode | undefined = node;\n  const plans: PlannedEntry[] = [];\n\n  while (current) {\n    if (current.task) {\n      plans.push({\n        type: 'task',\n        name: current.task?.title || 'start',\n        start: timeUtils.add(current.time.start, current.transition?.time || 0),\n        end: current.time.end,\n        score: current.score,\n      });\n    }\n    if (current.transition) {\n      plans.push({\n        type: 'transition',\n        start: current.time.start,\n        end: timeUtils.add(current.time.start, current.transition.time),\n        from: current.transition.from,\n        to: current.transition.to,\n      });\n    }\n    current = current.parent;\n  }\n\n  return plans.reverse();\n};\n\nexport { constructDay };\n","import { buildGraph, Strategies } from './algorithm/build-graph';\nimport { useContext } from 'react';\nimport { add } from 'date-fns';\nimport { PlannerContext } from './context';\nimport { Task, Time, UserLocation } from '../data';\nimport { useRoutines } from '../routines';\nimport { useGoals } from '../goals/hooks';\nimport { useAsyncCallback } from '../async';\nimport { Day, dayUtils } from '../day';\nimport { useGetOverride } from '../overrides';\nimport { useGetAppointments } from '../appointments';\nimport { useGetTransition } from '../location';\nimport { PlannedEntry } from './types';\nimport { constructDay } from './algorithm/construct-day';\n\nexport type PreparePlanOptions = {\n  start: Day;\n  end: Day;\n};\n\nexport type PlanOptions = PreparePlanOptions & {\n  location: UserLocation;\n};\n\nexport type PlanResultDay = {\n  day: Day;\n  start: Time;\n} & (\n  | {\n      status: 'waiting';\n    }\n  | {\n      status: 'running';\n      nodes: number;\n      strategy: Strategies;\n    }\n  | {\n      status: 'done';\n      nodes: number;\n      strategy: Strategies;\n      plan: PlannedEntry[];\n      impossible: Task[];\n    }\n);\n\nexport type PlanResult = {\n  impossible: Task[];\n  days: {\n    [day: string]: PlanResultDay;\n  };\n};\n\nconst getDays = (start: Day, end: Day): Day[] => {\n  const result: Day[] = [];\n  let currentDate = dayUtils.dayToDate(start);\n  const stopDate = dayUtils.dayToDate(end);\n  while (currentDate <= stopDate) {\n    result.push(dayUtils.dateToDay(currentDate));\n    currentDate = add(currentDate, {\n      days: 1,\n    });\n  }\n  return result;\n};\n\nconst firstValue = <T>(...args: (T | undefined)[]): T => {\n  for (let arg of args) {\n    if (typeof arg !== 'undefined') {\n      return arg;\n    }\n  }\n  return undefined as unknown as T;\n};\n\nexport const useOptions = () => {\n  const { data } = useContext(PlannerContext);\n  return data;\n};\n\nexport const useSetOptions = () => {\n  const { setData } = useContext(PlannerContext);\n  return setData;\n};\n\nconst usePreparePlan = () => {\n  const routines = useRoutines();\n  const goals = useGoals();\n  const getOverrides = useGetOverride();\n  const [getAppontments] = useGetAppointments();\n\n  const preparePlan = useAsyncCallback(\n    async ({ start, end }: PreparePlanOptions) => {\n      const days = await Promise.all(\n        getDays(start, end).map(async (day) => {\n          const overrides = await getOverrides(day);\n          const actualStart: Time = firstValue(overrides.startTime, {\n            hour: 7,\n            minute: 0,\n          });\n          const appointments = await getAppontments(day);\n          const tasks = [...routines, ...appointments]\n            .map<Task | undefined>((task) => {\n              const override = overrides.tasks[task.id];\n              if (override?.enabled === false) {\n                return undefined;\n              }\n              const result: Task = {\n                ...task,\n                startTime: {\n                  min: firstValue(override?.startMin, task.startTime.min),\n                  max: firstValue(override?.startMax, task.startTime.max),\n                },\n                duration: firstValue(override?.duration, task.duration),\n                required: firstValue(override?.required, task.required),\n              };\n              return result;\n            })\n            .filter(Boolean)\n            .map((a) => a as Exclude<typeof a, undefined>);\n\n          return {\n            day,\n            actualStart,\n            tasks,\n          };\n        })\n      );\n      return {\n        goals: [...goals],\n        days,\n      };\n    },\n    [routines, goals, getOverrides, getAppontments]\n  );\n\n  return preparePlan;\n};\n\nexport const usePlanOptions = () => {\n  const { data } = useContext(PlannerContext);\n  return data;\n};\n\nexport const useSetPlanOptions = () => {\n  const { setData } = useContext(PlannerContext);\n  return setData;\n};\n\nexport const usePlan = () => {\n  const [preparePlan] = usePreparePlan();\n  const getTransition = useGetTransition();\n  const options = usePlanOptions();\n  const createPlan = useAsyncCallback(\n    async ({ location, ...prepareOptions }: PlanOptions) => {\n      const prepared = await preparePlan(prepareOptions);\n      let result: PlanResult = {\n        impossible: [],\n        days: prepared.days.reduce(\n          (output, current) => ({\n            ...output,\n            [dayUtils.toId(current.day)]: {\n              day: current.day,\n              start: current.start,\n              status: 'waiting',\n            },\n          }),\n          {} as { [name: string]: PlanResultDay }\n        ),\n      };\n      const update = (next: PlanResult) => {\n        result = next;\n      };\n      for (let day of prepared.days) {\n        const id = dayUtils.toId(day.day);\n        const dayGoal = prepared.goals;\n        const graph = await buildGraph({\n          location,\n          time: day.start,\n          tasks: [...day.tasks, ...dayGoal],\n          strategy: options.strategy,\n          context: {\n            getTransition,\n          },\n          callback: (status) => {\n            update({\n              ...result,\n              days: {\n                ...result.days,\n                [id]: {\n                  day: day.day,\n                  start: day.start,\n                  status: 'running',\n                  nodes: status.nodes,\n                  strategy: status.strategy,\n                },\n              },\n            });\n          },\n        });\n        const [winner] = graph;\n        if (!winner) {\n          continue;\n        }\n        const plan = constructDay(winner);\n        update({\n          ...result,\n          days: {\n            ...result.days,\n            [id]: {\n              ...result.days[id],\n              impossible: winner.impossibeTasks,\n              status: 'done',\n              plan,\n            },\n          },\n        });\n        prepared.goals = prepared.goals.filter((goal) => {\n          if (!dayGoal.find((d) => d.id === goal.id)) {\n            return true;\n          }\n          if (!winner.impossibeTasks.find((d) => d.id === goal.id)) {\n            return false;\n          }\n          return true;\n        });\n      }\n\n      return {\n        ...result,\n        impossible: prepared.goals,\n      };\n    },\n    [preparePlan, getTransition, options]\n  );\n  return createPlan;\n};\n","import { useAsync, useAsyncCallback } from '#/features/async';\nimport { useContext } from 'react';\nimport { Day, useDate } from '../day';\nimport { AppointmentsContext, AppointmentsStatus } from './context';\n\nexport const useAppointmentStatus = () => {\n  const { status } = useContext(AppointmentsContext);\n  return status;\n};\n\nexport const useAppointments = () => {\n  const date = useDate();\n  const context = useContext(AppointmentsContext);\n  const result = useAsync(async () => {\n    if (context.status !== AppointmentsStatus.approved) {\n      return [];\n    }\n    const appointments = await context.getDay(date);\n    return appointments;\n  }, [context.status === AppointmentsStatus.approved && context.getDay, date]);\n  return result;\n};\n\nexport const useGetAppointments = () => {\n  const context = useContext(AppointmentsContext);\n  const result = useAsyncCallback(\n    async (date: Day) => {\n      if (context.status !== AppointmentsStatus.approved) {\n        return [];\n      }\n      const appointments = await context.getDay(date);\n      return appointments;\n    },\n    [context.status === AppointmentsStatus.approved && context.getDay]\n  );\n  return result;\n};\n","import React, { ReactNode } from 'react';\nimport { AppointmentsProvider } from './appointments';\nimport { DateProvider } from './day';\nimport { GoalsProvider } from './goals/context';\nimport { GetTransition, LocationProvider } from './location';\nimport { OverrideProvider } from './overrides';\nimport { PlannerProvider } from './planner';\nimport { RoutinesProvider } from './routines';\n\ntype SetupProps = {\n  children: ReactNode;\n  getTransit: GetTransition;\n};\n\nconst Setup: React.FC<SetupProps> = ({ children, getTransit }) => {\n  return (\n    <DateProvider>\n      <PlannerProvider storageKey=\"planner\">\n        <LocationProvider getTransition={getTransit} lookup={() => []}>\n          <AppointmentsProvider>\n            <GoalsProvider storageKey=\"goals\">\n              <RoutinesProvider storageKey=\"routines\">\n                <OverrideProvider>{children}</OverrideProvider>\n              </RoutinesProvider>\n            </GoalsProvider>\n          </AppointmentsProvider>\n        </LocationProvider>\n      </PlannerProvider>\n    </DateProvider>\n  );\n};\n\nexport type { SetupProps };\nexport { Setup };\n","import React from 'react';\nimport { Feather } from '@expo/vector-icons';\nimport { useTheme } from 'styled-components/native';\nimport { Theme } from '#/ui/theme';\n\ntype IconNames = keyof typeof Feather.glyphMap;\ntype Props = {\n  size?: number;\n  color?: keyof Theme['colors'];\n  name: IconNames;\n};\n\nfunction Icon({ size, color, name }: Props) {\n  const theme = useTheme();\n  return (\n    <Feather\n      name={name}\n      color={color ? theme.colors[color] : theme.colors.icon}\n      size={size ?? theme.sizes.icons}\n    />\n  );\n}\n\nexport type { IconNames };\nexport { Icon };\n","import ReactDOM from 'react-dom';\nimport React, { useMemo, useEffect, ReactNode } from 'react';\n\ninterface Props {\n  visible: boolean;\n  children: ReactNode;\n}\n\nconst Modal: React.FC<Props> = ({ visible, children }) => {\n  const elm = useMemo(() => {\n    const newElm = document.createElement('div');\n    newElm.style.position = 'fixed';\n    newElm.style.display = 'flex';\n    newElm.style.flexDirection = 'column';\n    newElm.style.left = '0px';\n    newElm.style.top = '0px';\n    newElm.style.width = '100%';\n    newElm.style.height = '100%';\n    newElm.style.transition = 'transform 0.3s';\n    newElm.style.transform = 'translateY(100%)';\n    return newElm;\n  }, []);\n  useEffect(() => {\n    document.body.appendChild(elm);\n    return () => {\n      document.body.removeChild(elm);\n    };\n  }, [elm]);\n  useEffect(() => {\n    if (visible) {\n      elm.style.transform = 'translateY(0)';\n    } else {\n      elm.style.transform = 'translateY(100%)';\n    }\n  }, [elm, visible]);\n\n  return ReactDOM.createPortal(<>{children}</>, elm);\n};\n\nexport default Modal;\n","import React, { ReactNode } from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport styled from 'styled-components/native';\nimport { Theme } from '#/ui/theme';\n\ntype CellProps = {\n  accessibilityRole?: TouchableOpacity['props']['accessibilityRole'];\n  accessibilityLabel?: string;\n  accessibilityHint?: string;\n  children?: ReactNode;\n  onPress?: () => any;\n  background?: string;\n  flex?: string | number;\n  direction?: 'row' | 'column';\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch';\n  opacity?: number;\n};\n\nconst Wrapper = styled.View<{\n  background?: string;\n  flex?: string | number;\n  direction?: 'row' | 'column';\n  theme: Theme;\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch';\n  opacity?: number;\n}>`\n  padding: ${({ theme }) => theme.margins.medium / 2}px;\n  ${({ background }) => (background ? `background: ${background};` : '')}\n  ${({ flex }) => (flex ? `flex: ${flex};` : '')}\n  flex-direction: ${({ direction }) => (direction ? direction : 'row')};\n  align-items: ${({ align }) => (align ? align : 'center')};\n  ${({ opacity }) => (opacity ? `opacity: ${opacity};` : '')}\n`;\n\nconst Touch = styled.TouchableOpacity``;\n\nconst Cell: React.FC<CellProps> = ({ children, onPress, ...props }) => {\n  const {\n    accessibilityLabel,\n    accessibilityRole,\n    accessibilityHint,\n    ...others\n  } = props;\n  const node = <Wrapper {...others}>{children}</Wrapper>;\n  if (onPress) {\n    return (\n      <Touch\n        accessible\n        accessibilityRole={accessibilityRole || 'button'}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityHint={accessibilityHint}\n        onPress={onPress}\n      >\n        {node}\n      </Touch>\n    );\n  }\n  return node;\n};\n\nexport type { CellProps };\nexport { Cell };\n","import styled from 'styled-components/native';\nimport { Theme } from 'theme';\n\ninterface TextProps {\n  color?: keyof Theme['colors'];\n  bold?: boolean;\n  theme: Theme;\n}\n\nconst BaseText = styled.Text<TextProps>`\n  color: ${({ color, theme }) =>\n    color ? theme.colors[color] : theme.colors.text};\n  font-weight: ${({ bold }) => (bold ? 'bold' : 'normal')};\n  font-size: ${({ theme }) => theme.font.baseSize}px;\n`;\n\nconst Jumbo = styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 2.8}px;\n  font-weight: bold;\n`;\n\nconst Title2 = styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 1.3}px;\n  font-weight: bold;\n`;\n\nconst Title1 = styled(BaseText)`\n  font-weight: bold;\n`;\n\nconst Body1 = styled(BaseText)``;\n\nconst Overline = styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 0.6}px;\n  text-transform: uppercase;\n`;\n\nconst Caption = styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 0.8}px;\n`;\n\nconst Link = styled(BaseText)`\n  text-transform: uppercase;\n`;\n\nexport type { TextProps };\nexport { Jumbo, Title2, Title1, Body1, Overline, Caption, Link };\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components/native';\nimport { Title1, Body1, Overline } from '#/ui/typography';\nimport { Cell, CellProps } from './cell';\n\ntype RowProps = CellProps & {\n  top?: ReactNode;\n  left?: ReactNode;\n  right?: ReactNode;\n  title?: ReactNode;\n  overline?: ReactNode;\n  description?: ReactNode;\n  children?: ReactNode;\n};\n\nconst Children = styled.View``;\n\nconst componentOrString = (\n  input: ReactNode,\n  Component: React.FC<{ children: ReactNode }>\n) => {\n  if (!input) {\n    return null;\n  }\n  if (typeof input === 'string') {\n    return <Component>{input}</Component>;\n  }\n  return input;\n};\n\nconst Row: React.FC<RowProps> = ({\n  top,\n  left,\n  right,\n  title,\n  overline,\n  description,\n  children,\n  ...cellProps\n}) => (\n  <Cell {...cellProps}>\n    {left}\n    <Cell flex={1} direction=\"column\" align=\"stretch\">\n      {!!top}\n      {componentOrString(overline, Overline)}\n      {componentOrString(title, Title1)}\n      {componentOrString(description, Body1)}\n      {!!children && <Children>{children}</Children>}\n    </Cell>\n    {right}\n  </Cell>\n);\n\nexport type { RowProps };\nexport { Row };\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { Cell } from './cell';\n\ninterface Props {\n  color?: string;\n  size?: number;\n  onPress?: () => void;\n}\n\nconst Icon = styled.View<{ size: number; color: string }>`\n  background: ${({ color }) => color};\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  border-radius: ${({ size }) => size / 4}px;\n`;\n\nconst PlaceholderIcon: React.FC<Props> = ({\n  color = 'red',\n  size = 24,\n  onPress,\n}) => (\n  <Cell onPress={onPress}>\n    <Icon color={color} size={size} />\n  </Cell>\n);\n\nexport { PlaceholderIcon };\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components/native';\nimport { Keyboard, Platform } from 'react-native';\n\nconst KeyboardAvoiding = styled.KeyboardAvoidingView`\n  flex: 1;\n`;\n\nconst Pressable = styled.Pressable`\n  flex: 1;\n`;\n// background-color: ${({ theme }) => theme.colors.background};\n\nconst Page: React.FC = ({ children }) => {\n  const [keyboardShown, setKeyboardShown] = useState(false);\n  useEffect(() => {\n    const keyboardDidShow = () => setKeyboardShown(true);\n    const keyboardDidHide = () => setKeyboardShown(false);\n    Keyboard.addListener('keyboardDidShow', keyboardDidShow);\n    Keyboard.addListener('keyboardDidHide', keyboardDidHide);\n\n    return () => {\n      Keyboard.removeListener('keyboardDidShow', keyboardDidShow);\n      Keyboard.removeListener('keyboardDidHide', keyboardDidHide);\n    };\n  }, []);\n  return (\n    <Pressable disabled={!keyboardShown} onPress={() => Keyboard.dismiss()}>\n      <KeyboardAvoiding behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        {children}\n      </KeyboardAvoiding>\n    </Pressable>\n  );\n};\n\nexport { Page };\n","import React, { ReactNode } from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport styled from 'styled-components/native';\nimport { Icon } from '../icon';\nimport { Row, Cell, RowProps } from '../row';\nimport { Page } from '../page';\n\ntype Props = RowProps & {\n  onClose?: () => void;\n  children: ReactNode;\n};\n\nconst Top = styled.Pressable`\n  flex: 1;\n`;\n\nconst Wrapper = styled.View`\n  background: ${({ theme }) => theme.colors.background};\n  width: 100%;\n  max-width: 500px;\n  shadow-color: ${({ theme }) => theme.colors.shadow};\n  shadow-offset: 0 0;\n  shadow-opacity: 1;\n  shadow-radius: 200px;\n  border-radius: 12px;\n  margin-bottom: -12px;\n  max-height: 80%;\n`;\n\nconst Outer = styled.View`\n  flex: 1;\n  align-items: center;\n`;\n\nconst Content = styled.ScrollView``;\n\nconst Popup: React.FC<Props> = ({ children, onClose, right, ...rowProps }) => {\n  const insets = useSafeAreaInsets();\n\n  return (\n    <Page>\n      <Outer>\n        <Top onPress={onClose} />\n        <Wrapper style={{ paddingBottom: insets.bottom + 12 }}>\n          <Row\n            {...rowProps}\n            right={\n              <>\n                {right}\n                <Cell onPress={onClose}>\n                  <Icon name=\"x-circle\" />\n                </Cell>\n              </>\n            }\n          />\n          <Content alwaysBounceVertical={false}>{children}</Content>\n        </Wrapper>\n      </Outer>\n    </Page>\n  );\n};\n\nexport { Popup };\n","import React, { ReactNode } from 'react';\nimport Wrapper from './react-modal';\nimport { Popup } from '../popup';\ntype ModalProps = {\n  visible: boolean;\n  onClose: () => void;\n  children: ReactNode;\n};\n\nconst Modal: React.FC<ModalProps> = ({ visible, onClose, children }) => (\n  <Wrapper\n    transparent\n    visible={visible}\n    animationType=\"slide\"\n    onRequestClose={onClose}\n    onDismiss={onClose}\n  >\n    <Popup onClose={onClose}>{children}</Popup>\n  </Wrapper>\n);\n\nexport { Modal };\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { TouchableOpacity } from 'react-native';\nimport { IconNames, Icon } from '../icon';\nimport { Theme } from '#/ui/theme';\nimport { Link } from '#/ui/typography';\n\ninterface Props {\n  title?: string;\n  icon?: IconNames;\n  onPress?: () => any;\n  accessibilityRole?: TouchableOpacity['props']['accessibilityRole'];\n  accessibilityLabel?: string;\n  accessibilityHint?: string;\n  type?: 'primary' | 'secondary' | 'destructive';\n}\n\nconst Touch = styled.TouchableOpacity``;\n\nconst Wrapper = styled.View<{ theme: Theme }>`\n  color: ${({ theme }) => theme.colors.primary};\n  padding: ${({ theme }) => theme.margins.small}px;\n  border-radius: ${({ theme }) => theme.sizes.corners}px;\n  align-items: center;\n`;\n\nconst Button: React.FC<Props> = ({\n  title,\n  icon,\n  type,\n  onPress,\n  accessibilityHint,\n  accessibilityRole,\n  accessibilityLabel,\n}) => (\n  <Touch\n    onPress={onPress}\n    accessible\n    accessibilityHint={accessibilityHint}\n    accessibilityRole={accessibilityRole}\n    accessibilityLabel={accessibilityLabel}\n  >\n    <Wrapper>\n      {title && <Link color={type}>{title}</Link>}\n      {icon && <Icon name={icon} color={type} />}\n    </Wrapper>\n  </Touch>\n);\n\nexport { Button };\n","import React, { ReactNode } from 'react';\nimport { Icon } from '../icon';\nimport { Row, Cell } from '../row';\n\ninterface Props {\n  title: string;\n  add?: () => void;\n  onPress?: () => void;\n  left?: ReactNode;\n}\n\nfunction Header({ title, add, onPress, left }: Props) {\n  return (\n    <Row\n      onPress={onPress}\n      left={left}\n      title={title}\n      right={\n        add && (\n          <Cell onPress={add}>\n            <Icon name=\"plus-circle\" size={18} />\n          </Cell>\n        )\n      }\n    />\n  );\n}\n\nexport { Header };\n","import React, { Fragment, ReactNode, useState } from 'react';\nimport styled from 'styled-components/native';\nimport Collapsible from 'react-native-collapsible';\nimport { Body1 } from '#/ui/typography';\nimport { Icon } from '../icon';\nimport { Row, Cell } from '../row';\nimport { Header } from './header';\n\ninterface ListProps<T> {\n  title: string;\n  items: T[];\n  startHidden?: boolean;\n  getKey: (item: T) => any;\n  render: (item: T) => ReactNode;\n  add?: () => void;\n}\n\ninterface ChildProps {\n  title: string;\n  startHidden?: boolean;\n  add?: () => void;\n  children?: ReactNode;\n}\n\nconst Wrapper = styled.View`\n  border-radius: 7px;\n  background: ${({ theme }) => theme.colors.background};\n  shadow-offset: 0 0;\n  shadow-opacity: 0.1;\n  shadow-color: ${({ theme }) => theme.colors.shadow};\n  shadow-radius: 5px;\n`;\n\nfunction Group<T = any>(props: ListProps<T> | ChildProps) {\n  const [visible, setVisible] = useState(!props.startHidden);\n  const { title, items, getKey, render, add, children } =\n    props as ListProps<T> & ChildProps;\n  return (\n    <Row>\n      <Wrapper>\n        <>\n          <Header\n            left={\n              <Cell>\n                <Icon\n                  name={visible ? 'chevron-down' : 'chevron-up'}\n                  size={18}\n                />\n              </Cell>\n            }\n            title={title}\n            add={add}\n            onPress={() => setVisible(!visible)}\n          />\n          <Collapsible collapsed={!visible}>\n            {items &&\n              items.map((item, i) => (\n                <Fragment key={getKey(item) || i}>{render(item)}</Fragment>\n              ))}\n            {children}\n            {!children && (!items || items.length === 0) && (\n              <Row\n                left={\n                  <Cell>\n                    <Icon color=\"textShade\" name=\"maximize\" />\n                  </Cell>\n                }\n              >\n                <Body1 style={{ marginLeft: 10 }} color=\"textShade\">\n                  Empty\n                </Body1>\n              </Row>\n            )}\n          </Collapsible>\n        </>\n      </Wrapper>\n    </Row>\n  );\n}\n\nexport { Group };\n","import React from 'react';\nimport { FlatList } from 'react-native';\nimport { Button } from '../button';\nimport { Icon } from '../icon';\nimport { Cell, Row, RowProps } from '../row';\n\ntype ListProps<T> = {\n  add?: () => void;\n  remove?: (item: T) => any;\n  getKey: (item: T) => string;\n  items: T[];\n  render: (item: T) => RowProps;\n};\n\nfunction List<T>({ add, remove, getKey, items, render }: ListProps<T>) {\n  return (\n    <>\n      {!!add && <Button title=\"Add\" onPress={add} />}\n      <FlatList\n        data={items}\n        keyExtractor={(item) => getKey(item)}\n        renderItem={({ item }) => {\n          const { right, ...props } = render(item);\n          return (\n            <Row\n              {...props}\n              right={\n                <>\n                  {right}\n                  {!!remove && (\n                    <Cell onPress={() => remove(item)}>\n                      <Icon name=\"trash\" color=\"destructive\" />\n                    </Cell>\n                  )}\n                </>\n              }\n            />\n          );\n        }}\n      />\n    </>\n  );\n}\n\nexport { List };\n","import React, { useMemo } from 'react';\nimport CalendarStrip from 'react-native-calendar-strip';\nimport { dayUtils, useDate, useSetDate } from '#/features/day';\nimport { useTheme } from 'styled-components/native';\n\nconst DateBar: React.FC = () => {\n  const date = useDate();\n  const theme = useTheme();\n  const setDate = useSetDate();\n  const selected = useMemo(\n    () => [\n      {\n        date: dayUtils.dayToDate(date),\n        lines: [{ color: theme.colors.icon }],\n      },\n    ],\n    [date]\n  );\n  return (\n    <CalendarStrip\n      markedDates={selected}\n      style={{\n        height: 150,\n        paddingTop: 60,\n        paddingBottom: 10,\n        backgroundColor: theme.colors.background,\n      }}\n      calendarColor={'#fff'}\n      selectedDate={dayUtils.dayToDate(date)}\n      startingDate={dayUtils.dayToDate(date)}\n      onDateSelected={(next) => {\n        setDate(dayUtils.dateToDay(next.utc().toDate()));\n      }}\n      shouldAllowFontScaling={false}\n      iconContainer={{ flex: 0.1 }}\n      calendarHeaderStyle={{\n        color: theme.colors.text,\n        fontSize: theme.font.baseSize * 1.2,\n      }}\n      highlightDateNameStyle={{\n        color: theme.colors.icon,\n        fontSize: theme.font.baseSize * 0.6,\n      }}\n      iconLeftStyle={{\n        tintColor: theme.colors.text,\n      }}\n      iconRightStyle={{\n        tintColor: theme.colors.text,\n      }}\n      highlightDateNumberStyle={{\n        color: theme.colors.icon,\n        fontSize: theme.font.baseSize * 1.2,\n      }}\n      dateNumberStyle={{\n        color: theme.colors.text,\n        fontSize: theme.font.baseSize * 1.2,\n      }}\n      dateNameStyle={{\n        color: theme.colors.text,\n        fontSize: theme.font.baseSize * 0.6,\n      }}\n    />\n  );\n};\n\nexport { DateBar };\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { Row, RowProps } from '#/ui/components/base';\n\ntype Props = RowProps & {\n  label: string;\n  placeholder?: string;\n  value: string;\n  onChangeText: (text: string) => any;\n};\n\nconst InputField = styled.TextInput`\n  background: ${({ theme }) => theme.colors.input};\n  color: ${({ theme }) => theme.colors.text};\n  padding: ${({ theme }) => theme.margins.small}px;\n  font-size: ${({ theme }) => theme.font.baseSize}px;\n  border-radius: ${({ theme }) => theme.sizes.corners}px;\n  width: 100%;\n`;\n\nconst TextInput: React.FC<Props> = ({\n  label,\n  placeholder,\n  value,\n  onChangeText,\n  children,\n  ...row\n}) => {\n  return (\n    <Row overline={label} {...row}>\n      <InputField\n        placeholder={placeholder}\n        value={value}\n        onChangeText={onChangeText}\n      />\n      {children}\n    </Row>\n  );\n};\n\nexport { TextInput };\n","import React from 'react';\nimport { Row, RowProps } from '#/ui/components/base';\n\ntype CheckboxProps = RowProps & {\n  value?: boolean;\n  label: string;\n  onChange: (value: boolean) => void;\n};\n\nconst Checkbok: React.FC<CheckboxProps> = ({\n  value,\n  label,\n  onChange,\n  ...rowProps\n}) => (\n  <Row\n    {...rowProps}\n    overline={label}\n    title={value ? 'Yes' : 'No'}\n    onPress={() => onChange(!value)}\n  />\n);\n\nexport { Checkbok };\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { Row, RowProps } from '#/ui/components/base';\nimport { Time, timeUtils } from '#/features/data';\n\ntype Props = RowProps & {\n  label: string;\n  placeholder?: string;\n  value?: Time;\n  onChange: (time?: Time) => any;\n};\n\nconst TimeField = styled.TextInput`\n  background: ${({ theme }) => theme.colors.input};\n  color: ${({ theme }) => theme.colors.text};\n  padding: ${({ theme }) => theme.margins.small}px;\n  font-size: ${({ theme }) => theme.font.baseSize}px;\n  border-radius: ${({ theme }) => theme.sizes.corners}px;\n  width: 100%;\n`;\n\nconst TimeInput: React.FC<Props> = ({\n  label,\n  placeholder,\n  value,\n  onChange,\n  children,\n  ...row\n}) => {\n  return (\n    <Row overline={label} {...row}>\n      <TimeField\n        placeholder={placeholder}\n        value={value ? timeUtils.timeToString(value) : ''}\n        onChangeText={(text) =>\n          onChange(text ? timeUtils.stringToTime(text) : undefined)\n        }\n      />\n      {children}\n    </Row>\n  );\n};\n\nexport { TimeInput };\n","import React, { useState } from 'react';\nimport { Calendar } from 'react-native-calendars';\nimport { useTheme } from 'styled-components/native';\nimport { Row, Button, Modal } from '#/ui/components/base';\nimport { Day, dayUtils } from '#/features/day';\n\ntype Props = {\n  label: string;\n  selected?: Day;\n} & (\n  | {\n      allowClear: true;\n      onSelect: (input?: Day) => void;\n    }\n  | {\n      allowClear?: false;\n      onSelect: (input: Day) => void;\n    }\n);\n\nconst DateInput: React.FC<Props> = ({\n  label,\n  selected,\n  onSelect,\n  allowClear,\n}) => {\n  const theme = useTheme();\n  const [visible, setVisible] = useState(false);\n  const marked: any = {};\n  if (selected) {\n    marked[dayUtils.toId(selected)] = {\n      selected: true,\n      marked: true,\n      selectedColor: theme.colors.primary,\n    };\n  }\n\n  return (\n    <Row\n      overline={label}\n      onPress={() => setVisible(true)}\n      title={selected ? dayUtils.toId(selected) : 'Not set'}\n    >\n      <Modal visible={visible} onClose={() => setVisible(false)}>\n        {visible && (\n          <Calendar\n            showWeekNumbers={true}\n            markedDates={marked}\n            hideArrows={false}\n            enableSwipeMonths={true}\n            onDayPress={({ year, month, day }) => {\n              onSelect({ year, month, date: day });\n              setVisible(false);\n            }}\n            current={selected ? dayUtils.toId(selected) : undefined}\n          />\n        )}\n        {allowClear && (\n          <Row>\n            <Button\n              title=\"Clear\"\n              onPress={() => {\n                onSelect(undefined as any);\n                setVisible(false);\n              }}\n            />\n          </Row>\n        )}\n      </Modal>\n    </Row>\n  );\n};\n\nexport default DateInput;\n","import { Body1 } from '#/ui/typography';\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components/native';\nimport { Row, RowProps, Cell, Icon } from '../../base';\n\ntype Props<T> = {\n  label: string;\n  setEnabled: (enabled: boolean) => void;\n  enabled: boolean;\n  onChange: (items: T[]) => void;\n  items: T[];\n  enabledText: string;\n  disabledText: string;\n  selected?: T[];\n  render: (item: T) => RowProps;\n  getKey: (item: T) => string;\n};\n\nconst Wrapper = styled.View`\n  border-radius: 5px;\n  background: ${({ theme }) => theme.colors.shade};\n  border-radius: 7px;\n  shadow-offset: 0 0;\n  shadow-opacity: 0.1;\n  shadow-color: ${({ theme }) => theme.colors.shadow};\n  shadow-radius: 5px;\n`;\n\nconst Top = styled.View`\n  flex-direction: row;\n`;\n\nconst Touch = styled.TouchableOpacity`\n  flex: 1;\n`;\n\nconst Content = styled.View``;\n\nconst TopButton = styled.View<{ selected: boolean }>`\n  background: ${({ selected, theme }) =>\n    selected ? theme.colors.shade : theme.colors.background};\n  padding: ${({ theme }) => theme.margins.small}px;\n  align-items: center;\n  justify-content: center;\n`;\n\nfunction OptionalSelector<T>({\n  label,\n  enabled,\n  setEnabled,\n  onChange,\n  items,\n  enabledText,\n  disabledText,\n  selected,\n  render,\n  getKey,\n}: Props<T>) {\n  const toggle = useCallback(\n    (item: T) => {\n      if (!selected) {\n        return onChange([item]);\n      }\n      const nextId = getKey(item);\n      const current = selected.find((i) => getKey(i) === nextId);\n      if (current) {\n        onChange(selected.filter((i) => i !== current));\n      } else {\n        onChange([...selected, item]);\n      }\n    },\n    [selected, getKey]\n  );\n  return (\n    <Row overline={label}>\n      <Wrapper>\n        <Top>\n          <Touch onPress={() => setEnabled(false)}>\n            <TopButton selected={!enabled}>\n              <Body1>{disabledText}</Body1>\n            </TopButton>\n          </Touch>\n          <Touch onPress={() => setEnabled(true)}>\n            <TopButton selected={enabled}>\n              <Body1>{enabledText}</Body1>\n            </TopButton>\n          </Touch>\n        </Top>\n        {enabled && (\n          <Content>\n            {items.map((item) => {\n              const { left, ...props } = render(item);\n              const isSelected = !!selected && selected.includes(item);\n              return (\n                <Row\n                  key={getKey(item)}\n                  {...props}\n                  left={\n                    <>\n                      <Cell onPress={() => toggle(item)}>\n                        <Icon name={isSelected ? 'check-circle' : 'circle'} />\n                      </Cell>\n                      {left}\n                    </>\n                  }\n                />\n              );\n            })}\n          </Content>\n        )}\n      </Wrapper>\n    </Row>\n  );\n}\n\nexport { OptionalSelector };\n","import { useMemo } from 'react';\nimport { useAppointments } from '../appointments';\nimport { useAsyncCallback } from '../async';\nimport { Task, TaskType } from '../data';\nimport { useGoals, useRemoveGoal, useSetGoals } from '../goals/hooks';\nimport { useRemoveRoutine, useRoutines, useSetRoutine } from '../routines';\n\nexport const useTasks = (type?: TaskType) => {\n  const [appointments] = useAppointments();\n  const routines = useRoutines();\n  const goals = useGoals();\n\n  const tasks = useMemo<Task[]>(() => {\n    if (!type) {\n      return [...(appointments || []), ...routines, ...goals];\n    }\n    const map = {\n      [TaskType.routine]: routines,\n      [TaskType.appointment]: appointments,\n      [TaskType.goal]: goals,\n    };\n    return map[type] || [];\n  }, [appointments, routines, goals, type]);\n\n  return tasks;\n};\n\nexport const useSetTask = () => {\n  const setRoutine = useSetRoutine();\n  const setGoal = useSetGoals();\n\n  const result = useAsyncCallback(\n    async (task: Task) => {\n      if (task.type === TaskType.routine) {\n        await setRoutine(task);\n      } else if (task.type === TaskType.goal) {\n        await setGoal(task);\n      }\n    },\n    [setRoutine, setGoal]\n  );\n  return result;\n};\n\nexport const useRemoveTask = () => {\n  const removeRoutine = useRemoveRoutine();\n  const removeGoal = useRemoveGoal();\n\n  const result = useAsyncCallback(\n    async (task: Task) => {\n      if (task.type === TaskType.routine) {\n        removeRoutine(task.id);\n      } else if (task.type === TaskType.goal) {\n        removeGoal(task.id);\n      }\n    },\n    [removeRoutine, removeGoal]\n  );\n  return result;\n};\n","import React from 'react';\nimport { Task } from '#/features/data';\nimport { Row, RowProps } from '../../base';\n\ntype Props = RowProps & {\n  item: Task;\n};\n\nconst TaskListItem: React.FC<Props> = ({ item, ...rowProps }) => {\n  return <Row {...rowProps} title={item.title} />;\n};\n\nexport { TaskListItem };\n","import React, { useCallback } from 'react';\nimport { TaskType } from '#/features/data';\nimport { useTasks } from '#/features/tasks';\nimport { Group } from '#/ui/components/base';\nimport { RootNavigationProp } from '#/ui/router';\nimport { useNavigation } from '@react-navigation/native';\nimport { TaskListItem } from '../list-item';\n\ntype Props = {\n  type: TaskType;\n};\n\nconst TaskGroup: React.FC<Props> = ({ type }) => {\n  const { navigate } = useNavigation<RootNavigationProp>();\n  const tasks = useTasks(type);\n\n  const add = useCallback(\n    (taskType: TaskType) => {\n      navigate('add-task', {\n        type: taskType,\n      });\n    },\n    [navigate]\n  );\n\n  return (\n    <Group\n      title={type}\n      add={() => add(type)}\n      items={tasks || []}\n      getKey={(task) => task.id}\n      render={(task) => (\n        <TaskListItem\n          item={task}\n          onPress={() => {\n            navigate('set-override', { id: task.id });\n          }}\n        />\n      )}\n    />\n  );\n};\n\nexport { TaskGroup };\n","import React from 'react';\nimport { useAppointmentStatus } from '#/features/appointments';\nimport { AppointmentsStatus } from '#/features/appointments/context';\nimport { TaskType } from '#/features/data';\nimport { dayUtils, useDate } from '#/features/day';\nimport {\n  useSetStartTimeOverride,\n  useStartTimeOverride,\n} from '#/features/overrides';\nimport { DateBar } from '#/ui/components/date';\nimport { TimeInput } from '#/ui/components/form';\nimport { TaskGroup } from '#/ui/components/tasks/group';\n\nconst DayScreen: React.FC = () => {\n  const date = useDate();\n  const appointmentStatus = useAppointmentStatus();\n  const startTimeOverride = useStartTimeOverride();\n  const [setStartTimeOverride] = useSetStartTimeOverride();\n\n  return (\n    <>\n      <DateBar />\n      <TimeInput\n        key={dayUtils.toId(date)}\n        label=\"Start time\"\n        value={startTimeOverride}\n        onChange={setStartTimeOverride}\n      />\n      {appointmentStatus === AppointmentsStatus.rejected && (\n        <TaskGroup type={TaskType.appointment} />\n      )}\n      <TaskGroup type={TaskType.routine} />\n      <TaskGroup type={TaskType.goal} />\n    </>\n  );\n};\n\nexport { DayScreen };\n","import { useAsyncCallback } from '#/features/async';\nimport { nanoid } from 'nanoid';\nimport { Task, TaskType, Time, UserLocation } from '#/features/data';\nimport { useLocations } from '#/features/location';\nimport { useSetTask, useTasks } from '#/features/tasks';\nimport { Button, Cell, Group, Popup, Row } from '#/ui/components/base';\nimport {\n  Checkbok,\n  TextInput,\n  TimeInput,\n  OptionalSelector,\n} from '#/ui/components/form';\nimport { RootNavigationProp, TaskAddScreenRouteProp } from '#/ui/router';\nimport { Overline } from '#/ui/typography';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\n\nconst SideBySide = styled.View`\n  flex-direction: row;\n`;\n\nconst dayNames = [\n  'Monday',\n  'Tuesday',\n  'Wednsday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\n\nconst days = new Array(7).fill(undefined).map((_, i) => ({\n  id: i,\n  name: dayNames[i],\n}));\n\nconst TaskAddScreen: React.FC = () => {\n  const {\n    params: { type, id },\n  } = useRoute<TaskAddScreenRouteProp>();\n  const { navigate, goBack } = useNavigation<RootNavigationProp>();\n  const [currentId] = useState(id || nanoid());\n  const [setTask] = useSetTask();\n  const tasks = useTasks();\n  const [currentType, setCurrentType] = useState<TaskType>(type);\n\n  const locations = useLocations();\n  const [title, setTitle] = useState('');\n  const [maxStart, setMaxStart] = useState<Time>();\n  const [minStart, setMinStart] = useState<Time>();\n  const [duration, setDuration] = useState('');\n  const [hasLocation, setHasLocation] = useState(false);\n  const [selectedLocations, setSelectedLocations] = useState<UserLocation[]>(\n    []\n  );\n  const [hasDays, setHasDays] = useState(false);\n  const [selectedDays, setSelectedDays] = useState<typeof days>([]);\n  const [required, setRequired] = useState(false);\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    const current = tasks.find((t) => t.id === id);\n    if (!current) {\n      return;\n    }\n    setTitle(current.title);\n    setMaxStart(current.startTime.max);\n    setMinStart(current.startTime.min);\n    setDuration(current.duration?.toString() || '');\n    setHasLocation(!!current.locations);\n    setSelectedLocations(current.locations || []);\n    setCurrentType(current.type || TaskType.goal);\n    setRequired(current.required);\n    if (current.type === TaskType.goal || current.type === TaskType.routine) {\n      setHasDays(!!current.days);\n    }\n  }, [id, tasks]);\n\n  const [save] = useAsyncCallback(async () => {\n    const task: Partial<Task> = {\n      id: currentId,\n      title,\n      type: currentType,\n      required,\n      startTime: {\n        max: maxStart!,\n        min: minStart!,\n      },\n      duration: parseInt(duration, 10),\n      locations: hasLocation ? selectedLocations : undefined,\n    };\n    if (task.type === TaskType.goal || task.type === TaskType.routine) {\n      task.days = hasDays\n        ? new Array(7)\n            .fill(undefined)\n            .map((_, i) => !!selectedDays.find((d) => d.id === i))\n        : undefined;\n    }\n    await setTask(task as Task);\n    navigate('main');\n  }, [\n    title,\n    currentId,\n    maxStart,\n    minStart,\n    duration,\n    hasLocation,\n    selectedLocations,\n    hasDays,\n    selectedDays,\n    required,\n  ]);\n\n  return (\n    <Popup title={type ? `Add ${type}` : `Update ${title}`} onClose={goBack}>\n      <Group title=\"Basic\">\n        <TextInput label=\"Title\" value={title} onChangeText={setTitle} />\n        <SideBySide>\n          <TimeInput\n            flex={1}\n            label=\"Min start\"\n            value={minStart}\n            onChange={setMinStart}\n          />\n          <TimeInput\n            flex={1}\n            label=\"Max start\"\n            value={maxStart}\n            onChange={setMaxStart}\n          />\n        </SideBySide>\n        <TextInput\n          label=\"Duration\"\n          value={duration}\n          onChangeText={setDuration}\n          right={\n            <Cell>\n              <Overline>min</Overline>\n            </Cell>\n          }\n        />\n      </Group>\n      <Group title=\"Optional\" startHidden>\n        <OptionalSelector\n          label=\"Location\"\n          enabled={hasLocation}\n          items={locations}\n          selected={selectedLocations}\n          onChange={setSelectedLocations}\n          render={(location) => ({\n            title: location.title,\n          })}\n          getKey={(location) => location.id}\n          setEnabled={setHasLocation}\n          disabledText=\"Anywhere\"\n          enabledText=\"Specific location\"\n        />\n        <OptionalSelector\n          label=\"Days\"\n          enabled={hasDays}\n          items={days}\n          selected={selectedDays}\n          onChange={setSelectedDays}\n          render={(day) => ({\n            title: day.name,\n          })}\n          getKey={(day) => day.id.toString()}\n          setEnabled={setHasDays}\n          disabledText=\"Any day\"\n          enabledText=\"Specific days\"\n        />\n        <Checkbok label=\"Required\" onChange={setRequired} value={required} />\n        {type === TaskType.goal && (\n          <SideBySide>\n            <TextInput label=\"Start\" flex={1} />\n            <TextInput label=\"Deadline\" flex={1} />\n          </SideBySide>\n        )}\n      </Group>\n      <Row>\n        <Button onPress={save} title=\"Save\" type=\"primary\" />\n      </Row>\n    </Popup>\n  );\n};\n\nexport { TaskAddScreen };\n","import React from 'react';\nimport { TaskType } from '#/features/data';\nimport { Page, Row } from '#/ui/components/base';\nimport { MoreScreenNavigationProps } from '#/ui/router';\nimport { useNavigation } from '@react-navigation/native';\n\nconst MoreScreen: React.FC = () => {\n  const { navigate } = useNavigation<MoreScreenNavigationProps>();\n\n  return (\n    <Page>\n      <Row title=\"Calendars\" />\n      <Row title=\"Locations\" onPress={() => navigate('locations')} />\n      <Row\n        title=\"Routines\"\n        onPress={() => navigate('tasks', { type: TaskType.routine })}\n      />\n      <Row\n        title=\"Goals\"\n        onPress={() => navigate('tasks', { type: TaskType.goal })}\n      />\n    </Page>\n  );\n};\n\nexport { MoreScreen };\n","import React from 'react';\nimport { useLocations, useRemoveLocation } from '#/features/location';\nimport { List, Page } from '#/ui/components/base';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootNavigationProp } from '#/ui/router';\n\nconst LocationListScreen: React.FC = () => {\n  const { navigate } = useNavigation<RootNavigationProp>();\n  const locations = useLocations();\n  const removeLocation = useRemoveLocation();\n\n  return (\n    <Page>\n      <List\n        items={locations}\n        remove={(l) => removeLocation(l.id)}\n        getKey={(l) => l.id}\n        add={() => navigate('set-location', {})}\n        render={(item) => ({\n          title: item.title,\n        })}\n      />\n    </Page>\n  );\n};\n\nexport { LocationListScreen };\n","import React, { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useAsyncCallback } from '#/features/async';\nimport { useLocations, useSetLocation } from '#/features/location';\nimport { Button, Popup, Row } from '#/ui/components/base';\nimport { TextInput } from '#/ui/components/form';\nimport { LocationSetScreenRouteProp, RootNavigationProp } from '#/ui/router';\nimport { useNavigation, useRoute } from '@react-navigation/native';\n\nconst LocationSetScreen: React.FC = () => {\n  const {\n    params: { id = nanoid() },\n  } = useRoute<LocationSetScreenRouteProp>();\n  const { navigate } = useNavigation<RootNavigationProp>();\n  const locations = useLocations();\n  const [title, setTitle] = useState('');\n  const setLocation = useSetLocation();\n\n  useEffect(() => {\n    const current = locations.find((l) => l.id === id);\n    if (!current) {\n      return;\n    }\n    setTitle(current.title);\n  }, [id, locations]);\n\n  const [save] = useAsyncCallback(async () => {\n    await setLocation({\n      id,\n      title,\n      position: { longitute: 0, latitude: 0 },\n    });\n    navigate('main');\n  }, [id, title]);\n\n  return (\n    <Popup title=\"Edit location\">\n      <TextInput\n        label=\"What should it call the location?\"\n        value={title}\n        onChangeText={setTitle}\n      />\n      <Row>\n        <Button title=\"Save\" onPress={save} />\n      </Row>\n    </Popup>\n  );\n};\n\nexport { LocationSetScreen };\n","import React from 'react';\nimport { useRemoveTask, useTasks } from '#/features/tasks';\nimport { List, Page } from '#/ui/components/base';\nimport { RootNavigationProp, TaskListScreenRouteProp } from '#/ui/router';\nimport { useNavigation, useRoute } from '@react-navigation/native';\n\nconst TaskListScreen: React.FC = () => {\n  const {\n    params: { type },\n  } = useRoute<TaskListScreenRouteProp>();\n  const { navigate } = useNavigation<RootNavigationProp>();\n  const tasks = useTasks(type);\n  const [removeTask] = useRemoveTask();\n\n  return (\n    <Page>\n      <List\n        items={tasks}\n        remove={removeTask}\n        getKey={(l) => l.id}\n        add={() => navigate('add-task', { type })}\n        render={(item) => ({\n          title: item.title,\n          onPress: () => {\n            navigate('add-task', { id: item.id });\n          },\n        })}\n      />\n    </Page>\n  );\n};\n\nexport { TaskListScreen };\n","import { useAsyncCallback } from '#/features/async';\nimport { Time, timeUtils, UserLocation } from '#/features/data';\nimport { useLocations } from '#/features/location';\nimport { useTasks } from '#/features/tasks';\nimport { Button, Cell, Popup, Row } from '#/ui/components/base';\nimport {\n  Checkbok,\n  TextInput,\n  TimeInput,\n  OptionalSelector,\n} from '#/ui/components/form';\nimport { RootNavigationProp, TaskAddScreenRouteProp } from '#/ui/router';\nimport { Overline } from '#/ui/typography';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components/native';\nimport {\n  Override,\n  useClearTaskOverride,\n  useOverrides,\n  useSetTaskOverride,\n} from '#/features/overrides';\n\nconst SideBySide = styled.View`\n  flex-direction: row;\n  justify-content: flex-end;\n`;\n\nconst dayNames = [\n  'Monday',\n  'Tuesday',\n  'Wednsday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\n\nconst days = new Array(7).fill(undefined).map((_, i) => ({\n  id: i,\n  name: dayNames[i],\n}));\n\nconst OverrideSetScreen: React.FC = () => {\n  const {\n    params: { id },\n  } = useRoute<TaskAddScreenRouteProp>();\n  const { navigate, goBack } = useNavigation<RootNavigationProp>();\n  const [setOverride] = useSetTaskOverride();\n  const [clearOverrides] = useClearTaskOverride();\n  const overrides = useOverrides();\n  const tasks = useTasks();\n  const task = useMemo(() => tasks.find((t) => t.id === id)!, [tasks, id]);\n\n  const locations = useLocations();\n  const [maxStart, setMaxStart] = useState<Time>();\n  const [minStart, setMinStart] = useState<Time>();\n  const [duration, setDuration] = useState('');\n  const [hasLocation, setHasLocation] = useState(false);\n  const [selectedLocations, setSelectedLocations] = useState<UserLocation[]>(\n    []\n  );\n  const [hasDays, setHasDays] = useState(false);\n  const [selectedDays, setSelectedDays] = useState<typeof days>([]);\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    const current = overrides.tasks[id];\n    if (!current) {\n      return;\n    }\n    setMinStart(current.startMin);\n    setMaxStart(current.startMax);\n    setDuration(current.duration?.toString() || '');\n    setHasLocation(!!current.locations);\n    setSelectedLocations(current.locations || []);\n  }, [id, overrides.tasks]);\n\n  const [save] = useAsyncCallback(async () => {\n    const override: Override = {\n      startMin: minStart,\n      startMax: maxStart,\n      duration: duration ? parseInt(duration, 10) : undefined,\n      locations: hasLocation ? selectedLocations : undefined,\n    };\n    await setOverride(id, override);\n    navigate('main');\n  }, [\n    id,\n    maxStart,\n    minStart,\n    duration,\n    hasLocation,\n    selectedLocations,\n    hasDays,\n    selectedDays,\n  ]);\n\n  const [clear] = useAsyncCallback(async () => {\n    await clearOverrides(id);\n    navigate('main');\n  }, [id, clearOverrides]);\n\n  return (\n    <Popup title={`Overrides for ${task.title}`} onClose={goBack}>\n      <SideBySide>\n        <TimeInput\n          flex={1}\n          placeholder={\n            task.startTime.min\n              ? timeUtils.timeToString(task.startTime.min)\n              : undefined\n          }\n          label=\"Min start\"\n          value={minStart}\n          onChange={setMinStart}\n        />\n        <TimeInput\n          flex={1}\n          placeholder={\n            task.startTime.max\n              ? timeUtils.timeToString(task.startTime.max)\n              : undefined\n          }\n          label=\"Max start\"\n          value={maxStart}\n          onChange={setMaxStart}\n        />\n      </SideBySide>\n      <TextInput\n        label=\"Duration\"\n        value={duration}\n        onChangeText={setDuration}\n        right={\n          <Cell>\n            <Overline>min</Overline>\n          </Cell>\n        }\n      />\n      <OptionalSelector\n        label=\"Location\"\n        enabled={hasLocation}\n        items={locations}\n        selected={selectedLocations}\n        onChange={setSelectedLocations}\n        render={(location) => ({\n          title: location.title,\n        })}\n        getKey={(location) => location.id}\n        setEnabled={setHasLocation}\n        disabledText=\"Anywhere\"\n        enabledText=\"Specific location\"\n      />\n      <OptionalSelector\n        label=\"Days\"\n        enabled={hasDays}\n        items={days}\n        selected={selectedDays}\n        onChange={setSelectedDays}\n        render={(day) => ({\n          title: day.name,\n        })}\n        getKey={(day) => day.id.toString()}\n        setEnabled={setHasDays}\n        disabledText=\"Any day\"\n        enabledText=\"Specific days\"\n      />\n      <SideBySide>\n        <Checkbok label=\"Required\" flex={1} />\n        <TextInput label=\"Priority\" flex={1} />\n      </SideBySide>\n      <Row>\n        <SideBySide>\n          <Button onPress={clear} title=\"Clear\" type=\"destructive\" />\n          <Button onPress={save} title=\"Save\" type=\"primary\" />\n        </SideBySide>\n      </Row>\n    </Popup>\n  );\n};\n\nexport { OverrideSetScreen };\n","import React, { useMemo } from 'react';\nimport { PlannedTask } from '#/features/planner/types';\nimport chroma from 'chroma-js';\nimport styled from 'styled-components/native';\nimport stringToColor from 'string-to-color';\nimport { timeUtils } from '#/features/data';\nimport { Body1 } from '#/ui/typography';\n\ntype Props = {\n  task: PlannedTask;\n  onPress?: () => void;\n};\n\nconst Time = styled.Text<{ background: string }>`\n  font-size: 10px;\n  font-weight: bold;\n`;\n\nconst TimeBox = styled.View<{\n  background: string;\n}>`\n  margin-right: 10px;\n  width: 50px;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Filler = styled.View`\n  margin: 10px;\n  width: 50px;\n  height: 50px;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Block = styled.View<{\n  background: string;\n  height: number;\n}>`\n  background: ${({ background }) => background};\n  height: ${({ height }) => height / 3}px;\n  max-height: 100px;\n  margin: 5px;\n  flex-direction: row;\n  align-items: center;\n  border-radius: 15px;\n  overflow: hidden;\n  border: solid 1px\n    ${({ background }) =>\n      background === 'transparent'\n        ? background\n        : chroma(background).darken(0.3).hex()};\n`;\n\nconst Main = styled.View`\n  flex: 1;\n`;\n\nconst Touch = styled.TouchableOpacity``;\n\nconst PlanDayTask: React.FC<Props> = ({ task, onPress }) => {\n  const color = useMemo(\n    () =>\n      chroma(stringToColor(task.name))\n        .luminance(0.7)\n        .saturate(1)\n        .brighten(0.6)\n        .hex(),\n    [task.name]\n  );\n  const height = useMemo(\n    () =>\n      timeUtils.timeToMinutes(task.end) - timeUtils.timeToMinutes(task.start),\n    [task.start, task.end]\n  );\n  const view = (\n    <Block height={Math.max(70, height * 10)} background={color}>\n      <TimeBox background={color}>\n        <Time background={color}>{timeUtils.timeToString(task.start)}</Time>\n        <Time background={color}>{timeUtils.timeToString(task.end)}</Time>\n      </TimeBox>\n      <Main>\n        <Body1>{task.name}</Body1>\n      </Main>\n      <Filler />\n    </Block>\n  );\n\n  if (onPress) {\n    return <Touch onPress={onPress}>{view}</Touch>;\n  }\n  return view;\n};\n\nexport { PlanDayTask };\n","import React from 'react';\nimport { dayUtils } from '#/features/day';\nimport { PlanResultDay } from '#/features/planner';\nimport { Body1, Jumbo } from '#/ui/typography';\nimport { PlanDayTask } from './task';\n\ntype Props = {\n  day: PlanResultDay;\n};\n\nconst PlanDay: React.FC<Props> = ({ day }) => {\n  if (day.status === 'waiting') {\n    return <></>;\n  }\n  if (day.status === 'running') {\n    return <Body1>Running</Body1>;\n  }\n  return (\n    <>\n      <Jumbo>{dayUtils.toId(day.day)}</Jumbo>\n      {day.plan.map((item) => {\n        if (item.type === 'task') {\n          return <PlanDayTask task={item} />;\n        }\n        return (\n          <Body1>\n            Transit {item.from.title} to {item.to.title}\n          </Body1>\n        );\n      })}\n    </>\n  );\n};\n\nexport { PlanDay };\n","import { Day, dayUtils } from '#/features/day';\nimport { usePlan } from '#/features/planner';\nimport { Button } from '#/ui/components/base';\nimport DateInput from '#/ui/components/form/date';\nimport { PlanDay } from '#/ui/components/plan';\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components/native';\n\nconst Scroll = styled.ScrollView`\n  flex: 1;\n`;\nconst Wrapper = styled.View`\n  margin: 60px 0;\n`;\n\nconst PlanScreen: React.FC = () => {\n  const [start, setStart] = useState<Day>(dayUtils.today());\n  const [end, setEnd] = useState<Day>(dayUtils.today());\n  const [plan, { result }] = usePlan();\n\n  const runPlanning = useCallback(\n    () =>\n      plan({\n        start,\n        end,\n        location: { id: 'sdf', title: 'sdf' },\n      }),\n    [start, end, plan]\n  );\n\n  return (\n    <Scroll>\n      <Wrapper>\n        <DateInput label=\"Start date\" selected={start} onSelect={setStart} />\n        <DateInput label=\"End date\" selected={end} onSelect={setEnd} />\n        <Button onPress={runPlanning} title=\"Plan\" />\n        {!!result && (\n          <>\n            {Object.entries(result.days).map(([key, day]) => (\n              <PlanDay key={key} day={day} />\n            ))}\n          </>\n        )}\n      </Wrapper>\n    </Scroll>\n  );\n};\n\nexport { PlanScreen };\n","import React, { useMemo } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useTheme } from 'styled-components/native';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Icon } from '../components/base';\nimport { DayScreen } from '../screens/day';\nimport { TaskAddScreen } from '../screens/task/add';\nimport { MainTabParamList, RootStackParamList } from './types';\nimport { Platform } from 'react-native';\nimport { MoreScreen } from '../screens/more';\nimport { LocationListScreen } from '../screens/locations/list';\nimport { LocationSetScreen } from '../screens/locations/set';\nimport { TaskListScreen } from '../screens/task/list';\nimport { OverrideSetScreen } from '../screens/task/overrides';\nimport { PlanScreen } from '../screens/plan';\n\nconst MoreStackNavigator = createNativeStackNavigator();\n\nconst MoreStack: React.FC = () => (\n  <MoreStackNavigator.Navigator>\n    <MoreStackNavigator.Screen name=\"more-main\" component={MoreScreen} />\n    <MoreStackNavigator.Screen\n      name=\"locations\"\n      component={LocationListScreen}\n    />\n    <MoreStackNavigator.Screen name=\"tasks\" component={TaskListScreen} />\n  </MoreStackNavigator.Navigator>\n);\n\nconst MainTabsNvaigator = createBottomTabNavigator<MainTabParamList>();\n\nconst MainTabs: React.FC = () => {\n  const theme = useTheme();\n  return (\n    <MainTabsNvaigator.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: theme.colors.primary,\n      }}\n    >\n      <MainTabsNvaigator.Screen\n        options={{\n          headerShown: false,\n          tabBarLabel: 'Days',\n          tabBarIcon: ({ focused }) => (\n            <Icon color={focused ? 'primary' : 'text'} name=\"check-square\" />\n          ),\n        }}\n        name=\"day\"\n        component={DayScreen}\n      />\n      <MainTabsNvaigator.Screen\n        options={{\n          headerShown: false,\n          tabBarLabel: 'Plan',\n          tabBarIcon: ({ focused }) => (\n            <Icon color={focused ? 'primary' : 'text'} name=\"check-square\" />\n          ),\n        }}\n        name=\"plan\"\n        component={PlanScreen}\n      />\n      <MainTabsNvaigator.Screen\n        options={{\n          headerShown: false,\n          tabBarLabel: 'More',\n          tabBarIcon: ({ focused }) => (\n            <Icon color={focused ? 'primary' : 'text'} name=\"more-vertical\" />\n          ),\n        }}\n        name=\"more\"\n        component={MoreStack}\n      />\n    </MainTabsNvaigator.Navigator>\n  );\n};\n\nconst RootNavigator =\n  Platform.OS === 'web'\n    ? createStackNavigator<RootStackParamList>()\n    : createNativeStackNavigator<RootStackParamList>();\n\nconst Root: React.FC = () => (\n  <RootNavigator.Navigator\n    screenOptions={{ headerShown: false, animationEnabled: true }}\n  >\n    <RootNavigator.Group>\n      <RootNavigator.Screen name=\"main\" component={MainTabs} />\n    </RootNavigator.Group>\n    <RootNavigator.Group screenOptions={{ presentation: 'transparentModal' }}>\n      <RootNavigator.Screen name=\"add-task\" component={TaskAddScreen} />\n      <RootNavigator.Screen name=\"set-location\" component={LocationSetScreen} />\n      <RootNavigator.Screen name=\"set-override\" component={OverrideSetScreen} />\n    </RootNavigator.Group>\n  </RootNavigator.Navigator>\n);\n\nconst Router: React.FC = () => {\n  const theme = useTheme();\n  const baseTheme = useMemo(() => DefaultTheme, []);\n  const navigationTheme = useMemo(\n    () => ({\n      ...baseTheme,\n      colors: {\n        ...baseTheme.colors,\n        background: theme.colors.shade,\n        card: theme.colors.background,\n        text: theme.colors.text,\n      },\n    }),\n    [baseTheme, theme]\n  );\n  return (\n    <NavigationContainer theme={navigationTheme}>\n      <Root />\n    </NavigationContainer>\n  );\n};\n\nexport { Router };\n","import { Theme } from './theme';\n\nconst light: Theme = {\n  colors: {\n    primary: '#6c5ce7',\n    icon: '#6c5ce7',\n    destructive: '#e74c3c',\n    shade: '#ededed',\n    input: '#ddd',\n    secondary: 'blue',\n    shadow: '#000',\n    background: '#fff',\n    text: '#000',\n    textShade: '#999',\n  },\n  sizes: {\n    corners: 5,\n    icons: 24,\n  },\n  margins: {\n    small: 8,\n    medium: 16,\n    large: 24,\n  },\n  font: {\n    baseSize: 14,\n  },\n};\n\nexport { light };\n","import 'react-native-get-random-values';\nimport { App } from './src/app';\n\nexport default App;\n","import React, { useCallback } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Setup } from './features/setup';\nimport { Router } from './ui/router';\nimport { ThemeProvider } from 'styled-components/native';\nimport { light } from './ui';\n\nconst App: React.FC = () => {\n  const getTransit = useCallback(\n    async (from: any, to: any) => ({\n      to,\n      from,\n      time: 45,\n      usableTime: 0,\n    }),\n    []\n  );\n  return (\n    <SafeAreaProvider>\n      <StatusBar />\n      <ThemeProvider theme={light}>\n        <Setup getTransit={getTransit}>\n          <Router />\n        </Setup>\n      </ThemeProvider>\n    </SafeAreaProvider>\n  );\n};\n\nexport { App };\n","var map = {\n\t\"./af\": 208,\n\t\"./af.js\": 208,\n\t\"./ar\": 209,\n\t\"./ar-dz\": 210,\n\t\"./ar-dz.js\": 210,\n\t\"./ar-kw\": 211,\n\t\"./ar-kw.js\": 211,\n\t\"./ar-ly\": 212,\n\t\"./ar-ly.js\": 212,\n\t\"./ar-ma\": 213,\n\t\"./ar-ma.js\": 213,\n\t\"./ar-sa\": 214,\n\t\"./ar-sa.js\": 214,\n\t\"./ar-tn\": 215,\n\t\"./ar-tn.js\": 215,\n\t\"./ar.js\": 209,\n\t\"./az\": 216,\n\t\"./az.js\": 216,\n\t\"./be\": 217,\n\t\"./be.js\": 217,\n\t\"./bg\": 218,\n\t\"./bg.js\": 218,\n\t\"./bm\": 219,\n\t\"./bm.js\": 219,\n\t\"./bn\": 220,\n\t\"./bn-bd\": 221,\n\t\"./bn-bd.js\": 221,\n\t\"./bn.js\": 220,\n\t\"./bo\": 222,\n\t\"./bo.js\": 222,\n\t\"./br\": 223,\n\t\"./br.js\": 223,\n\t\"./bs\": 224,\n\t\"./bs.js\": 224,\n\t\"./ca\": 225,\n\t\"./ca.js\": 225,\n\t\"./cs\": 226,\n\t\"./cs.js\": 226,\n\t\"./cv\": 227,\n\t\"./cv.js\": 227,\n\t\"./cy\": 228,\n\t\"./cy.js\": 228,\n\t\"./da\": 229,\n\t\"./da.js\": 229,\n\t\"./de\": 230,\n\t\"./de-at\": 231,\n\t\"./de-at.js\": 231,\n\t\"./de-ch\": 232,\n\t\"./de-ch.js\": 232,\n\t\"./de.js\": 230,\n\t\"./dv\": 233,\n\t\"./dv.js\": 233,\n\t\"./el\": 234,\n\t\"./el.js\": 234,\n\t\"./en-au\": 235,\n\t\"./en-au.js\": 235,\n\t\"./en-ca\": 236,\n\t\"./en-ca.js\": 236,\n\t\"./en-gb\": 237,\n\t\"./en-gb.js\": 237,\n\t\"./en-ie\": 238,\n\t\"./en-ie.js\": 238,\n\t\"./en-il\": 239,\n\t\"./en-il.js\": 239,\n\t\"./en-in\": 240,\n\t\"./en-in.js\": 240,\n\t\"./en-nz\": 241,\n\t\"./en-nz.js\": 241,\n\t\"./en-sg\": 242,\n\t\"./en-sg.js\": 242,\n\t\"./eo\": 243,\n\t\"./eo.js\": 243,\n\t\"./es\": 244,\n\t\"./es-do\": 245,\n\t\"./es-do.js\": 245,\n\t\"./es-mx\": 246,\n\t\"./es-mx.js\": 246,\n\t\"./es-us\": 247,\n\t\"./es-us.js\": 247,\n\t\"./es.js\": 244,\n\t\"./et\": 248,\n\t\"./et.js\": 248,\n\t\"./eu\": 249,\n\t\"./eu.js\": 249,\n\t\"./fa\": 250,\n\t\"./fa.js\": 250,\n\t\"./fi\": 251,\n\t\"./fi.js\": 251,\n\t\"./fil\": 252,\n\t\"./fil.js\": 252,\n\t\"./fo\": 253,\n\t\"./fo.js\": 253,\n\t\"./fr\": 254,\n\t\"./fr-ca\": 255,\n\t\"./fr-ca.js\": 255,\n\t\"./fr-ch\": 256,\n\t\"./fr-ch.js\": 256,\n\t\"./fr.js\": 254,\n\t\"./fy\": 257,\n\t\"./fy.js\": 257,\n\t\"./ga\": 258,\n\t\"./ga.js\": 258,\n\t\"./gd\": 259,\n\t\"./gd.js\": 259,\n\t\"./gl\": 260,\n\t\"./gl.js\": 260,\n\t\"./gom-deva\": 261,\n\t\"./gom-deva.js\": 261,\n\t\"./gom-latn\": 262,\n\t\"./gom-latn.js\": 262,\n\t\"./gu\": 263,\n\t\"./gu.js\": 263,\n\t\"./he\": 264,\n\t\"./he.js\": 264,\n\t\"./hi\": 265,\n\t\"./hi.js\": 265,\n\t\"./hr\": 266,\n\t\"./hr.js\": 266,\n\t\"./hu\": 267,\n\t\"./hu.js\": 267,\n\t\"./hy-am\": 268,\n\t\"./hy-am.js\": 268,\n\t\"./id\": 269,\n\t\"./id.js\": 269,\n\t\"./is\": 270,\n\t\"./is.js\": 270,\n\t\"./it\": 271,\n\t\"./it-ch\": 272,\n\t\"./it-ch.js\": 272,\n\t\"./it.js\": 271,\n\t\"./ja\": 273,\n\t\"./ja.js\": 273,\n\t\"./jv\": 274,\n\t\"./jv.js\": 274,\n\t\"./ka\": 275,\n\t\"./ka.js\": 275,\n\t\"./kk\": 276,\n\t\"./kk.js\": 276,\n\t\"./km\": 277,\n\t\"./km.js\": 277,\n\t\"./kn\": 278,\n\t\"./kn.js\": 278,\n\t\"./ko\": 279,\n\t\"./ko.js\": 279,\n\t\"./ku\": 280,\n\t\"./ku.js\": 280,\n\t\"./ky\": 281,\n\t\"./ky.js\": 281,\n\t\"./lb\": 282,\n\t\"./lb.js\": 282,\n\t\"./lo\": 283,\n\t\"./lo.js\": 283,\n\t\"./lt\": 284,\n\t\"./lt.js\": 284,\n\t\"./lv\": 285,\n\t\"./lv.js\": 285,\n\t\"./me\": 286,\n\t\"./me.js\": 286,\n\t\"./mi\": 287,\n\t\"./mi.js\": 287,\n\t\"./mk\": 288,\n\t\"./mk.js\": 288,\n\t\"./ml\": 289,\n\t\"./ml.js\": 289,\n\t\"./mn\": 290,\n\t\"./mn.js\": 290,\n\t\"./mr\": 291,\n\t\"./mr.js\": 291,\n\t\"./ms\": 292,\n\t\"./ms-my\": 293,\n\t\"./ms-my.js\": 293,\n\t\"./ms.js\": 292,\n\t\"./mt\": 294,\n\t\"./mt.js\": 294,\n\t\"./my\": 295,\n\t\"./my.js\": 295,\n\t\"./nb\": 296,\n\t\"./nb.js\": 296,\n\t\"./ne\": 297,\n\t\"./ne.js\": 297,\n\t\"./nl\": 298,\n\t\"./nl-be\": 299,\n\t\"./nl-be.js\": 299,\n\t\"./nl.js\": 298,\n\t\"./nn\": 300,\n\t\"./nn.js\": 300,\n\t\"./oc-lnc\": 301,\n\t\"./oc-lnc.js\": 301,\n\t\"./pa-in\": 302,\n\t\"./pa-in.js\": 302,\n\t\"./pl\": 303,\n\t\"./pl.js\": 303,\n\t\"./pt\": 304,\n\t\"./pt-br\": 305,\n\t\"./pt-br.js\": 305,\n\t\"./pt.js\": 304,\n\t\"./ro\": 306,\n\t\"./ro.js\": 306,\n\t\"./ru\": 307,\n\t\"./ru.js\": 307,\n\t\"./sd\": 308,\n\t\"./sd.js\": 308,\n\t\"./se\": 309,\n\t\"./se.js\": 309,\n\t\"./si\": 310,\n\t\"./si.js\": 310,\n\t\"./sk\": 311,\n\t\"./sk.js\": 311,\n\t\"./sl\": 312,\n\t\"./sl.js\": 312,\n\t\"./sq\": 313,\n\t\"./sq.js\": 313,\n\t\"./sr\": 314,\n\t\"./sr-cyrl\": 315,\n\t\"./sr-cyrl.js\": 315,\n\t\"./sr.js\": 314,\n\t\"./ss\": 316,\n\t\"./ss.js\": 316,\n\t\"./sv\": 317,\n\t\"./sv.js\": 317,\n\t\"./sw\": 318,\n\t\"./sw.js\": 318,\n\t\"./ta\": 319,\n\t\"./ta.js\": 319,\n\t\"./te\": 320,\n\t\"./te.js\": 320,\n\t\"./tet\": 321,\n\t\"./tet.js\": 321,\n\t\"./tg\": 322,\n\t\"./tg.js\": 322,\n\t\"./th\": 323,\n\t\"./th.js\": 323,\n\t\"./tk\": 324,\n\t\"./tk.js\": 324,\n\t\"./tl-ph\": 325,\n\t\"./tl-ph.js\": 325,\n\t\"./tlh\": 326,\n\t\"./tlh.js\": 326,\n\t\"./tr\": 327,\n\t\"./tr.js\": 327,\n\t\"./tzl\": 328,\n\t\"./tzl.js\": 328,\n\t\"./tzm\": 329,\n\t\"./tzm-latn\": 330,\n\t\"./tzm-latn.js\": 330,\n\t\"./tzm.js\": 329,\n\t\"./ug-cn\": 331,\n\t\"./ug-cn.js\": 331,\n\t\"./uk\": 332,\n\t\"./uk.js\": 332,\n\t\"./ur\": 333,\n\t\"./ur.js\": 333,\n\t\"./uz\": 334,\n\t\"./uz-latn\": 335,\n\t\"./uz-latn.js\": 335,\n\t\"./uz.js\": 334,\n\t\"./vi\": 336,\n\t\"./vi.js\": 336,\n\t\"./x-pseudo\": 337,\n\t\"./x-pseudo.js\": 337,\n\t\"./yo\": 338,\n\t\"./yo.js\": 338,\n\t\"./zh-cn\": 339,\n\t\"./zh-cn.js\": 339,\n\t\"./zh-hk\": 340,\n\t\"./zh-hk.js\": 340,\n\t\"./zh-mo\": 341,\n\t\"./zh-mo.js\": 341,\n\t\"./zh-tw\": 342,\n\t\"./zh-tw.js\": 342\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 473;"],"sourceRoot":""}