{"version":3,"sources":["src/features/appointments/context.ts","src/features/async/hooks.ts","src/features/appointments/provider.tsx","src/features/day/context.ts","src/features/day/utils.ts","src/features/day/provider.tsx","src/features/day/hooks.ts","src/utils/data-context.tsx","src/features/goals/context.ts","src/features/location/context.ts","src/features/location/provider.tsx","src/features/location/hooks.ts","src/features/overrides/context.ts","src/features/overrides/provider.tsx","src/features/overrides/hooks.ts","src/features/data/types.ts","src/features/data/utils.ts","src/features/planner/algorithm/utils.ts","src/features/planner/algorithm/get-next.ts","src/features/planner/algorithm/build-graph.ts","src/features/planner/context.ts","src/features/routines/context.ts","src/features/routines/hooks.ts","src/features/goals/hooks.ts","src/features/planner/algorithm/construct-day.ts","src/features/planner/hooks.ts","src/features/appointments/hooks.ts","src/features/setup.tsx","src/ui/components/base/icon/index.tsx","src/ui/components/base/modal/react-modal.tsx","src/ui/components/base/row/cell.tsx","src/ui/typography/index.ts","src/ui/components/base/row/row.tsx","src/ui/components/base/row/placeholder-icon.tsx","src/ui/components/base/page/index.tsx","src/ui/components/base/popup/index.tsx","src/ui/components/base/button/index.tsx","src/ui/components/base/group/header.tsx","src/ui/components/base/group/index.tsx","src/ui/components/base/list/index.tsx","src/ui/components/date/bar/index.tsx","src/ui/components/form/input/index.tsx","src/ui/components/form/checkbox/index.tsx","src/ui/components/form/time/index.tsx","src/ui/components/form/optional-selector/index.tsx","src/features/tasks/hooks.tsx","src/ui/components/tasks/list-item/index.tsx","src/ui/components/tasks/group/index.tsx","src/ui/screens/day/index.tsx","src/ui/screens/task/add.tsx","src/ui/screens/more/index.tsx","src/ui/screens/locations/list.tsx","src/ui/screens/locations/set.tsx","src/ui/screens/task/list.tsx","src/ui/screens/task/overrides.tsx","src/ui/screens/plan/index.tsx","src/ui/router/router.tsx","src/ui/theme/light.ts","App.tsx","src/app.tsx","node_modules/moment/locale sync /^/.//.*$"],"names":["AppointmentsStatus","useAsyncCallback","fn","deps","useState","result","setResult","prevArgs","setPrevArgs","loading","setLoading","error","setError","action","useCallback","invoke","a","async","args","output","undefined","useMemo","useAsync","options","useEffect","localOptions","rerun","AppointmentsContext","createContext","AppointmentsProvider","children","Platform","OS","status","unavailable","value","Provider","DateContext","dateToDay","input","year","getFullYear","month","getMonth","date","getDate","dayUtils","today","Date","dayToDate","day","toId","DateProvider","setDate","useDate","useContext","createDataContext","createDefault","deserialize","Context","key","storageKey","current","setCurrent","next","AsyncStorageLib","setItem","JSON","stringify","setData","getItem","raw","parse","data","GoalsContext","GoalsProvider","LocationContext","LocationProvider","lookup","getTransition","locations","setLocations","AsyncStorage","location","index","id","set","remove","useLocations","Object","values","OverrideContext","OverrideProvider","currentDate","overrides","setOverrides","get","StorageKey","tasks","override","TaskType","largerThan","b","hour","minute","timeUtils","split","map","trim","filter","Boolean","hourPart","minutePart","parseInt","Number","isInteger","isNaN","c","Math","floor","locationEqual","latitude","longitute","title","listContainLocation","list","target","find","l","getRemainingLocations","forEach","task","push","Strategies","isDead","impossible","t","required","getImpossible","time","remaining","startTime","max","calculateScore","transition","score","priority","minutes","getNext","currentNode","context","nextNodes","remainingLocations","remainingTasks","Promise","all","end","endTime","parent","to","impossibeTasks","completed","dead","start","possibleTasks","orgTask","min","parentRemainging","duration","length","sleep","resolve","setTimeout","fil","Array","fill","i","buildGraph","strategy","allValid","callback","batchSize","sleepTime","nodeCount","running","leafList","completedList","deadList","complete","nodes","sort","node","pop","cancel","n","alive","firstValid","firstComplet","fullComplete","PlannerProvider","RoutinesContext","RoutinesProvider","useRoutines","useGoals","constructDay","plans","type","name","from","reverse","getDays","firstValue","arg","usePreparePlan","routines","goals","getOverrides","approved","getDay","appointments","useGetAppointments","getAppontments","enabled","startMin","startMax","days","usePlan","preparePlan","prepareOptions","prepared","reduce","update","dayGoal","graph","winner","plan","goal","d","Setup","getTransit","Icon","size","color","theme","useTheme","Feather","colors","icon","sizes","icons","Wrapper","styled","View","margins","medium","background","flex","direction","align","opacity","Touch","TouchableOpacity","Cell","onPress","props","accessibilityLabel","accessibilityRole","accessibilityHint","others","accessible","BaseText","Text","text","bold","font","baseSize","Title1","Body1","Overline","Link","Children","componentOrString","Component","Row","top","left","right","overline","description","cellProps","KeyboardAvoiding","KeyboardAvoidingView","Pressable","Page","keyboardShown","setKeyboardShown","keyboardDidShow","keyboardDidHide","Keyboard","addListener","removeListener","disabled","dismiss","behavior","Top","shadow","Outer","Content","ScrollView","Popup","onClose","rowProps","insets","useSafeAreaInsets","style","paddingBottom","bottom","alwaysBounceVertical","primary","small","corners","Button","Header","add","Group","startHidden","visible","setVisible","items","getKey","render","Collapsible","collapsed","item","marginLeft","List","FlatList","keyExtractor","renderItem","DateBar","selected","lines","markedDates","height","paddingTop","backgroundColor","calendarColor","selectedDate","startingDate","onDateSelected","utc","toDate","shouldAllowFontScaling","iconContainer","calendarHeaderStyle","fontSize","highlightDateNameStyle","iconLeftStyle","tintColor","iconRightStyle","highlightDateNumberStyle","dateNumberStyle","dateNameStyle","InputField","TextInput","label","placeholder","onChangeText","row","Checkbok","onChange","TimeField","TimeInput","shade","TopButton","OptionalSelector","setEnabled","enabledText","disabledText","toggle","nextId","isSelected","includes","useTasks","useAppointments","routine","appointment","useSetTask","setRoutine","useSetRoutine","setGoal","useSetGoals","useRemoveTask","removeRoutine","useRemoveRoutine","removeGoal","useRemoveGoal","TaskListItem","TaskGroup","navigate","useNavigation","DayScreen","appointmentStatus","startTimeOverride","useSetStartTimeOverride","setStartTimeOverride","rejected","SideBySide","dayNames","_","TaskAddScreen","useRoute","params","goBack","nanoid","currentId","setTask","currentType","setCurrentType","setTitle","maxStart","setMaxStart","minStart","setMinStart","setDuration","hasLocation","setHasLocation","selectedLocations","setSelectedLocations","hasDays","setHasDays","selectedDays","setSelectedDays","toString","save","MoreScreen","LocationListScreen","removeLocation","LocationSetScreen","setLocation","position","TaskListScreen","removeTask","OverrideSetScreen","useSetTaskOverride","setOverride","useClearTaskOverride","clearOverrides","clear","Scroll","PlanScreen","centerContent","MoreStackNavigator","createNativeStackNavigator","MoreStack","Navigator","Screen","component","MainTabsNvaigator","createBottomTabNavigator","MainTabs","screenOptions","tabBarActiveTintColor","headerShown","tabBarLabel","tabBarIcon","focused","RootNavigator","createStackNavigator","Root","animationEnabled","presentation","Router","baseTheme","DefaultTheme","navigationTheme","card","NavigationContainer","light","destructive","secondary","textShade","large","App","usableTime","StatusBar","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","module","exports"],"mappings":"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","file":"static/js/app.70cdeef3.chunk.js","sourcesContent":["import { createContext } from \"react\"\nimport { Appointment } from \"../data\"\nimport { Day } from \"../day\"\n\nenum AppointmentsStatus {\n  unavailable = 'unavailable',\n  unapproved = 'unapproved',\n  rejected = 'rejected',\n  approved = 'approved',\n}\n\ntype AppointmentsContextUnavailable = {\n  status: AppointmentsStatus.unavailable | AppointmentsStatus.rejected;\n}\n\ntype AppointmentsContextUnapprovedValue = {\n  status: AppointmentsStatus.unapproved;\n  request: () => Promise<void>;\n}\n\ntype AppointmentsContextApproved = {\n  status: AppointmentsStatus.approved;\n  getDay: (day: Day) => Promise<Appointment[]>\n}\n\ntype AppointmentsContextValue = AppointmentsContextUnavailable\n  | AppointmentsContextUnapprovedValue\n  | AppointmentsContextApproved;\n\nconst AppointmentsContext = createContext<AppointmentsContextValue>(undefined as any);\n\nexport type {\n  AppointmentsContextValue,\n};\nexport { AppointmentsContext, AppointmentsStatus };\n","import { useCallback, useEffect, useMemo, useState } from \"react\"\n\ntype AsyncCallbackOutput<TArgs extends any[], TResult> = [\n  (...args: TArgs) => Promise<TResult>,\n  {\n    loading: boolean;\n    error?: any;\n    result?: TResult;\n    args?: TArgs;\n  }\n];\n\ntype AsyncOutput<TResult> = [\n  TResult | undefined,\n  {\n    loading: boolean;\n    error?: any;\n    rerun: () => Promise<TResult>;\n  }\n]\n\nconst useAsyncCallback = <\n  TArgs extends any[],\n  TResult,\n>(fn: (...args: TArgs) => Promise<TResult>, deps: any[]): AsyncCallbackOutput<TArgs, TResult> => {\n  const [result, setResult] = useState<TResult>();\n  const [prevArgs, setPrevArgs] = useState<TArgs>();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<any>();\n\n  const action = useCallback(fn, deps);\n  \n  const invoke = useCallback(\n    async (...args: TArgs) => {\n      setLoading(true);\n      setError(false);\n      setPrevArgs(args);\n      try {\n        const output = await action(...args);\n        setResult(output);\n        return output;\n      } catch (err) {\n        setResult(undefined);\n        setError(err);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [setLoading, setError, setResult, action],\n  );\n\n  const options = useMemo(\n    () => {\n      const output: AsyncCallbackOutput<TArgs, TResult> = [\n        invoke,\n        {\n          result,\n          loading,\n          error,\n          args: prevArgs,\n        }\n      ];\n      return output;\n    },\n    [invoke, result, loading, error, prevArgs],\n  );\n\n  return options;\n};\n\nconst useAsync = <TResult>(fn: () => Promise<TResult>, deps: any[]): AsyncOutput<TResult> => {\n  const [invoke, options] = useAsyncCallback(fn, deps);\n  useEffect(\n    () => {\n      invoke();\n    },\n    [invoke],\n  );\n\n  const localOptions = useMemo(\n    () => ({\n      loading: options.loading,\n      error: options.error,\n      rerun: invoke,\n    }),\n    [invoke, options.loading, options.error],\n  );\n\n  return [\n    options.result,\n      localOptions,\n  ]\n};\n\nexport type { AsyncCallbackOutput };\nexport { useAsync, useAsyncCallback };\n","import { useAsync } from \"#/features/async\";\nimport { ReactNode } from \"react\"\nimport { Platform } from \"react-native\";\nimport { AppointmentsContext, AppointmentsContextValue, AppointmentsStatus } from './context';\n\ntype AppointmentsProviderProps = {\n  children: ReactNode;\n};\n\nconst AppointmentsProvider: React.FC<AppointmentsProviderProps> = ({\n  children,\n}) => {\n  const [value] = useAsync<AppointmentsContextValue>(\n    async () => {\n      if (Platform.OS !== 'ios') {\n        return { status: AppointmentsStatus.unavailable };\n      }\n      return { status: AppointmentsStatus.unavailable };\n    },\n    [],\n  );\n\n  if (!value) {\n    return <></>\n  }\n\n  return (\n    <AppointmentsContext.Provider value={value}>\n      {children}\n    </AppointmentsContext.Provider>\n  );\n}\n\nexport type { AppointmentsProviderProps };\nexport { AppointmentsProvider };\n","import { createContext } from \"react\";\nimport { Day } from \".\";\n\ntype DateContextValue = {\n  date: Day;\n  setDate: (date: Day) => void;\n}\n\nconst DateContext = createContext<DateContextValue>(undefined as any);\n\nexport type { DateContextValue };\nexport { DateContext }\n","import { Day } from \"./day\";\n\nconst today = () => {\n  return dateToDay(new Date());\n}\n\nconst dayToDate = (day: Day) => {\n  return new Date(day.year, day.month - 1, day.date, 0, 0, 0, 0);\n}\n\nconst dateToDay = (input: Date) => {\n  const year = input.getFullYear();\n  const month = input.getMonth() + 1;\n  const date = input.getDate();\n  const day: Day = { year, month, date };\n  return day;\n}\n\nconst toId = (day: Day) => {\n  return `${day.year}-${day.month}-${day.date}`;\n}\n\nconst dayUtils = {\n  today,\n  dateToDay,\n  dayToDate,\n  toId,\n};\n\nexport { dayUtils };\n","import { ReactNode, useState } from \"react\";\nimport { DateContext } from \"./context\";\nimport { dayUtils } from \"./utils\";\n\ntype DateProviderProps = {\n  children: ReactNode;\n};\n\nconst DateProvider: React.FC<DateProviderProps> = ({ children }) => {\n  const [date, setDate] = useState(dayUtils.today());\n\n  return (\n    <DateContext.Provider value={{ date, setDate }}>\n      {children}\n    </DateContext.Provider>\n  );\n}\n\nexport type { DateProviderProps };\nexport { DateProvider };\n","import { useContext } from \"react\"\nimport { DateContext } from \"./context\"\n\nexport const useDate = () => {\n  const { date } = useContext(DateContext);\n  return date;\n}\n\nexport const useSetDate = () => {\n  const { setDate } = useContext(DateContext);\n  return setDate;\n}\n","import { useAsync, useAsyncCallback } from \"#/features/async\";\nimport AsyncStorageLib from \"@react-native-async-storage/async-storage\";\nimport { createContext, ReactNode, useState } from \"react\"\n\ntype DataContextOptions<T> = {\n  createDefault: () => T;\n  deserialize?: (item: T) => T;\n};\n\ntype DataContextProviderProps = {\n  storageKey: string;\n  children: ReactNode;\n};\n\nfunction createDataContext<T extends {[name: string]: any}>({\n  createDefault,\n  deserialize = a => a,\n}: DataContextOptions<T>) {\n  const Context = createContext<{\n    data: T;\n    setData: (data: T | ((current: T) => T)) => Promise<void>;\n  }>(undefined as any);\n\n  const Provider: React.FC<DataContextProviderProps> = ({\n    storageKey: key,\n    children,\n  }) => {\n    const [current, setCurrent] = useState<T>();\n\n    const [setData] = useAsyncCallback(\n      async (input: T | ((current: T) => T)) => {\n        let next = typeof input === 'function'\n          ? input(current!)\n          : input;\n        setCurrent(next);\n        await AsyncStorageLib.setItem(key, JSON.stringify(next));\n      },\n      [key, current, setCurrent],\n    );\n\n    useAsync(\n      async () => {\n        const raw = await AsyncStorageLib.getItem(key);\n        const next = raw ? deserialize(JSON.parse(raw)) : createDefault();\n        setCurrent(next);\n      },\n      [key, setCurrent],\n    )\n\n    if (!current) {\n      return <></>\n    }\n\n    return (\n      <Context.Provider value={{ data: current, setData }}>\n        {children}\n      </Context.Provider>\n    )\n  };\n\n  return { Context, Provider };\n}\n\nexport { createDataContext };\n","import { createDataContext } from \"#/utils/data-context\";\nimport { Goal } from \"../data\";\n\nconst {\n  Context: GoalsContext,\n  Provider: GoalsProvider,\n}= createDataContext<{[id: string]: Goal}>({\n  createDefault: () => ({}),\n})\n\nexport { GoalsContext, GoalsProvider };\n","import { Time, UserLocation } from \"../data\";\nimport { createContext } from \"react\"\n\ntype Transition = {\n  time: number;\n  usableTime: number;\n  to: UserLocation;\n  from: UserLocation;\n};\n\ntype GetTransition = (\n  from: UserLocation,\n  to: UserLocation,\n  time: Time,\n) => Promise<Transition>;\n\ntype LocationContextValue = {\n  locations: {\n    [id: string]: UserLocation;\n  };\n  set: (location: UserLocation) => any;\n  remove: (id: string) => any;\n  lookup?: (address: string) => UserLocation[];\n  getTransition: GetTransition;\n}\n\nconst LocationContext = createContext<LocationContextValue>(undefined as any);\n\nexport type { LocationContextValue, GetTransition, Transition };\nexport { LocationContext };\n","import { useAsync, useAsyncCallback } from \"#/features/async\";\nimport { GetTransition } from \"./context\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { ReactNode, useState } from \"react\";\nimport { LocationContext } from \"./context\";\nimport { UserLocation } from \"../data\";\n\ntype LocationProviderProps = {\n  children: ReactNode;\n  lookup: (address: string) => UserLocation[];\n  getTransition: GetTransition;\n}\n\nconst LOCATION_STORAGE_KEY = 'locations';\n\nconst LocationProvider: React.FC<LocationProviderProps> = ({\n  children,\n  lookup,\n  getTransition,\n}) => {\n  const [locations, setLocations] = useState<{[id: string]: UserLocation}>({});\n\n  useAsync(\n    async () => {\n      const raw = await AsyncStorage.getItem(LOCATION_STORAGE_KEY);\n      if (raw) {\n        setLocations(JSON.parse(raw));\n      }\n    },\n    [],\n  );\n\n  const [set] = useAsyncCallback(\n    async (location: UserLocation) => {\n      const index = {\n        ...locations,\n        [location.id]: location,\n      }\n      setLocations(index);\n      await AsyncStorage.setItem(LOCATION_STORAGE_KEY, JSON.stringify(index));\n    },\n    [setLocations, locations],\n  )\n\n  const [remove] = useAsyncCallback(\n    async (id: string) => {\n      const index = {\n        ...locations,\n      }\n      delete index[id];\n      setLocations(index);\n      await AsyncStorage.setItem(LOCATION_STORAGE_KEY, JSON.stringify(index));\n    },\n    [setLocations, locations],\n  );\n\n  return (\n    <LocationContext.Provider\n      value={{\n        locations,\n        set,\n        remove,\n        lookup,\n        getTransition,\n      }}\n    >\n      {children}\n    </LocationContext.Provider>\n  )\n}\n\nexport type { LocationProviderProps };\nexport { LocationProvider };\n","import { useAsync } from \"#/features/async\";\nimport { useContext, useMemo } from \"react\"\nimport { requestForegroundPermissionsAsync, getCurrentPositionAsync } from 'expo-location';\nimport { LocationContext } from \"./context\"\nimport { UserLocation } from \"../data\";\nimport { getDistanceFromLatLonInKm } from \"./utils\";\n\nexport const useLocations = () => {\n  const { locations } = useContext(LocationContext);\n  const result = useMemo(() => Object.values(locations), [locations]);\n  return result;\n}\n\nexport const useSetLocation = () => {\n  const { set } = useContext(LocationContext);\n  return set;\n}\n\nexport const useRemoveLocation = () => {\n  const { remove } = useContext(LocationContext);\n  return remove;\n}\n\nexport const useGetTransition = () => {\n  const { getTransition } = useContext(LocationContext);\n  return getTransition;\n}\n\nexport const useLookup = () => {\n  const { lookup } = useContext(LocationContext);\n  return lookup;\n}\n\nexport const useCurrentLocation = (proximity: number = 0.5) => {\n  const { locations } = useContext(LocationContext);\n  const result = useAsync<UserLocation | undefined>(\n    async () => {\n      let { status } = await requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return undefined;\n      }\n      let position = await getCurrentPositionAsync({});\n      const withDistance = Object.values(locations).map((location) => {\n        if (!location.position) {\n          return;\n        }\n        const distance = getDistanceFromLatLonInKm(\n          position.coords.latitude,\n          position.coords.longitude,\n          location.position.latitude,\n          location.position.longitute,\n        )\n        return {\n          distance,\n          location,\n        }\n      }).filter(Boolean).sort((a, b) => a!.distance - b!.distance)\n      const current = withDistance.find(d => d!.distance < proximity);\n      if (!current) {\n        return {\n          id: `${position.coords.longitude} ${position.coords.latitude}`,\n          title: 'Unknown',\n          position: {\n            latitude: position.coords.latitude,\n            longitute: position.coords.longitude,\n          },\n        };\n      }\n      return current.location;\n    },\n    [],\n  );\n  return result;\n}\n","import { createContext, SetStateAction } from \"react\";\nimport { Time, UserLocation } from \"../data\";\nimport { Day } from \"../day\";\n\ntype Override = {\n  locations?: UserLocation[] | null;\n  startMin?: Time;\n  startMax?: Time;\n  duration?: number;\n  required?: boolean;\n  priority?: number;\n  enabled?: boolean;\n}\n\ntype OverrideIndex = {\n  startTime?: Time;\n  tasks: {\n    [id: string]: Override;\n  };\n};\n\ntype OverrideContextValue = {\n  overrides: OverrideIndex;\n  get: (date: Day) => Promise<OverrideIndex>;\n  set: React.Dispatch<SetStateAction<OverrideIndex>>;\n}\nconst OverrideContext = createContext<OverrideContextValue>(undefined as any);\n\nexport type { Override, OverrideIndex, OverrideContextValue };\nexport { OverrideContext };\n","import AsyncStorageLib from \"@react-native-async-storage/async-storage\";\nimport React, { ReactNode, SetStateAction, useCallback, useState } from \"react\";\nimport { useAsync } from \"../async\";\nimport { Day, useDate, dayUtils } from \"../day\";\nimport { Override, OverrideContext, OverrideIndex } from \"./context\";\n\ntype OverrideProviderProps = {\n  children: ReactNode;\n}\n\nconst StorageKey = 'overrides';\n\nconst OverrideProvider: React.FC<OverrideProviderProps> = ({ children }) => {\n  const currentDate = useDate();\n  const [overrides, setOverrides] = useState<OverrideIndex>();\n\n  const get = useCallback(\n    async (date: Day): Promise<OverrideIndex> => {\n      const raw = await AsyncStorageLib.getItem(`${StorageKey}_${dayUtils.toId(date)}`);\n      if (!raw) {\n        return { tasks: {} };\n      }\n      return JSON.parse(raw);\n    },\n    [],\n  );\n\n  const set = useCallback(\n    async (override: SetStateAction<OverrideIndex>) => {\n      const next = typeof override === 'function' ? override(overrides!) : overrides;\n      setOverrides(next);\n      await AsyncStorageLib.setItem(\n        `${StorageKey}_${dayUtils.toId(currentDate)}`,\n        JSON.stringify(next),\n      );\n    },\n    [currentDate, overrides],\n  );\n\n  useAsync(\n    async () => {\n      setOverrides(await get(currentDate));\n    },\n    [currentDate, setOverrides],\n  );\n\n  if (!overrides) {\n    return <></>\n  }\n\n  return (\n    <OverrideContext.Provider value={{ overrides, get, set }}>\n      {children}\n    </OverrideContext.Provider>\n  );\n}\n\nexport type { OverrideProviderProps };\nexport { OverrideProvider };\n","import { useContext } from \"react\"\nimport { useAsyncCallback } from \"../async\";\nimport { Time } from \"../data\";\nimport { Override, OverrideContext } from \"./context\"\n\nexport const useOverrides = () => {\n  const { overrides } = useContext(OverrideContext);\n  return overrides;\n}\n\nexport const useSetOverride = () => {\n  const { set } = useContext(OverrideContext);\n  return set;\n}\n\nexport const useGetOverride = () => {\n  const { get } = useContext(OverrideContext);\n  return get;\n}\n\nexport const useSetTaskOverride = () => {\n  const { set } = useContext(OverrideContext);\n  const setTaskOverride = useAsyncCallback(\n    async (id: string, overrides: Override) => {\n      set(current => ({\n        ...current,\n        tasks: {\n          ...current.tasks,\n          [id]: overrides,\n        },\n      }));\n    },\n    [set],\n  );\n  return setTaskOverride;\n}\n\nexport const useClearTaskOverride = () => {\n  const { set } = useContext(OverrideContext);\n  const clearTaskOverride = useAsyncCallback(\n    async (id: string) => {\n      set(current => {\n        const tasks = {...current.tasks};\n        delete tasks[id]\n        return {\n          ...current,\n          tasks,\n        };\n      });\n    },\n    [set],\n  );\n  return clearTaskOverride;\n}\n\nexport const useStartTimeOverride = () => {\n  const { overrides } = useContext(OverrideContext);\n  return overrides.startTime; \n};\n\nexport const useSetStartTimeOverride = () => {\n  const { set } = useContext(OverrideContext);\n  const setStartTime = useAsyncCallback(\n    async (startTime?: Time) => {\n      set(current => ({\n        ...current,\n        startTime,\n      }));\n    },\n    [set],\n  );\n  return setStartTime;\n};\n","import { Day } from \"../day\"\n\nexport enum TaskType {\n  appointment = 'appointment',\n  goal = 'goal',\n  routine = 'routine',\n}\n\nexport type Time = {\n  hour: number;\n  minute: number;\n}\n\nexport type UserLocation = {\n  id: string;\n  title: string;\n  position: {\n    longitute: number;\n    latitude: number;\n  };\n}\n\nexport type TaskBase = {\n  type: TaskType;\n  id: string;\n  title: string;\n  locations?: UserLocation[];\n  required: boolean;\n  priority?: number;\n  startTime: {\n    min: Time;\n    max: Time;\n  };\n  duration: number;\n}\n\nexport type Appointment = TaskBase & {\n  type: TaskType.appointment;\n  calendarId: string;\n}\n\nexport type Goal = TaskBase & {\n  type: TaskType.goal;\n  completed: boolean;\n  deadline?: Day;\n  startDate?: Day;\n  days: boolean[];\n}\n\nexport type Routine = TaskBase & {\n  type: TaskType.routine;\n  days: boolean[];\n}\n\nexport type Task = Appointment | Goal | Routine;\n","import { Time } from \"./types\";\n\nconst equal = (a: Time, b: Time) => {\n  return a.hour == b.hour && a.minute === b.minute;\n}\n\nconst stringToTime = (input: string) => {\n  const [hourPart, minutePart] = input.split(':').map(a => a.trim()).filter(Boolean);\n  const hour = parseInt(hourPart);\n  const minute = parseInt(minutePart || '0');\n\n  if (\n    !Number.isInteger(hour)\n    || !Number.isInteger(minute)\n    || Number.isNaN(hour)\n    || Number.isNaN(minute)\n  ) {\n    return undefined;\n  }\n\n  const result: Time = {\n    hour,\n    minute,\n  };\n\n  return result;\n};\n\nconst largerThan = (a: Time, b: Time) => {\n  if (a.hour > b.hour) {\n    return true;\n  }\n  if (a.hour < b.hour) {\n    return false;\n  }\n  return a.minute > b.minute;\n}\n\nconst max = (a: Time, b: Time) => largerThan(a, b) ? a : b;\n\nconst timeToString = (input: Time) => `${input.hour}:${input.minute}`;\n\nconst add = (a: Time, b: Time | number) => {\n  const c = typeof b === 'number' ? { hour: 0, minute: b } : b;\n  let hour = a.hour + c.hour;\n  hour += Math.floor(a.minute + c.minute / 60);\n  const minute = a.minute + c.minute % 60;\n  return <Time>{ hour, minute };\n}\n\nconst timeUtils = {\n  timeToString,\n  stringToTime,\n  equal,\n  largerThan,\n  max,\n  add,\n};\n\nexport { timeUtils };\n","import { UserLocation } from \"#/types/location\";\nimport { Task } from \"#/types/task\";\n\nexport const locationEqual = (a: UserLocation, b: UserLocation) => {\n  if (a === b) {\n    return true;\n  }\n  if (a.location === b.location) {\n    return true;\n  }\n  if (a.location && b.location && a.location.latitude === b.location.latitude && a.location.longitute === b.location.longitute) {\n    return true;\n  }\n  if (a.title === b.title) {\n    return true;\n  }\n  return false;\n}\n\nexport const listContainLocation = (list: UserLocation[], target: UserLocation) => {\n  return !!list.find(l => locationEqual(l, target));\n}\n\nexport const getRemainingLocations = (tasks: Task[], current: UserLocation) => {\n  const result: UserLocation[] = [];\n  tasks.forEach((task) => {\n    if (!task.locations) {\n      return;\n    }\n    for (let location of task.locations) {\n      if (!listContainLocation(result, location) && !locationEqual(current, location)) {\n        result.push(location)\n      }\n    }\n  })\n  return result;\n};\n\n","import { Task, Time, timeUtils } from '#/features/data';\nimport { Transition } from '#/features/location';\nimport { Context, GraphNode } from '../types';\nimport { getRemainingLocations, listContainLocation } from './utils';\n\nconst DEFAULT_PRIORITY = 50;\n\nconst isDead = (impossible: Task[]) => {\n  const missingRequered = impossible.find(t => t.required);\n  return !!missingRequered;\n}\n\ntype GetImpossibleResult = {\n  remaining: Task[];\n  impossible: Task[];\n}\n\nexport const getImpossible = (\n  tasks: Task[],\n  time: Time,\n) => {\n  const result: GetImpossibleResult = {\n    remaining: [],\n    impossible: [],\n  }\n\n  for (let task of tasks) {\n    if (timeUtils.largerThan(time, task.startTime.max)) {\n      result.impossible.push(task);\n    } else {\n      result.remaining.push(task);\n    }\n  };\n\n  return result;\n}\n\ntype CalculateScoreOptions = {\n  tasks?: Task[];\n  transition?: Transition;\n  impossible: Task[];\n}\n\nconst calculateScore = ({\n  tasks,\n  transition,\n  impossible,\n}: CalculateScoreOptions) => {\n  let score = 0;\n\n  tasks?.forEach((task) => {\n    score += (task.priority || DEFAULT_PRIORITY) * 10;\n    impossible.forEach((task) => {\n      if (task.required) {\n        score -= 10000 + (1 * (task.priority || DEFAULT_PRIORITY));\n      } else {\n        score -= 100 + (1 * (task.priority || DEFAULT_PRIORITY));\n      }\n    });\n  });\n  if (transition) {\n    const minutes = transition.time / 1000 / 60\n    score -= 10 + (1 * minutes);\n  }\n  return score;\n}\nconst getNext = async (\n  currentNode: GraphNode,\n  context: Context,\n): Promise<GraphNode[]> => {\n  const nextNodes: GraphNode[] = [];\n  if (!currentNode.transition) {\n    const remainingLocations = getRemainingLocations(currentNode.remainingTasks, currentNode.location);\n    await Promise.all(remainingLocations.map(async(location) => {\n      const transition = await context.getTransition(currentNode.location, location, currentNode.time.end);\n      const endTime = timeUtils.add(currentNode.time.end, transition.time);\n      const { remaining, impossible } = getImpossible(currentNode.remainingTasks, endTime);\n      const score = calculateScore({\n        transition, \n        impossible,\n      });\n      nextNodes.push({\n        parent: currentNode,\n        location: transition.to,\n        remainingTasks: remaining,\n        transition,\n        impossibeTasks: [\n          ...impossible,\n          ...currentNode.impossibeTasks,\n        ],\n        score: currentNode.score + score,\n        status: {\n          completed: false,\n          dead: isDead(impossible),\n        },\n        time: {\n          start: currentNode.time.end,\n          end: endTime,\n        },\n      })\n    }));\n  }\n  const possibleTasks = currentNode.remainingTasks.filter(task => !task.locations || listContainLocation(task.locations, currentNode.location))\n  await Promise.all(possibleTasks.map(async (orgTask) => {\n    const task = {...orgTask};\n    let startTime = \n      timeUtils.max(\n        currentNode.time.end,\n        task.startTime.min,\n      );\n    const parentRemainging = currentNode.remainingTasks.filter(t => t !== orgTask);\n    let endTime = timeUtils.add(startTime, task.duration);\n    const { remaining, impossible } = getImpossible(parentRemainging, endTime);\n    const score = calculateScore({\n      tasks: [task], \n      impossible,\n    });\n    nextNodes.push({\n      parent: currentNode,\n      location: currentNode.location,\n      task,\n      remainingTasks: remaining,\n      impossibeTasks: [\n        ...impossible,\n        ...currentNode.impossibeTasks,\n      ],\n      score: currentNode.score + score,\n      status: {\n        completed: remaining.length === 0,\n        dead: isDead(impossible),\n      },\n      time: {\n        start: startTime,\n        end: endTime,\n      },\n    })\n  }));\n  return nextNodes;\n};\n\nexport { getNext };\n","import { Task, Time, UserLocation } from \"#/features/data\";\nimport { Context, GraphNode } from \"../types\";\nimport { getImpossible, getNext } from \"./get-next\";\n\nenum Strategies {\n  all = 'all',\n  allValid = 'all-valid',\n  firstValid = 'first-valid',\n  firstComplet = 'first-complete',\n}\ntype RunningStatus = {\n  current: 'running';\n  nodes: number;\n  start: Date;\n  strategy: Strategies,\n  cancel: () => void;\n}\n\ntype CompletedStatus = {\n  current: 'completed';\n  start: Date;\n  end: Date;\n  nodes: number;\n  strategy: Strategies,\n}\n\ntype Status = RunningStatus | CompletedStatus;\n\ntype BuildGraphOptions = {\n  location: UserLocation;\n  time: Time;\n  tasks: Task[];\n  context: Context;\n  strategy?: Strategies;\n  batchSize?: number;\n  sleepTime?: number;\n  callback?: (status: Status) => void;\n};\n\nconst sleep = (time: number) => new Promise(resolve => setTimeout(resolve, time));\n\nconst fil = <T>(\n  fn: ((item: T) => boolean)[],\n  input: T[],\n): T[][] => {\n  const output: T[][] = new Array(fn.length).fill(undefined).map(() => []);\n  for (let i = 0; i < input.length; i++) {\n    for (let b = 0; b < fn.length; b++) {\n      if (fn[b](input[i])) {\n        output[b].push(input[i]);\n        continue;\n      }\n    }\n  }\n  return output;\n};\n\nconst buildGraph = async ({\n  location,\n  time,\n  tasks,\n  context,\n  strategy = Strategies.allValid,\n  callback,\n  batchSize = 1000,\n  sleepTime = 10,\n}: BuildGraphOptions) => {\n  const start = new Date();\n  let nodeCount = 0;\n  let running = true;\n  const { remaining, impossible } = getImpossible(tasks, time);\n  let leafList: GraphNode[] = [{\n    location,\n    time: {\n      end: time,\n      start: time,\n    },\n    score: 0,\n    remainingTasks: remaining,\n    impossibeTasks: impossible,\n    status: {\n      dead: false,\n      completed: false,\n    },\n  }];\n  const completedList: GraphNode[] = [];\n  const deadList: GraphNode[] = [];\n\n  const complete = (nodes: GraphNode[]) => {\n    if (callback) {\n      callback({\n        current: 'completed',\n        nodes: nodeCount,\n        start,\n        end: new Date(),\n        strategy,\n      });\n    }\n    return nodes.sort((a, b) => b.score - a.score);\n  }\n\n  while (true) {\n    nodeCount++;\n    if (!running) {\n      return [];\n    }\n    if (\n      leafList.length === 0\n      && completedList.length === 0\n      && strategy !== Strategies.all\n    ) {\n      strategy = Strategies.all;\n      leafList.push(...deadList);\n    }\n    const node = leafList.pop();\n    if (!node) {\n      break;\n    }\n    if (nodeCount % batchSize === 0) {\n      if (callback) {\n        callback({\n          current: 'running',\n          nodes: nodeCount,\n          strategy,\n          start,\n          cancel: () => {\n            running = false;\n          }\n        })\n      }\n      await sleep(sleepTime);\n    }\n    const next = await getNext(node, context); \n    const [alive, completed, dead] = fil([\n      n => (strategy === Strategies.all || !n.status.dead) && !n.status.completed,\n      n => !!n.status.completed && (strategy === Strategies.all || !n.status.dead),\n      n => n.status.dead,\n    ], next);\n    leafList.push(...alive);\n    if (strategy === Strategies.firstValid && completed.length > 0) {\n      return complete(completed);\n    }\n    if (completed.length > 0) {\n      completedList.push(...completed)\n    }\n    if (strategy === Strategies.firstComplet) {\n      const fullComplete = completed.find(c => c.impossibeTasks.length === 0);\n      if (fullComplete) {\n        return complete([fullComplete]);\n      }\n    }\n    deadList.push(...dead);\n  }\n\n  return complete(completedList);\n}\n\nexport type { Status, BuildGraphOptions };\nexport { buildGraph, Strategies };\n","import { createDataContext } from '#/utils/data-context';\nimport { Strategies } from \"./algorithm/build-graph\";\n\ntype PlannerOptions = {\n  strategy: Strategies;\n}\n\nconst {\n  Context: PlannerContext,\n  Provider: PlannerProvider,\n} = createDataContext<PlannerOptions>({\n  createDefault: () => ({\n    strategy: Strategies.firstComplet,\n  }),\n});\n\nexport type { PlannerOptions };\nexport { PlannerContext, PlannerProvider };\n","import { createDataContext } from \"#/utils/data-context\";\nimport { Routine } from \"../data\";\n\nconst {\n  Context: RoutinesContext,\n  Provider: RoutinesProvider,\n}= createDataContext<{[id: string]: Routine}>({\n  createDefault: () => ({}),\n})\n\nexport { RoutinesContext, RoutinesProvider };\n","import { useCallback, useContext, useMemo } from \"react\"\nimport { Routine } from \"../data\";\nimport { RoutinesContext } from \"./context\"\n\nexport const useRoutines = () => {\n  const { data } = useContext(RoutinesContext);\n  const current = useMemo(\n    () => Object.values(data),\n    [data],\n  )\n  return current;\n};\n\nexport const useSetRoutine = () => {\n  const { setData } = useContext(RoutinesContext);\n  const set = useCallback(\n    (routine: Routine) => setData(current => ({\n      ...current,\n      [routine.id]: routine, \n    })),\n    [setData],\n  );\n\n  return set;\n}\n\nexport const useRemoveRoutine = () => {\n  const { setData } = useContext(RoutinesContext);\n  const removeRoutine = useCallback(\n    (id: string) => {\n      setData(current => {\n        const next = {...current};\n        delete next[id];\n        return next;\n      })\n    },\n    [setData],\n  );\n\n  return removeRoutine;\n}\n","import { useCallback, useContext, useMemo } from \"react\"\nimport { Goal } from \"../data\";\nimport { GoalsContext } from \"./context\"\n\nexport const useGoals = () => {\n  const { data } = useContext(GoalsContext);\n  const current = useMemo(\n    () => Object.values(data),\n    [data],\n  )\n  return current;\n};\n\nexport const useSetGoals = () => {\n  const { setData } = useContext(GoalsContext);\n  const set = useCallback(\n    (goal: Goal) => setData(current => ({\n      ...current,\n      [goal.id]: goal, \n    })),\n    [setData],\n  );\n\n  return set;\n}\n\nexport const useRemoveGoal = () => {\n  const { setData } = useContext(GoalsContext);\n  const removeRoutine = useCallback(\n    (id: string) => {\n      setData(current => {\n        const next = {...current};\n        delete next[id];\n        return next;\n      })\n    },\n    [setData],\n  );\n\n  return removeRoutine;\n}\n","import { timeUtils } from \"#/features/data\";\nimport { GraphNode, PlannedEntry } from \"../types\";\n\nconst constructDay = (node: GraphNode) => {\n  let current: GraphNode | undefined = node;\n  const plans: PlannedEntry[] = [];\n\n  while(current) {\n    if (current.task) {\n      plans.push({\n        type: 'task',\n        name: current.task?.title || 'start',\n        start: timeUtils.add(current.time.start, (current.transition?.time || 0)),\n        end: current.time.end,\n        score: current.score,\n      })\n    }\n    if (current.transition) {\n      plans.push({\n        type: 'transition',\n        start: current.time.start,\n        end: timeUtils.add(current.time.start, current.transition.time),\n        from: current.transition.from,\n        to: current.transition.to,\n      })\n    }\n    current = current.parent;\n  }\n\n  return plans.reverse();\n}\n\nexport { constructDay };\n","import { buildGraph, Status, Strategies } from \"./algorithm/build-graph\";\nimport { useContext } from \"react\";\nimport { PlannerContext } from \"./context\";\nimport { Task, Time, UserLocation } from \"../data\";\nimport { useRoutines } from \"../routines\";\nimport { useGoals } from \"../goals/hooks\";\nimport { useAsyncCallback } from \"../async\";\nimport { Day, dayUtils } from \"../day\";\nimport { useGetOverride } from \"../overrides\";\nimport { useGetAppointments } from \"../appointments\";\nimport { useGetTransition } from \"../location\";\nimport { PlannedEntry } from \"./types\";\nimport { constructDay } from \"./algorithm/construct-day\";\n\nexport type PreparePlanOptions = {\n  start: Day;\n  end: Day;\n}\n\nexport type PlanOptions = PreparePlanOptions & {\n  location: UserLocation;\n}\n\nexport type PlanResultDay = {\n  day: Day;\n  start: Time;\n} & ({\n  status: 'waiting',\n} | {\n  status: 'running',\n  nodes: number;\n  strategy: Strategies;\n} | {\n  status: 'done';\n  nodes: number;\n  strategy: Strategies;\n  plan: PlannedEntry[];\n  impossible: Task[];\n});\n\nexport type PlanResult = {\n  impossible: Task[];\n  days: {\n    [day: string]: PlanResultDay;\n  }\n}\n\nconst getDays = (start: Day, end: Day): Day[] => [start];\n\nconst firstValue = <T>(...args: (T | undefined)[]): T => {\n  for (let arg of args) {\n    if (typeof arg !== 'undefined') {\n      return arg;\n    }\n  }\n  return undefined as unknown as T;\n}\n\nconst usePreparePlan = () => {\n  const routines = useRoutines();\n  const goals = useGoals();\n  const getOverrides = useGetOverride();\n  const [getAppontments] = useGetAppointments();\n\n  const preparePlan = useAsyncCallback(\n    async ({ start, end }: PreparePlanOptions) => {\n      const days = await Promise.all(getDays(start, end).map(async (day) => {\n        const overrides = await getOverrides(day);\n        const start: Time = firstValue(overrides.startTime, { hour: 7, minute: 0 });\n        const appointments = await getAppontments(day);\n        const tasks = [...routines, ...appointments].map<Task | undefined>((task) => {\n          const override = overrides.tasks[task.id];\n          if (override.enabled === false) {\n            return undefined;\n          }\n          const result: Task = {\n            ...task,\n            startTime: {\n              min: firstValue(override?.startMin, task.startTime.min),\n              max: firstValue(override?.startMax, task.startTime.max),\n            },\n            duration: firstValue(override?.duration, task.duration),\n            required: firstValue(override?.required, task.required),\n          }\n          return result;\n        }).filter(Boolean).map(a => a as Exclude<typeof a, undefined>);\n\n        return {\n          day,\n          start,\n          tasks,\n        }\n\n      }));\n      return {\n        goals: [...goals],\n        days,\n      }\n    },\n    [routines, goals, getOverrides, getAppontments],\n  );\n\n  return preparePlan;\n}\n\nexport const usePlanOptions = () => {\n  const { data } = useContext(PlannerContext);\n  return data;\n}\n\nexport const useSetPlanOptions = () => {\n  const { setData } = useContext(PlannerContext);\n  return setData;\n}\n\nexport const usePlan = () => {\n  const [preparePlan] = usePreparePlan();\n  const getTransition = useGetTransition();\n  const createPlan = useAsyncCallback(\n    async ({ location, ...prepareOptions}: PlanOptions) => {\n      const prepared = await preparePlan(prepareOptions);\n      let result: PlanResult = {\n        impossible: [],\n        days: prepared.days.reduce((output, current) => ({\n          ...output,\n          [dayUtils.toId(current.day)]: {\n            day: current.day,\n            start: current.start,\n            status: 'waiting',\n          },\n        }), {} as {[name: string]: PlanResultDay})\n      }\n      const update = (next: PlanResult) => {\n        result = next;\n      }\n      for (let day of prepared.days) {\n        const id = dayUtils.toId(day.day);\n        const dayGoal = prepared.goals;\n        const graph = await buildGraph({\n          location,\n          time: day.start,\n          tasks: [...day.tasks, ...dayGoal],\n          context: {\n            getTransition,\n          },\n          callback: (status) => {\n            update({\n              ...result,\n              days: {\n                ...result.days,\n                [id]: {\n                  day: day.day,\n                  start: day.start,\n                  status: 'running',\n                  nodes: status.nodes,\n                  strategy: status.strategy,\n                }\n              }\n            });\n          }\n        });\n        const [winner] = graph;\n        const plan = constructDay(winner);\n        update({\n          ...result,\n          days: {\n            ...result.days,\n            [id]: {\n              ...result.days[id],\n              impossible: winner.impossibeTasks,\n              status: 'done',\n              plan,\n            }\n          }\n        })\n        prepared.goals = prepared.goals.filter((goal) => {\n          if (!dayGoal.find(d => d.id === goal.id)) {\n            return true;\n          }\n          if (!winner.impossibeTasks.find(d => d.id === goal.id)) {\n            return false;\n          }\n          return true;\n        })\n      }\n\n      return {\n        ...result,\n        impossible: prepared.goals,\n      };\n    },\n    [preparePlan, getTransition],\n  );\n  return createPlan;\n}\n","import { useAsync, useAsyncCallback } from \"#/features/async\";\nimport { useContext } from \"react\"\nimport { Day, useDate } from \"../day\";\nimport { AppointmentsContext, AppointmentsStatus } from \"./context\"\n\nexport const useAppointmentStatus = () => {\n  const { status } = useContext(AppointmentsContext);\n  return status;\n};\n\nexport const useAppointments = () => {\n  const date = useDate();\n  const context = useContext(AppointmentsContext);\n  const result = useAsync(\n    async () => {\n      if (context.status !== AppointmentsStatus.approved) {\n        return [];\n      }\n      const appointments = await context.getDay(date);\n      return appointments;\n    },\n    [\n      context.status === AppointmentsStatus.approved && context.getDay,\n      date,\n    ],\n  );\n  return result;\n}\n\nexport const useGetAppointments = () => {\n  const context = useContext(AppointmentsContext);\n  const result = useAsyncCallback(\n    async (date: Day) => {\n      if (context.status !== AppointmentsStatus.approved) {\n        return [];\n      }\n      const appointments = await context.getDay(date);\n      return appointments;\n    },\n    [\n      context.status === AppointmentsStatus.approved && context.getDay,\n    ],\n  );\n  return result;\n}\n","import { ReactNode } from \"react\"\nimport { AppointmentsProvider } from \"./appointments\"\nimport { DateProvider } from \"./day\"\nimport { GoalsProvider } from \"./goals/context\"\nimport { GetTransition, LocationProvider } from \"./location\"\nimport { OverrideProvider } from \"./overrides\"\nimport { PlannerProvider } from \"./planner\"\nimport { RoutinesProvider } from \"./routines\"\n\ntype SetupProps = {\n  children: ReactNode;\n  getTransit: GetTransition;\n}\n\nconst Setup: React.FC<SetupProps> = ({\n  children,\n  getTransit,\n}) => {\n  return (\n    <DateProvider>\n      <PlannerProvider storageKey=\"planner\">\n        <LocationProvider getTransition={getTransit} lookup={() => []}>\n          <AppointmentsProvider>\n            <GoalsProvider storageKey=\"goals\">\n              <RoutinesProvider storageKey=\"routines\">\n                <OverrideProvider>\n                  {children}\n                </OverrideProvider>\n              </RoutinesProvider>\n            </GoalsProvider>\n          </AppointmentsProvider>\n        </LocationProvider>\n      </PlannerProvider>\n    </DateProvider>\n  );\n};\n\nexport type { SetupProps };\nexport { Setup };\n","import React from 'react';\nimport { Feather, } from '@expo/vector-icons';\nimport { useTheme } from 'styled-components/native';\nimport { Theme } from '#/ui/theme';\n\ntype IconNames = keyof typeof Feather.glyphMap;\ntype Props = {\n  size?: number;\n  color?: keyof Theme['colors'];\n  name: IconNames;\n}\n\nfunction Icon({\n  size,\n  color,\n  name,\n}: Props) {\n  const theme = useTheme();\n  return (\n    <Feather\n      name={name}\n      color={color ? theme.colors[color] : theme.colors.icon}\n      size={size ?? theme.sizes.icons}\n    />\n  ) \n};\n\nexport type { IconNames };\nexport { Icon };\n","import { Modal } from 'react-native';\n\nexport default Modal;\n","import React, { ReactNode } from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport styled from 'styled-components/native';\nimport { Theme } from '#/ui/theme';\n\ntype CellProps = {\n  accessibilityRole?: TouchableOpacity['props']['accessibilityRole'];\n  accessibilityLabel?: string;\n  accessibilityHint?: string;\n  children?: ReactNode;\n  onPress?: () => any;\n  background?: string;\n  flex?: string | number;\n  direction?: 'row' | 'column';\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch';\n  opacity?: number;\n}\n\nconst Wrapper = styled.View<{\n  background?: string;\n  flex?: string | number;\n  direction?: 'row' | 'column';\n  theme: Theme;\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch';\n  opacity?: number;\n}>`\n  padding: ${({ theme }) => theme.margins.medium / 2}px;\n  ${({ background }) => (background ? `background: ${background};` : '')}\n  ${({ flex }) => (flex ? `flex: ${flex};` : '')}\n  flex-direction: ${({ direction }) => (direction ? direction : 'row')};\n  align-items: ${({ align }) => (align ? align : 'center')};\n  ${({ opacity }) => (opacity? `opacity: ${opacity};` : '')}\n`;\n\nconst Touch = styled.TouchableOpacity``;\n\nconst Cell: React.FC<CellProps> = ({ children, onPress, ...props}) => {\n  const {\n    accessibilityLabel,\n    accessibilityRole,\n    accessibilityHint,\n    ...others\n  } = props;\n  const node = (\n    <Wrapper {...others}>\n      {children}\n    </Wrapper>\n  );\n  if (onPress) {\n    return (\n      <Touch\n        accessible\n        accessibilityRole={accessibilityRole || 'button'}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityHint={accessibilityHint}\n        onPress={onPress}\n      >\n        {node}\n      </Touch>\n    );\n  }\n  return node;\n};\n\nexport type { CellProps };\nexport { Cell };\n","import styled from 'styled-components/native';\nimport { Theme } from 'theme';\n\ninterface TextProps {\n  color?: keyof Theme['colors'];\n  bold?: boolean;\n  theme: Theme;\n}\n\nconst BaseText = styled.Text<TextProps>`\n  color: ${({ color, theme }) =>\n    color ? theme.colors[color] : theme.colors.text};\n  font-weight: ${({ bold }) => (bold ? 'bold' : 'normal')};\n  font-size: ${({ theme }) => theme.font.baseSize}px;\n`;\n\nconst Jumbo = styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 2.8}px;\n  font-weight: bold;\n`;\n\nconst Title2 = styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 1.3}px;\n  font-weight: bold;\n`;\n\nconst Title1 = styled(BaseText)`\n  font-weight: bold;\n`;\n\nconst Body1 = styled(BaseText)``;\n\nconst Overline = styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 0.6}px;\n  text-transform: uppercase;\n`;\n\nconst Caption = styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 0.8}px;\n`;\n\nconst Link = styled(BaseText)`\n  text-transform: uppercase;\n`;\n\nexport type { TextProps };\nexport { Jumbo, Title2, Title1, Body1, Overline, Caption, Link };\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components/native';\nimport { Title1, Body1, Overline } from '#/ui/typography';\nimport { Cell, CellProps } from './cell';\n\ntype RowProps = CellProps & {\n  background?: string;\n  top?: ReactNode;\n  left?: ReactNode;\n  right?: ReactNode;\n  title?: ReactNode;\n  overline?: ReactNode;\n  description?: ReactNode;\n  children?: ReactNode;\n  opacity?: number;\n  onPress?: () => any;\n}\n\nconst Children = styled.View``;\n\nconst componentOrString = (\n  input: ReactNode,\n  Component: React.FC<{ children: ReactNode }>\n) => {\n  if (!input) {\n    return null;\n  }\n  if (typeof input === 'string') {\n    return <Component>{input}</Component>;\n  }\n  return input;\n};\n\nconst Row: React.FC<RowProps> = ({\n  background,\n  top,\n  left,\n  right,\n  title,\n  opacity,\n  overline,\n  description,\n  children,\n  onPress,\n  ...cellProps\n}) => (\n  <Cell {...cellProps} background={background} opacity={opacity} onPress={onPress}>\n    {left}\n    <Cell flex={1} direction=\"column\" align=\"stretch\">\n      {!!top}\n      {componentOrString(overline, Overline)}\n      {componentOrString(title, Title1)}\n      {componentOrString(description, Body1)}\n      {!!children && <Children>{children}</Children>}\n    </Cell>\n    {right}\n  </Cell>\n);\n\nexport type { RowProps };\nexport { Row };\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { Cell } from './cell';\n\ninterface Props {\n  color?: string;\n  size?: number;\n  onPress?: () => void;\n}\n\nconst Icon = styled.View<{ size: number; color: string }>`\n  background: ${({ color }) => color};\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  border-radius: ${({ size }) => size / 4}px;\n`;\n\nconst PlaceholderIcon: React.FC<Props> = ({\n  color = 'red',\n  size = 24,\n  onPress,\n}) => (\n  <Cell onPress={onPress}>\n    <Icon color={color} size={size} />\n  </Cell>\n);\n\nexport { PlaceholderIcon };\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components/native';\nimport { Keyboard, Platform } from 'react-native';\n\nconst KeyboardAvoiding = styled.KeyboardAvoidingView`\n  flex: 1;\n`;\n\nconst Pressable = styled.Pressable`\n  flex: 1;\n`\n// background-color: ${({ theme }) => theme.colors.background};\n\nconst Page: React.FC = ({ children }) => {\n  const [keyboardShown, setKeyboardShown] = useState(false);\n  useEffect(() => {\n    const keyboardDidShow = () => setKeyboardShown(true);\n    const keyboardDidHide = () => setKeyboardShown(false);\n    Keyboard.addListener('keyboardDidShow', keyboardDidShow);\n    Keyboard.addListener('keyboardDidHide', keyboardDidHide);\n\n    return () => {\n      Keyboard.removeListener('keyboardDidShow', keyboardDidShow);\n      Keyboard.removeListener('keyboardDidHide', keyboardDidHide);\n    };\n  }, []);\n  return (\n    <Pressable\n      disabled={!keyboardShown}\n      onPress={() => Keyboard.dismiss()}\n    >\n      <KeyboardAvoiding behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        {children}\n      </KeyboardAvoiding>\n    </Pressable>\n  );\n};\n\nexport { Page };\n","import React, { ReactNode, useCallback, useRef } from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport styled from 'styled-components/native';\nimport { Icon } from '../icon';\nimport { Row, Cell, RowProps } from '../row';\nimport { Page } from '../page';\nimport { ScrollView } from 'react-native';\n\ntype Props = RowProps & {\n  onClose?: () => void;\n  children: ReactNode;\n}\n\nconst Top = styled.Pressable`\n  flex: 1;\n`;\n\nconst Wrapper = styled.View`\n  background: ${({ theme }) => theme.colors.background};\n  width: 100%;\n  max-width: 500px;\n  shadow-color: ${({ theme }) => theme.colors.shadow};\n  shadow-offset: 0 0;\n  shadow-opacity: 1;\n  shadow-radius: 200px;\n  border-radius: 12px;\n  margin-bottom: -12px;\n  max-height: 80%;\n`;\n\nconst Outer = styled.View`\n  flex: 1;\n  align-items: center;\n`;\n\nconst Content = styled.ScrollView`\n`;\n\nconst Popup: React.FC<Props> = ({ children, onClose, right, ...rowProps }) => {\n  const insets = useSafeAreaInsets();\n\n  return (\n    <Page>\n      <Outer>\n        <Top onPress={onClose} />\n        <Wrapper style={{ paddingBottom: insets.bottom + 12 }}>\n          <Row\n            {...rowProps}\n            right={\n              <>\n                {right}\n                <Cell onPress={onClose}>\n                  <Icon name=\"x-circle\" />\n                </Cell>\n              </>\n            }\n          />\n          <Content\n            alwaysBounceVertical={false}\n          >\n            {children}\n          </Content>\n        </Wrapper>\n      </Outer>\n    </Page>\n  );\n};\n\nexport { Popup };\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components/native';\nimport { TouchableOpacity } from 'react-native';\nimport { IconNames, Icon } from '../icon';\nimport { Theme } from '#/ui/theme';\nimport { Link } from '#/ui/typography';\n\ninterface Props {\n  title?: string;\n  icon?: IconNames;\n  onPress?: () => any;\n  accessibilityRole?: TouchableOpacity['props']['accessibilityRole'];\n  accessibilityLabel?: string;\n  accessibilityHint?: string;\n  type?: 'primary' | 'secondary' | 'destructive';\n}\n\nconst Touch = styled.TouchableOpacity``;\n\nconst Wrapper = styled.View<{ theme: Theme }>`\n  color: ${({ theme }) => theme.colors.primary};\n  padding: ${({ theme }) => theme.margins.small}px;\n  border-radius: ${({ theme }) => theme.sizes.corners}px;\n  align-items: center;\n`;\n\nconst Button: React.FC<Props> = ({\n  title,\n  icon,\n  type,\n  onPress,\n  accessibilityHint,\n  accessibilityRole,\n  accessibilityLabel,\n}) => (\n  <Touch\n    onPress={onPress}\n    accessible\n    accessibilityHint={accessibilityHint}\n    accessibilityRole={accessibilityRole}\n    accessibilityLabel={accessibilityLabel}\n  >\n    <Wrapper>\n      {title && <Link color={type}>{title}</Link>}\n      {icon && <Icon name={icon} color={type} />}\n    </Wrapper>\n  </Touch>\n);\n\nexport { Button };\n","import React, { ReactNode } from 'react';\nimport { Icon } from '../icon';\nimport { Row, Cell } from '../row';\n\ninterface Props {\n  title: string;\n  add?: () => void;\n  onPress?: () => void;\n  left?: ReactNode;\n}\n\nfunction Header({ title, add, onPress, left }: Props) {\n  return (\n    <Row\n      onPress={onPress}\n      left={left}\n      title={title}\n      right={\n        add && (\n          <Cell onPress={add}>\n            <Icon name=\"plus-circle\" size={18} />\n          </Cell>\n        )\n      }\n    />\n  );\n}\n\nexport { Header };\n","import React, { Fragment, ReactNode, useState } from 'react';\nimport styled from 'styled-components/native';\nimport Collapsible from 'react-native-collapsible';\nimport { Body1 } from '#/ui/typography';\nimport { Icon } from '../icon';\nimport { Row, Cell } from '../row';\nimport { Header } from './header';\n\ninterface ListProps<T> {\n  title: string;\n  items: T[];\n  startHidden?: boolean;\n  getKey: (item: T) => any;\n  render: (item: T) => ReactNode;\n  add?: () => void;\n}\n\ninterface ChildProps {\n  title: string;\n  startHidden?: boolean;\n  add?: () => void;\n  children?: ReactNode;\n}\n\nconst Wrapper = styled.View`\n  border-radius: 7px;\n  background: ${({ theme }) => theme.colors.background};\n  shadow-offset: 0 0;\n  shadow-opacity: 0.1;\n  shadow-color: ${({ theme }) => theme.colors.shadow};\n  shadow-radius: 5px;\n`;\n\nfunction Group<T = any>(props: ListProps<T> | ChildProps) {\n  const [visible, setVisible] = useState(!props.startHidden);\n  const { title, items, getKey, render, add, children } =\n    props as ListProps<T> & ChildProps;\n  return (\n    <Row>\n      <Wrapper>\n        <>\n          <Header\n            left={\n              <Cell><Icon name={visible ? 'chevron-down' : 'chevron-up'} size={18} /></Cell>\n            }\n            title={title}\n            add={add}\n            onPress={() => setVisible(!visible)}\n          />\n          <Collapsible collapsed={!visible}>\n            {items && items.map((item, i) => (\n              <Fragment key={getKey(item) || i}>{render(item)}</Fragment>\n            ))}\n            {children}\n            {!children && (!items || items.length === 0) && (\n              <Row\n                left={\n                  <Cell>\n                    <Icon color=\"textShade\" name=\"maximize\" />\n                  </Cell>\n                }\n              >\n                <Body1 style={{ marginLeft: 10 }} color=\"textShade\">\n                  Empty\n                </Body1>\n              </Row>\n            )}\n          </Collapsible>\n        </>\n      </Wrapper>\n    </Row>\n  );\n}\n\nexport { Group };\n","import { FlatList } from \"react-native\";\nimport { Button } from \"../button\";\nimport { Icon } from \"../icon\";\nimport { Cell, Row, RowProps } from \"../row\";\n\ntype ListProps<T> = {\n  add?: () => void;\n  remove?: (item: T) => any;\n  getKey: (item: T) => string;\n  items: T[];\n  render: (item: T) => RowProps;\n}\n\nfunction List<T>({\n  add,\n  remove,\n  getKey,\n  items,\n  render,\n}: ListProps<T>) {\n  return (\n    <>\n      {!!add && <Button title=\"Add\" onPress={add}/>}\n      <FlatList\n        data={items}\n        keyExtractor={item => getKey(item)}\n        renderItem={({ item }) => {\n          const {right, ...props} = render(item);\n          return (\n            <Row\n              {...props}\n              right={(\n                <>\n                  {right}\n                  {!!remove && (\n                    <Cell onPress={() => remove(item)}>\n                      <Icon\n                        name=\"trash\"\n                        color=\"destructive\"\n                      />\n                    </Cell>\n                  )}\n                </>\n              )}\n            />\n          );\n        }}\n      />\n    </>\n  );\n}\n\nexport { List };\n","import { useMemo } from \"react\";\nimport CalendarStrip from 'react-native-calendar-strip';\nimport { dayUtils, useDate, useSetDate } from \"#/features/day\";\nimport { useTheme } from \"styled-components/native\";\n\nconst DateBar: React.FC = () => {\n  const date = useDate();\n  const theme = useTheme();\n  const setDate = useSetDate();\n  const selected = useMemo(\n    () => [{\n      date: dayUtils.dayToDate(date),\n      lines: [{ color: theme.colors.icon }],\n    }],\n    [date],\n  );\n  return (\n    <CalendarStrip\n      markedDates={selected}\n      style={{\n        height: 150,\n        paddingTop: 60,\n        paddingBottom: 10,\n        backgroundColor: theme.colors.background,\n      }}\n      calendarColor={'#fff'}\n      selectedDate={dayUtils.dayToDate(date)}\n      startingDate={dayUtils.dayToDate(date)}\n      onDateSelected={(date) => {\n        setDate(dayUtils.dateToDay(date.utc().toDate()));\n      }}\n      shouldAllowFontScaling={false}\n      iconContainer={{flex: 0.1}}\n      calendarHeaderStyle={{\n        color: theme.colors.text,\n        fontSize: theme.font.baseSize * 1.2,\n      }}\n      highlightDateNameStyle={{\n        color: theme.colors.icon,\n        fontSize: theme.font.baseSize * 0.6,\n      }}\n      iconLeftStyle={{\n        tintColor: theme.colors.text,\n      }}\n      iconRightStyle={{\n        tintColor: theme.colors.text,\n      }}\n      highlightDateNumberStyle={{\n        color: theme.colors.icon,\n        fontSize: theme.font.baseSize * 1.2,\n      }}\n      dateNumberStyle={{\n        color: theme.colors.text,\n        fontSize: theme.font.baseSize * 1.2,\n      }}\n      dateNameStyle={{\n        color: theme.colors.text,\n        fontSize: theme.font.baseSize * 0.6,\n      }}\n    />\n  );\n};\n\nexport { DateBar };\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { Row, RowProps } from '#/ui/components/base';\n\ntype Props = RowProps & {\n  label: string;\n  placeholder?: string;\n  value: string;\n  onChangeText: (text: string) => any;\n}\n\nconst InputField = styled.TextInput`\n  background: ${({ theme }) => theme.colors.input};\n  color: ${({ theme }) => theme.colors.text};\n  padding: ${({ theme }) => theme.margins.small}px;\n  font-size: ${({ theme }) => theme.font.baseSize}px;\n  border-radius: ${({ theme }) => theme.sizes.corners}px;\n  width: 100%;\n`;\n\nconst TextInput: React.FC<Props> = ({ label, placeholder, value, onChangeText, children, ...row }) => {\n  return (\n    <Row overline={label} {...row}>\n      <InputField\n        placeholder={placeholder}\n        value={value}\n        onChangeText={onChangeText}\n      />\n      {children}\n    </Row>\n  );\n};\n\nexport { TextInput };\n","import { Row, RowProps } from \"#/ui/components/base\"\n\ntype CheckboxProps = RowProps & {\n  value?: boolean;\n  label: string;\n  onChange: (value: boolean) => void;\n}\n\nconst Checkbok: React.FC<CheckboxProps> = ({\n  value,\n  label,\n  onChange,\n  ...rowProps\n}) => (\n  <Row\n    {...rowProps}\n    overline={label}\n    title={value?  'Yes' : 'No'}\n    onPress={() => onChange(!value)}\n  />\n);\n\nexport { Checkbok };\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\nimport { Row, RowProps } from '#/ui/components/base';\nimport { Time, timeUtils } from '#/features/data';\n\ntype Props = RowProps & {\n  label: string;\n  placeholder?: string;\n  value?: Time;\n  onChange: (time?: Time) => any;\n}\n\nconst TimeField = styled.TextInput`\n  background: ${({ theme }) => theme.colors.input};\n  color: ${({ theme }) => theme.colors.text};\n  padding: ${({ theme }) => theme.margins.small}px;\n  font-size: ${({ theme }) => theme.font.baseSize}px;\n  border-radius: ${({ theme }) => theme.sizes.corners}px;\n  width: 100%;\n`;\n\nconst TimeInput: React.FC<Props> = ({ label, placeholder, value, onChange, children, ...row }) => {\n\n  return (\n    <Row overline={label} {...row}>\n      <TimeField\n        placeholder={placeholder}\n        value={value ? timeUtils.timeToString(value) : ''}\n        onChangeText={(text) => onChange(text ? timeUtils.stringToTime(text) : undefined)}\n      />\n      {children}\n    </Row>\n  );\n};\n\nexport { TimeInput };\n","import { Body1 } from \"#/ui/typography\";\nimport { useCallback } from \"react\";\nimport styled from \"styled-components/native\";\nimport { Row, RowProps, Cell, Icon } from \"../../base\";\n\ntype Props<T> = {\n  label: string;\n  setEnabled: (enabled: boolean) => void;\n  enabled: boolean;\n  onChange: (items: T[]) => void;\n  items: T[];\n  enabledText: string;\n  disabledText: string;\n  selected?: T[];\n  render: (item: T) => RowProps;\n  getKey: (item: T) => string;\n};\n\nconst Wrapper = styled.View`\n  border-radius: 5px;\n  background: ${({ theme }) => theme.colors.shade};\n  border-radius: 7px;\n  shadow-offset: 0 0;\n  shadow-opacity: 0.1;\n  shadow-color: ${({ theme }) => theme.colors.shadow};\n  shadow-radius: 5px;\n`;\n\nconst Top = styled.View`\n  flex-direction: row;\n`;\n\nconst Touch = styled.TouchableOpacity`\n  flex: 1;\n`;\n\nconst Content = styled.View`\n`;\n\nconst TopButton = styled.View<{ selected: boolean }>`\n  background: ${({ selected, theme }) => selected ? theme.colors.shade : theme.colors.background};\n  padding: ${({ theme }) => theme.margins.small}px;\n  align-items: center;\n  justify-content: center;\n`\n\nfunction OptionalSelector<T>({\n  label,\n  enabled,\n  setEnabled,\n  onChange,\n  items,\n  enabledText,\n  disabledText,\n  selected,\n  render,\n  getKey,\n}: Props<T>) {\n  const toggle = useCallback(\n    (item: T) => {\n      if (!selected) {\n        return onChange([item]);\n      }\n      const nextId = getKey(item);\n      const current = selected.find(i => getKey(i) === nextId);\n      if (current) {\n        onChange(selected.filter(i => i !== current));\n      } else {\n        onChange([...selected, item]);\n      }\n    },\n    [selected, getKey]\n  )\n  return (\n    <Row overline={label}>\n      <Wrapper>\n        <Top>\n          <Touch onPress={() => setEnabled(false)}>\n            <TopButton selected={!enabled}>\n              <Body1>{disabledText}</Body1>\n            </TopButton>\n          </Touch>\n          <Touch onPress={() => setEnabled(true)}>\n            <TopButton selected={enabled}>\n              <Body1>{enabledText}</Body1>\n            </TopButton>\n          </Touch>\n        </Top>\n        {enabled && (\n          <Content>\n            {items.map((item) => {\n              const { left, ...props } = render(item);\n              const isSelected = !!selected && selected.includes(item);\n              return (\n                <Row\n                  key={getKey(item)}\n                  {...props}\n                  left={(\n                    <>\n                      <Cell onPress={() => toggle(item)}>\n                        <Icon name={isSelected ? 'check-circle' : 'circle'} />\n                      </Cell>\n                      {left}\n                    </>\n                  )}\n                />\n              );\n            })}\n          </Content>\n        )}\n      </Wrapper>\n    </Row>\n  )  \n}\n\nexport { OptionalSelector }\n","import { useMemo } from \"react\";\nimport { useAppointments } from \"../appointments\";\nimport { useAsyncCallback } from \"../async\";\nimport { Task, TaskType } from \"../data\";\nimport { useGoals, useRemoveGoal, useSetGoals } from \"../goals/hooks\";\nimport { useRemoveRoutine, useRoutines, useSetRoutine } from \"../routines\";\n\nexport const useTasks = (type?: TaskType) => {\n  const [appointments] = useAppointments();\n  const routines = useRoutines();\n  const goals = useGoals();\n\n  const tasks = useMemo<Task[]>(\n    () => {\n      if (!type) {\n        return [...(appointments || []), ...routines, ...goals];\n      }\n      const map = {\n        [TaskType.routine]: routines,\n        [TaskType.appointment]: appointments,\n        [TaskType.goal]: goals,\n      }\n      return map[type] || [];\n    },\n    [appointments, routines, goals, type],\n  );\n\n  return tasks;\n};\n\nexport const useSetTask = () => {\n  const setRoutine = useSetRoutine();\n  const setGoal = useSetGoals();\n\n  const result = useAsyncCallback(\n    async (task: Task) => {\n      if (task.type === TaskType.routine) {\n        await setRoutine(task);\n      } else if (task.type === TaskType.goal) {\n        await setGoal(task);\n      }\n    },\n    [setRoutine, setGoal],\n  );\n  return result;\n};\n\nexport const useRemoveTask = () => {\n  const removeRoutine = useRemoveRoutine();\n  const removeGoal = useRemoveGoal();\n\n  const result = useAsyncCallback(\n    async (task: Task) => {\n      if (task.type === TaskType.routine) {\n        removeRoutine(task.id);\n      } else if (task.type === TaskType.goal) {\n        removeGoal(task.id);\n      }\n    },\n    [removeRoutine, removeGoal],\n  );\n  return result;\n};\n","import { Task } from \"#/features/data\";\nimport { Row, RowProps } from \"../../base\";\n\ntype Props = RowProps & {\n  item: Task;\n}\n\nconst TaskListItem: React.FC<Props> = ({ item, ...rowProps }) => {\n  return (\n    <Row\n      {...rowProps}\n      title={item.title}\n    />\n  );\n};\n\nexport { TaskListItem };\n","import { TaskType } from \"#/features/data\";\nimport { useTasks } from \"#/features/tasks\";\nimport { Group } from \"#/ui/components/base\"\nimport { RootNavigationProp } from \"#/ui/router\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useCallback } from \"react\";\nimport { TaskListItem } from \"../list-item\";\n\ntype Props = {\n  type: TaskType;\n}\n\nconst TaskGroup: React.FC<Props> = ({ type }) => {\n  const { navigate } = useNavigation<RootNavigationProp>();\n  const tasks = useTasks(type);\n\n  const add = useCallback(\n    (type: TaskType) => {\n      navigate('add-task', {\n        type,\n      })\n    },\n    [navigate],\n  );\n\n  return (\n    <Group\n      title={type}\n      add={() => add(type)}\n      items={tasks || []}\n      getKey={(task) => task.id}\n      render={(task) => (\n        <TaskListItem\n          item={task}\n          onPress={() => {\n            navigate('set-override', { id: task.id });\n          }}\n        />\n      )}\n    />\n  );\n};\n\nexport { TaskGroup };\n","import { useAppointmentStatus } from \"#/features/appointments\";\nimport { AppointmentsStatus } from \"#/features/appointments/context\";\nimport { TaskType } from \"#/features/data\";\nimport { dayUtils, useDate } from \"#/features/day\";\nimport { useSetStartTimeOverride, useStartTimeOverride } from \"#/features/overrides\";\nimport { DateBar } from \"#/ui/components/date\"\nimport { TimeInput } from \"#/ui/components/form\";\nimport { TaskGroup } from \"#/ui/components/tasks/group\";\n\nconst DayScreen: React.FC = () => {\n  const date = useDate();\n  const appointmentStatus = useAppointmentStatus();\n  const startTimeOverride = useStartTimeOverride();\n  const [setStartTimeOverride] = useSetStartTimeOverride();\n\n  return (\n    <>\n      <DateBar />\n      <TimeInput\n        key={dayUtils.toId(date)}\n        label=\"Start time\"\n        value={startTimeOverride}\n        onChange={setStartTimeOverride}\n      />\n      {appointmentStatus === AppointmentsStatus.rejected && (\n        <TaskGroup type={TaskType.appointment} />\n      )}\n      <TaskGroup type={TaskType.routine} />\n      <TaskGroup type={TaskType.goal} />\n    </>\n  );\n};\n\nexport { DayScreen };\n","import { useAsyncCallback } from \"#/features/async\";\nimport { nanoid } from 'nanoid';\nimport { Task, TaskType, Time, UserLocation } from \"#/features/data\";\nimport { useLocations } from \"#/features/location\";\nimport { useSetTask, useTasks } from \"#/features/tasks\";\nimport { Button, Cell, Group, Popup, Row } from \"#/ui/components/base\"\nimport { Checkbok, TextInput, TimeInput, OptionalSelector } from \"#/ui/components/form\";\nimport { RootNavigationProp, TaskAddScreenRouteProp } from \"#/ui/router\";\nimport { Overline } from \"#/ui/typography\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components/native\";\n\nconst SideBySide = styled.View`\n  flex-direction: row;\n`;\n\nconst dayNames = [\n  'Monday',\n  'Tuesday',\n  'Wednsday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n]\n\nconst days = new Array(7).fill(undefined).map((_, i) => ({\n  id: i,\n  name: dayNames[i],\n}))\n\nconst TaskAddScreen: React.FC = () => {\n  const { params: { type, id }} = useRoute<TaskAddScreenRouteProp>();\n  const { navigate, goBack } = useNavigation<RootNavigationProp>();\n  const [currentId, setCurrentId] = useState(id || nanoid());\n  const [setTask] = useSetTask();\n  const tasks = useTasks();\n  const [currentType, setCurrentType] = useState<TaskType>(type);\n\n  const locations = useLocations();\n  const [title, setTitle] = useState('');\n  const [maxStart, setMaxStart] = useState<Time>();\n  const [minStart, setMinStart] = useState<Time>();\n  const [duration, setDuration] = useState('');\n  const [hasLocation, setHasLocation] = useState(false);\n  const [selectedLocations, setSelectedLocations] = useState<UserLocation[]>([]);\n  const [hasDays, setHasDays] = useState(false);\n  const [selectedDays, setSelectedDays] = useState<typeof days>([]);\n\n  useEffect(\n    () => {\n      if (!id) {\n        return;\n      }\n      const current = tasks.find(t => t.id === id);\n      if (!current) {\n        return;\n      }\n      setTitle(current.title);\n      setMaxStart(current.startTime.max);\n      setMinStart(current.startTime.min);\n      setDuration(current.duration?.toString() || '');\n      setHasLocation(!!current.locations);\n      setSelectedLocations(current.locations || []);\n      setCurrentType(current.type || TaskType.goal);\n      if (current.type === TaskType.goal || current.type === TaskType.routine) {\n        setHasDays(!!current.days);\n      }\n    },\n    [id],\n  )\n\n  const [save] = useAsyncCallback(\n    async () => {\n      const task: Partial<Task> = {\n        id: currentId,\n        title,\n        type: currentType,\n        required: true,\n        startTime: {\n          max: maxStart!,\n          min: minStart!,\n        },\n        duration: parseInt(duration),\n        locations: hasLocation ? selectedLocations: undefined,\n      };\n      if (task.type === TaskType.goal || task.type === TaskType.routine) {\n        task.days = hasDays\n          ? new Array(7).fill(undefined).map((_, i) => !!selectedDays.find(d => d.id === i))\n          : undefined;\n      }\n      await setTask(task as Task);\n      navigate('main');\n    },\n    [\n      title,\n      currentId,\n      maxStart,\n      minStart,\n      duration,\n      hasLocation,\n      selectedLocations,\n      hasDays,\n      selectedDays,\n    ],\n  );\n\n  return (\n    <Popup title={`Add ${type}`} onClose={goBack}>\n      <Group title=\"Basic\">\n        <TextInput label=\"Title\" value={title} onChangeText={setTitle} />\n        <SideBySide>\n          <TimeInput flex={1} label=\"Min start\" value={minStart} onChange={setMinStart} />\n          <TimeInput flex={1} label=\"Max start\" value={maxStart} onChange={setMaxStart} />\n        </SideBySide>\n        <TextInput\n          label=\"Duration\"\n          value={duration}\n          onChangeText={setDuration}\n          right={<Cell><Overline>min</Overline></Cell>}\n        />\n      </Group>\n      <Group title=\"Optional\" startHidden>\n        <OptionalSelector\n          label=\"Location\"\n          enabled={hasLocation}\n          items={locations}\n          selected={selectedLocations}\n          onChange={setSelectedLocations}\n          render={location => ({\n            title: location.title,\n          })}\n          getKey={location => location.id}\n          setEnabled={setHasLocation}\n          disabledText=\"Anywhere\"\n          enabledText=\"Specific location\"\n        />\n        <OptionalSelector\n          label=\"Days\"\n          enabled={hasDays}\n          items={days}\n          selected={selectedDays}\n          onChange={setSelectedDays}\n          render={day=> ({\n            title: day.name\n          })}\n          getKey={day => day.id.toString()}\n          setEnabled={setHasDays}\n          disabledText=\"Any day\"\n          enabledText=\"Specific days\"\n        />\n        <SideBySide>\n          <Checkbok label=\"Required\" flex={1} />\n          <TextInput label=\"Priority\" flex={1} />\n        </SideBySide>\n        {type === TaskType.goal && (\n          <SideBySide>\n            <TextInput label=\"Start\" flex={1} />\n            <TextInput label=\"Deadline\" flex={1} />\n          </SideBySide>\n        )}\n      </Group>\n      <Row>\n        <Button onPress={save} title=\"Save\" type=\"primary\" />\n      </Row>\n    </Popup>\n  );\n};\n\nexport { TaskAddScreen };\n","import { TaskType } from \"#/features/data\";\nimport { Page, Row } from \"#/ui/components/base\";\nimport { MoreScreenNavigationProps } from \"#/ui/router\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst MoreScreen: React.FC = () => {\n  const { navigate } = useNavigation<MoreScreenNavigationProps>();\n\n  return (\n    <Page>\n      <Row\n        title=\"Calendars\"\n      />\n      <Row\n        title=\"Locations\"\n        onPress={() => navigate('locations')}\n      />\n      <Row\n        title=\"Routines\"\n        onPress={() => navigate('tasks', { type: TaskType.routine })}\n      />\n      <Row\n        title=\"Goals\"\n        onPress={() => navigate('tasks', { type: TaskType.goal })}\n      />\n    </Page>\n  );\n}\n\nexport { MoreScreen };\n","import { useLocations, useRemoveLocation } from \"#/features/location\"\nimport { List, Page } from \"#/ui/components/base\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst LocationListScreen: React.FC = () => {\n  const { navigate } = useNavigation();\n  const locations = useLocations();\n  const removeLocation = useRemoveLocation();\n\n  return (\n    <Page>\n      <List\n        items={locations}\n        remove={l => removeLocation(l.id)}\n        getKey={l => l.id}\n        add={() => navigate('set-location', {})}\n        render={(item) => ({\n          title: item.title,\n        })}\n      />\n    </Page>\n  );\n}\n\nexport { LocationListScreen };\n","import { nanoid } from 'nanoid';\nimport { useAsyncCallback } from \"#/features/async\";\nimport { useLocations, useSetLocation } from \"#/features/location\"\nimport { Button, Popup, Row } from \"#/ui/components/base\";\nimport { TextInput } from \"#/ui/components/form\";\nimport { LocationSetScreenRouteProp, RootNavigationProp } from \"#/ui/router\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { useEffect, useState } from \"react\";\n\nconst LocationSetScreen: React.FC = () => {\n  const {\n    params: { id = nanoid() },\n  } = useRoute<LocationSetScreenRouteProp>();\n  const { navigate } = useNavigation<RootNavigationProp>();\n  const locations = useLocations();\n  const [title, setTitle] = useState('');\n  const setLocation = useSetLocation();\n\n  useEffect(\n    () => {\n      const current = locations.find(l => l.id === id);\n      if (!current) {\n        return;\n      }\n      setTitle(current.title);\n    },\n    [id, locations],\n  )\n\n  const [save] = useAsyncCallback(\n    async () => {\n      await setLocation({\n        id,\n        title,\n        position: { longitute: 0, latitude: 0 },\n      });\n      navigate('main');\n    },\n    [id, title],\n  );\n\n  return (\n    <Popup title=\"Edit location\">\n      <TextInput\n        label=\"What should it call the location?\"\n        value={title}\n        onChangeText={setTitle}\n      />\n      <Row>\n        <Button title=\"Save\" onPress={save} />\n      </Row>\n    </Popup>\n  );\n};\n\nexport { LocationSetScreen };\n","import { useRemoveTask, useTasks } from \"#/features/tasks\";\nimport { List, Page } from \"#/ui/components/base\";\nimport { RootNavigationProp, TaskListScreenRouteProp } from \"#/ui/router\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\n\nconst TaskListScreen: React.FC = () => {\n  const { \n    params: { type },\n  } = useRoute<TaskListScreenRouteProp>();\n  const { navigate } = useNavigation<RootNavigationProp>();\n  const tasks = useTasks(type);\n  const [removeTask] = useRemoveTask();\n\n  return (\n    <Page>\n      <List\n        items={tasks}\n        remove={removeTask}\n        getKey={l => l.id}\n        add={() => navigate('add-task', { type })}\n        render={(item) => ({\n          title: item.title,\n          onPress: () => {\n            navigate('add-task', { id: item.id })\n          },\n        })}\n      />\n    </Page>\n  );\n}\n\nexport { TaskListScreen };\n","import { useAsyncCallback } from \"#/features/async\";\nimport { nanoid } from 'nanoid';\nimport { Task, TaskType, Time, timeUtils, UserLocation } from \"#/features/data\";\nimport { useLocations } from \"#/features/location\";\nimport { useSetTask, useTasks } from \"#/features/tasks\";\nimport { Button, Cell, Group, Popup, Row } from \"#/ui/components/base\"\nimport { Checkbok, TextInput, TimeInput, OptionalSelector } from \"#/ui/components/form\";\nimport { RootNavigationProp, TaskAddScreenRouteProp } from \"#/ui/router\";\nimport { Overline } from \"#/ui/typography\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport styled from \"styled-components/native\";\nimport { Override, useClearTaskOverride, useOverrides, useSetOverride, useSetTaskOverride } from \"#/features/overrides\";\n\nconst SideBySide = styled.View`\n  flex-direction: row;\n  justify-content: flex-end;\n`;\n\nconst dayNames = [\n  'Monday',\n  'Tuesday',\n  'Wednsday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n]\n\nconst days = new Array(7).fill(undefined).map((_, i) => ({\n  id: i,\n  name: dayNames[i],\n}))\n\nconst OverrideSetScreen: React.FC = () => {\n  const { params: { id }} = useRoute<TaskAddScreenRouteProp>();\n  const { navigate, goBack } = useNavigation<RootNavigationProp>();\n  const [setOverride] = useSetTaskOverride()\n  const [clearOverrides] = useClearTaskOverride();\n  const overrides = useOverrides();\n  const tasks = useTasks();\n  const task = useMemo(\n    () => tasks.find(t => t.id === id)!,\n    [tasks, id],\n  );\n\n  const locations = useLocations();\n  const [maxStart, setMaxStart] = useState<Time>();\n  const [minStart, setMinStart] = useState<Time>();\n  const [duration, setDuration] = useState('');\n  const [hasLocation, setHasLocation] = useState(false);\n  const [selectedLocations, setSelectedLocations] = useState<UserLocation[]>([]);\n  const [hasDays, setHasDays] = useState(false);\n  const [selectedDays, setSelectedDays] = useState<typeof days>([]);\n\n  useEffect(\n    () => {\n      if (!id) {\n        return;\n      }\n      const current = overrides.tasks[id];\n      if (!current) {\n        return;\n      }\n      setMinStart(current.startMin);\n      setMaxStart(current.startMax);\n      setDuration(current.duration?.toString() || '');\n      setHasLocation(!!current.locations);\n      setSelectedLocations(current.locations || []);\n    },\n    [id],\n  )\n\n  const [save] = useAsyncCallback(\n    async () => {\n      const override: Override = {\n        startMin: minStart,\n        startMax: maxStart,\n        duration: duration ? parseInt(duration) : undefined,\n        locations: hasLocation ? selectedLocations: undefined,\n      };\n      await setOverride(id, override);\n      navigate('main');\n    },\n    [\n      id,\n      maxStart,\n      minStart,\n      duration,\n      hasLocation,\n      selectedLocations,\n      hasDays,\n      selectedDays,\n    ],\n  );\n\n  const [clear] = useAsyncCallback(\n    async () => {\n      await clearOverrides(id);\n      navigate('main');\n    },\n    [id, clearOverrides],\n  );\n\n  return (\n    <Popup title={`Overrides for ${task.title}`} onClose={goBack}>\n      <SideBySide>\n        <TimeInput\n          flex={1}\n          placeholder={task.startTime.min ? timeUtils.timeToString(task.startTime.min) : undefined}\n          label=\"Min start\"\n          value={minStart}\n          onChange={setMinStart}\n        />\n        <TimeInput\n          flex={1}\n          placeholder={task.startTime.max ? timeUtils.timeToString(task.startTime.max) : undefined}\n          label=\"Max start\"\n          value={maxStart}\n          onChange={setMaxStart}\n        />\n      </SideBySide>\n      <TextInput\n        label=\"Duration\"\n        value={duration}\n        onChangeText={setDuration}\n        right={<Cell><Overline>min</Overline></Cell>}\n      />\n      <OptionalSelector\n        label=\"Location\"\n        enabled={hasLocation}\n        items={locations}\n        selected={selectedLocations}\n        onChange={setSelectedLocations}\n        render={location => ({\n          title: location.title,\n        })}\n        getKey={location => location.id}\n        setEnabled={setHasLocation}\n        disabledText=\"Anywhere\"\n        enabledText=\"Specific location\"\n      />\n      <OptionalSelector\n        label=\"Days\"\n        enabled={hasDays}\n        items={days}\n        selected={selectedDays}\n        onChange={setSelectedDays}\n        render={day=> ({\n          title: day.name\n        })}\n        getKey={day => day.id.toString()}\n        setEnabled={setHasDays}\n        disabledText=\"Any day\"\n        enabledText=\"Specific days\"\n      />\n      <SideBySide>\n        <Checkbok label=\"Required\" flex={1} />\n        <TextInput label=\"Priority\" flex={1} />\n      </SideBySide>\n      <Row>\n        <SideBySide>\n          <Button onPress={clear} title=\"Clear\" type=\"destructive\" />\n          <Button onPress={save} title=\"Save\" type=\"primary\" />\n        </SideBySide>\n      </Row>\n    </Popup>\n  );\n};\n\nexport { OverrideSetScreen };\n","import { useDate } from \"#/features/day\"\nimport { usePlan } from \"#/features/planner\";\nimport { Button } from \"#/ui/components/base\";\nimport { Body1 } from \"#/ui/typography\";\nimport styled from \"styled-components/native\";\n\nconst Scroll = styled.ScrollView`\n flex: 1;\n`\nconst Wrapper = styled.View`\n  margin: 60px 0;\n align-items: center;\n justify-content: center;\n`\n\nconst PlanScreen: React.FC = () => {\n  const date = useDate();\n  const [plan, options] = usePlan();\n\n  return (\n    <Scroll centerContent={true}>\n      <Wrapper>\n        <Button onPress={() => plan({ start: date, end: date, location: { id: 'sdf', title: 'sdf' } })} title=\"Plan\" />\n        <Body1>\n          {JSON.stringify(options.result, null, '  ')}\n        </Body1>\n      </Wrapper>\n    </Scroll>\n  );\n}\n\nexport { PlanScreen }\n","import { useMemo } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useTheme } from 'styled-components/native';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Icon } from '../components/base';\nimport { DayScreen } from '../screens/day';\nimport { TaskAddScreen } from '../screens/task/add';\nimport { MainTabParamList, RootStackParamList } from './types';\nimport { Platform } from 'react-native';\nimport { MoreScreen } from '../screens/more';\nimport { LocationListScreen } from '../screens/locations/list';\nimport { LocationSetScreen } from '../screens/locations/set';\nimport { TaskListScreen } from '../screens/task/list';\nimport { OverrideSetScreen } from '../screens/task/overrides';\nimport { PlanScreen } from '../screens/plan';\n\nconst MoreStackNavigator = createNativeStackNavigator();\n\nconst MoreStack: React.FC = () => (\n  <MoreStackNavigator.Navigator>\n    <MoreStackNavigator.Screen name=\"more-main\" component={MoreScreen} />\n    <MoreStackNavigator.Screen name=\"locations\" component={LocationListScreen} />\n    <MoreStackNavigator.Screen name=\"tasks\" component={TaskListScreen} />\n  </MoreStackNavigator.Navigator>\n);\n\nconst MainTabsNvaigator = createBottomTabNavigator<MainTabParamList>();\n\nconst MainTabs: React.FC = () => {\n  const theme = useTheme();\n  return (\n    <MainTabsNvaigator.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: theme.colors.primary,\n      }}\n    >\n      <MainTabsNvaigator.Screen\n        options={{\n          headerShown: false,\n          tabBarLabel: 'Days',\n          tabBarIcon: ({ focused }) => <Icon color={focused ? 'primary' : 'text'} name=\"check-square\" />,\n        }}\n        name=\"day\"\n        component={DayScreen}\n      />\n      <MainTabsNvaigator.Screen\n        options={{\n          headerShown: false,\n          tabBarLabel: 'Plan',\n          tabBarIcon: ({ focused }) => <Icon color={focused ? 'primary' : 'text'} name=\"check-square\" />,\n        }}\n        name=\"plan\"\n        component={PlanScreen}\n      />\n      <MainTabsNvaigator.Screen\n        options={{\n          headerShown: false,\n          tabBarLabel: 'More',\n          tabBarIcon: ({ focused }) => <Icon color={focused ? 'primary' : 'text'} name=\"more-vertical\" />,\n        }}\n        name=\"more\"\n        component={MoreStack}\n      />\n    </MainTabsNvaigator.Navigator>\n  );\n};\n\nconst RootNavigator = Platform.OS === 'web'\n  ? createStackNavigator<RootStackParamList>()\n  : createNativeStackNavigator<RootStackParamList>();\n\nconst Root: React.FC = () => (\n  <RootNavigator.Navigator screenOptions={{ headerShown: false, animationEnabled: true }}>\n    <RootNavigator.Group>\n      <RootNavigator.Screen name=\"main\" component={MainTabs} />\n    </RootNavigator.Group>\n    <RootNavigator.Group screenOptions={{ presentation: 'transparentModal' }}>\n      <RootNavigator.Screen name=\"add-task\" component={TaskAddScreen} />\n      <RootNavigator.Screen name=\"set-location\" component={LocationSetScreen} />\n      <RootNavigator.Screen name=\"set-override\" component={OverrideSetScreen} />\n    </RootNavigator.Group>\n  </RootNavigator.Navigator>\n);\n\nconst Router: React.FC = () => {\n  const theme = useTheme();\n  const baseTheme = useMemo(\n    () => DefaultTheme,\n    [],\n  );\n  const navigationTheme = useMemo(\n    () => ({\n      ...baseTheme,\n      colors: {\n        ...baseTheme.colors,\n        background: theme.colors.shade,\n        card: theme.colors.background,\n        text: theme.colors.text,\n      }\n    }),\n    [baseTheme, theme],\n  );\n  return (\n    <NavigationContainer theme={navigationTheme}>\n      <Root />\n    </NavigationContainer>\n  )\n};\n\nexport { Router };\n","import { Theme } from './theme';\n\nconst light: Theme = {\n  colors: {\n    primary: '#6c5ce7',\n    icon: '#6c5ce7',\n    destructive: '#e74c3c',\n    shade: '#ededed',\n    input: '#ddd',\n    secondary: 'blue',\n    shadow: '#000',\n    background: '#fff',\n    text: '#000',\n    textShade: '#999',\n  },\n  sizes: {\n    corners: 5,\n    icons: 24,\n  },\n  margins: {\n    small: 8,\n    medium: 16,\n    large: 24,\n  },\n  font: {\n    baseSize: 14,\n  },\n};\n\nexport { light };\n","import 'react-native-get-random-values';\nimport { App } from './src/app';\n\nexport default App;\n","import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { useCallback } from 'react';\nimport { Setup } from './features/setup';\nimport { Router } from './ui/router';\nimport { ThemeProvider } from 'styled-components/native';\nimport { light } from './ui';\n\nconst App: React.FC = () => {\n  const getTransit = useCallback(\n    async (from: any, to: any) => ({\n      to,\n      from,\n      time: 45 * 60 * 1000,\n      usableTime: 0,\n    }),\n    [],\n  )\n  return (\n    <SafeAreaProvider>\n      <StatusBar />\n      <ThemeProvider theme={light}>\n        <Setup getTransit={getTransit}>\n          <Router />\n        </Setup>\n      </ThemeProvider>\n    </SafeAreaProvider>\n  );\n};\n\nexport { App };\n","var map = {\n\t\"./af\": 141,\n\t\"./af.js\": 141,\n\t\"./ar\": 142,\n\t\"./ar-dz\": 143,\n\t\"./ar-dz.js\": 143,\n\t\"./ar-kw\": 144,\n\t\"./ar-kw.js\": 144,\n\t\"./ar-ly\": 145,\n\t\"./ar-ly.js\": 145,\n\t\"./ar-ma\": 146,\n\t\"./ar-ma.js\": 146,\n\t\"./ar-sa\": 147,\n\t\"./ar-sa.js\": 147,\n\t\"./ar-tn\": 148,\n\t\"./ar-tn.js\": 148,\n\t\"./ar.js\": 142,\n\t\"./az\": 149,\n\t\"./az.js\": 149,\n\t\"./be\": 150,\n\t\"./be.js\": 150,\n\t\"./bg\": 151,\n\t\"./bg.js\": 151,\n\t\"./bm\": 152,\n\t\"./bm.js\": 152,\n\t\"./bn\": 153,\n\t\"./bn-bd\": 154,\n\t\"./bn-bd.js\": 154,\n\t\"./bn.js\": 153,\n\t\"./bo\": 155,\n\t\"./bo.js\": 155,\n\t\"./br\": 156,\n\t\"./br.js\": 156,\n\t\"./bs\": 157,\n\t\"./bs.js\": 157,\n\t\"./ca\": 158,\n\t\"./ca.js\": 158,\n\t\"./cs\": 159,\n\t\"./cs.js\": 159,\n\t\"./cv\": 160,\n\t\"./cv.js\": 160,\n\t\"./cy\": 161,\n\t\"./cy.js\": 161,\n\t\"./da\": 162,\n\t\"./da.js\": 162,\n\t\"./de\": 163,\n\t\"./de-at\": 164,\n\t\"./de-at.js\": 164,\n\t\"./de-ch\": 165,\n\t\"./de-ch.js\": 165,\n\t\"./de.js\": 163,\n\t\"./dv\": 166,\n\t\"./dv.js\": 166,\n\t\"./el\": 167,\n\t\"./el.js\": 167,\n\t\"./en-au\": 168,\n\t\"./en-au.js\": 168,\n\t\"./en-ca\": 169,\n\t\"./en-ca.js\": 169,\n\t\"./en-gb\": 170,\n\t\"./en-gb.js\": 170,\n\t\"./en-ie\": 171,\n\t\"./en-ie.js\": 171,\n\t\"./en-il\": 172,\n\t\"./en-il.js\": 172,\n\t\"./en-in\": 173,\n\t\"./en-in.js\": 173,\n\t\"./en-nz\": 174,\n\t\"./en-nz.js\": 174,\n\t\"./en-sg\": 175,\n\t\"./en-sg.js\": 175,\n\t\"./eo\": 176,\n\t\"./eo.js\": 176,\n\t\"./es\": 177,\n\t\"./es-do\": 178,\n\t\"./es-do.js\": 178,\n\t\"./es-mx\": 179,\n\t\"./es-mx.js\": 179,\n\t\"./es-us\": 180,\n\t\"./es-us.js\": 180,\n\t\"./es.js\": 177,\n\t\"./et\": 181,\n\t\"./et.js\": 181,\n\t\"./eu\": 182,\n\t\"./eu.js\": 182,\n\t\"./fa\": 183,\n\t\"./fa.js\": 183,\n\t\"./fi\": 184,\n\t\"./fi.js\": 184,\n\t\"./fil\": 185,\n\t\"./fil.js\": 185,\n\t\"./fo\": 186,\n\t\"./fo.js\": 186,\n\t\"./fr\": 187,\n\t\"./fr-ca\": 188,\n\t\"./fr-ca.js\": 188,\n\t\"./fr-ch\": 189,\n\t\"./fr-ch.js\": 189,\n\t\"./fr.js\": 187,\n\t\"./fy\": 190,\n\t\"./fy.js\": 190,\n\t\"./ga\": 191,\n\t\"./ga.js\": 191,\n\t\"./gd\": 192,\n\t\"./gd.js\": 192,\n\t\"./gl\": 193,\n\t\"./gl.js\": 193,\n\t\"./gom-deva\": 194,\n\t\"./gom-deva.js\": 194,\n\t\"./gom-latn\": 195,\n\t\"./gom-latn.js\": 195,\n\t\"./gu\": 196,\n\t\"./gu.js\": 196,\n\t\"./he\": 197,\n\t\"./he.js\": 197,\n\t\"./hi\": 198,\n\t\"./hi.js\": 198,\n\t\"./hr\": 199,\n\t\"./hr.js\": 199,\n\t\"./hu\": 200,\n\t\"./hu.js\": 200,\n\t\"./hy-am\": 201,\n\t\"./hy-am.js\": 201,\n\t\"./id\": 202,\n\t\"./id.js\": 202,\n\t\"./is\": 203,\n\t\"./is.js\": 203,\n\t\"./it\": 204,\n\t\"./it-ch\": 205,\n\t\"./it-ch.js\": 205,\n\t\"./it.js\": 204,\n\t\"./ja\": 206,\n\t\"./ja.js\": 206,\n\t\"./jv\": 207,\n\t\"./jv.js\": 207,\n\t\"./ka\": 208,\n\t\"./ka.js\": 208,\n\t\"./kk\": 209,\n\t\"./kk.js\": 209,\n\t\"./km\": 210,\n\t\"./km.js\": 210,\n\t\"./kn\": 211,\n\t\"./kn.js\": 211,\n\t\"./ko\": 212,\n\t\"./ko.js\": 212,\n\t\"./ku\": 213,\n\t\"./ku.js\": 213,\n\t\"./ky\": 214,\n\t\"./ky.js\": 214,\n\t\"./lb\": 215,\n\t\"./lb.js\": 215,\n\t\"./lo\": 216,\n\t\"./lo.js\": 216,\n\t\"./lt\": 217,\n\t\"./lt.js\": 217,\n\t\"./lv\": 218,\n\t\"./lv.js\": 218,\n\t\"./me\": 219,\n\t\"./me.js\": 219,\n\t\"./mi\": 220,\n\t\"./mi.js\": 220,\n\t\"./mk\": 221,\n\t\"./mk.js\": 221,\n\t\"./ml\": 222,\n\t\"./ml.js\": 222,\n\t\"./mn\": 223,\n\t\"./mn.js\": 223,\n\t\"./mr\": 224,\n\t\"./mr.js\": 224,\n\t\"./ms\": 225,\n\t\"./ms-my\": 226,\n\t\"./ms-my.js\": 226,\n\t\"./ms.js\": 225,\n\t\"./mt\": 227,\n\t\"./mt.js\": 227,\n\t\"./my\": 228,\n\t\"./my.js\": 228,\n\t\"./nb\": 229,\n\t\"./nb.js\": 229,\n\t\"./ne\": 230,\n\t\"./ne.js\": 230,\n\t\"./nl\": 231,\n\t\"./nl-be\": 232,\n\t\"./nl-be.js\": 232,\n\t\"./nl.js\": 231,\n\t\"./nn\": 233,\n\t\"./nn.js\": 233,\n\t\"./oc-lnc\": 234,\n\t\"./oc-lnc.js\": 234,\n\t\"./pa-in\": 235,\n\t\"./pa-in.js\": 235,\n\t\"./pl\": 236,\n\t\"./pl.js\": 236,\n\t\"./pt\": 237,\n\t\"./pt-br\": 238,\n\t\"./pt-br.js\": 238,\n\t\"./pt.js\": 237,\n\t\"./ro\": 239,\n\t\"./ro.js\": 239,\n\t\"./ru\": 240,\n\t\"./ru.js\": 240,\n\t\"./sd\": 241,\n\t\"./sd.js\": 241,\n\t\"./se\": 242,\n\t\"./se.js\": 242,\n\t\"./si\": 243,\n\t\"./si.js\": 243,\n\t\"./sk\": 244,\n\t\"./sk.js\": 244,\n\t\"./sl\": 245,\n\t\"./sl.js\": 245,\n\t\"./sq\": 246,\n\t\"./sq.js\": 246,\n\t\"./sr\": 247,\n\t\"./sr-cyrl\": 248,\n\t\"./sr-cyrl.js\": 248,\n\t\"./sr.js\": 247,\n\t\"./ss\": 249,\n\t\"./ss.js\": 249,\n\t\"./sv\": 250,\n\t\"./sv.js\": 250,\n\t\"./sw\": 251,\n\t\"./sw.js\": 251,\n\t\"./ta\": 252,\n\t\"./ta.js\": 252,\n\t\"./te\": 253,\n\t\"./te.js\": 253,\n\t\"./tet\": 254,\n\t\"./tet.js\": 254,\n\t\"./tg\": 255,\n\t\"./tg.js\": 255,\n\t\"./th\": 256,\n\t\"./th.js\": 256,\n\t\"./tk\": 257,\n\t\"./tk.js\": 257,\n\t\"./tl-ph\": 258,\n\t\"./tl-ph.js\": 258,\n\t\"./tlh\": 259,\n\t\"./tlh.js\": 259,\n\t\"./tr\": 260,\n\t\"./tr.js\": 260,\n\t\"./tzl\": 261,\n\t\"./tzl.js\": 261,\n\t\"./tzm\": 262,\n\t\"./tzm-latn\": 263,\n\t\"./tzm-latn.js\": 263,\n\t\"./tzm.js\": 262,\n\t\"./ug-cn\": 264,\n\t\"./ug-cn.js\": 264,\n\t\"./uk\": 265,\n\t\"./uk.js\": 265,\n\t\"./ur\": 266,\n\t\"./ur.js\": 266,\n\t\"./uz\": 267,\n\t\"./uz-latn\": 268,\n\t\"./uz-latn.js\": 268,\n\t\"./uz.js\": 267,\n\t\"./vi\": 269,\n\t\"./vi.js\": 269,\n\t\"./x-pseudo\": 270,\n\t\"./x-pseudo.js\": 270,\n\t\"./yo\": 271,\n\t\"./yo.js\": 271,\n\t\"./zh-cn\": 272,\n\t\"./zh-cn.js\": 272,\n\t\"./zh-hk\": 273,\n\t\"./zh-hk.js\": 273,\n\t\"./zh-mo\": 274,\n\t\"./zh-mo.js\": 274,\n\t\"./zh-tw\": 275,\n\t\"./zh-tw.js\": 275\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 379;"],"sourceRoot":""}