{"version":3,"sources":["src/hooks/async.ts","src/features/agenda-context/context.ts","src/features/agenda-context/provider.tsx","src/features/calendar/context.ts","src/features/calendar/provider.tsx","src/features/calendar/hooks.ts","src/features/routines/context.ts","src/features/routines/provider.tsx","src/features/routines/hooks.ts","src/features/tasks/hooks.ts","src/features/agenda-context/hooks.ts","src/features/location/context.ts","src/features/location/provider.tsx","src/features/location/utils.ts","src/features/location/hooks.ts","src/features/planner/algorithm/utils.ts","src/features/planner/algorithm/get-next.ts","src/features/planner/algorithm/build-graph.ts","src/features/planner/context.ts","src/features/planner/provider.tsx","src/features/planner/algorithm/construct-day.ts","src/features/planner/hooks.ts","src/features/setup.tsx","src/ui/components/icon/index.tsx","src/ui/components/modal/react-modal.tsx","src/ui/components/row/cell.tsx","src/ui/typography/index.ts","src/ui/components/row/row.tsx","src/ui/components/row/placeholder-icon.tsx","src/ui/components/page/index.tsx","src/ui/components/popup/index.tsx","src/ui/components/modal/index.tsx","src/ui/components/form/input/index.tsx","src/ui/components/form/checkbox/index.tsx","src/ui/components/button/index.tsx","src/ui/screens/locations/list.tsx","src/ui/screens/routines/list.tsx","src/ui/screens/locations/set.tsx","src/ui/components/specialized/plan/agenda-item.tsx","src/ui/components/specialized/plan/day.tsx","src/ui/screens/plan/day.tsx","src/ui/screens/calendars/select.tsx","src/ui/screens/routines/set.tsx","src/ui/screens/plan/tasks.tsx","src/ui/screens/plan/set.tsx","src/ui/components/form/selector/index.tsx","src/ui/screens/plan/settings.tsx","src/ui/router/index.tsx","src/ui/theme/light.ts","App.tsx","src/app.tsx","node_modules/moment/locale sync /^/.//.*$"],"names":["useAsyncCallback","fn","deps","useState","result","setResult","prevArgs","setPrevArgs","loading","setLoading","error","setError","action","useCallback","invoke","a","async","args","output","undefined","useMemo","useAsync","options","useEffect","localOptions","rerun","AgendaContextContext","createContext","AgendaContextProvider","children","day","contexts","setContexts","key","AGENDA_CONTEXT_STORAGE_KEY","format","set","id","context","index","AsyncStorageLib","setItem","JSON","stringify","getItem","raw","items","parse","Object","values","forEach","item","startMax","Date","startMin","Provider","value","CalendarContext","CalendarProvider","date","setDate","calendarName","selectedIds","setSelectedIds","requestCalendarPermissionsAsync","status","Platform","OS","getCalendarsAsync","EntityTypes","EVENT","calendars","calendar","find","c","title","getDefaultCalendarAsync","defaultCalendar","createCalendarAsync","source","sourceId","ownerAccount","accessLevel","CalendarAccessLevel","OWNER","entityType","name","AsyncStorage","selectedRaw","setSelected","ids","map","selected","filter","includes","emptyArray","emptyFn","useSelectedCalendars","useContext","useDate","useCommit","useCalendar","plan","end","hours","minutes","seconds","milliseconds","getEventsAsync","current","Promise","all","deleteEventAsync","type","external","from","to","createEventAsync","startDate","start","endDate","RoutinesContext","RoutinesProvider","routineIndex","setRoutineIndex","routines","max","min","routine","remove","useRoutines","r","days","toToday","today","target","year","getFullYear","month","getMonth","getDate","useTasks","getDay","selectedCalendars","length","getTime","useToday","fromCalendar","fromRoutines","tasksFromCalendar","e","allDay","task","duration","required","priority","tasksFromRoutines","locations","location","useAgendaContext","useSetAgendaContext","useTasksWithContext","count","enabled","LocationContext","LocationProvider","lookup","getTransition","setLocations","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","Math","sin","cos","atan2","sqrt","deg","PI","useLocations","locationEqual","b","latitude","longitute","listContainLocation","list","l","getRemainingLocations","tasks","push","Strategies","isDead","impossible","t","getImpossible","time","remaining","calculateScore","transition","score","getNext","currentNode","nextNodes","remainingLocations","remainingTasks","endTime","parent","impossibeTasks","completed","dead","possibleTasks","orgTask","startTime","parentRemainging","sleep","resolve","setTimeout","fil","input","Array","fill","i","buildGraph","strategy","allValid","callback","batchSize","sleepTime","nodeCount","running","leafList","completedList","deadList","complete","nodes","sort","node","pop","cancel","next","n","alive","firstValid","firstComplet","fullComplete","PlannerContext","PlannerProvider","setOwnOptions","setOptions","constructDay","plans","reverse","usePlanOptions","usePlan","planOptions","setStatus","f","graph","valid","agenda","Setup","getTransit","Icon","size","color","theme","useTheme","Feather","colors","icon","sizes","icons","Modal","Wrapper","styled","View","margins","medium","background","flex","direction","align","opacity","Touch","TouchableOpacity","Cell","onPress","props","accessibilityLabel","accessibilityRole","accessibilityHint","others","accessible","BaseText","Text","text","bold","font","baseSize","Title1","Body1","Overline","Link","Children","componentOrString","Component","Row","top","left","right","overline","description","KeyboardAvoiding","KeyboardAvoidingView","Pressable","Page","keyboardShown","setKeyboardShown","keyboardDidShow","keyboardDidHide","Keyboard","addListener","removeListener","disabled","dismiss","behavior","Top","shadow","Outer","Popup","visible","onClose","insets","useSafeAreaInsets","style","paddingBottom","bottom","transparent","animationType","onRequestClose","onDismiss","InputField","TextInput","small","corners","placeholder","onChangeText","row","Checkbok","label","onChange","primary","Button","LocationListScreen","removeLocation","navigate","useNavigation","FlatList","data","keyExtractor","renderItem","RoutinesListScreen","removeRoutine","useRemoveRoutine","subtitle","join","LocationSetScreen","useRoute","params","nanoid","goBack","setTitle","lng","setLng","lat","setLat","toString","save","lngParsed","parseFloat","latParsed","Time","TimeBox","chroma","darken","hex","Filler","Block","height","Main","formatTime","getHours","padStart","getMinutes","AgendaItemView","view","body","Title","DayView","layout","lastPlanItem","planItem","stringToColor","luminance","saturate","brighten","ScrollView","getStats","runTime","formatDistanceToNow","includeSeconds","formatDistance","PlanDayScreen","proximity","requestForegroundPermissionsAsync","getCurrentPositionAsync","position","withDistance","distance","coords","longitude","Boolean","d","useCurrentLocation","setStartTime","commit","update","corrected","CalendarSelectScreen","useCalendars","useSetSelectedCalendars","toggle","isSelected","RoutineSetScreen","setStartMin","setStartMax","setDuration","setRequired","setLocation","useSetRoutine","split","toLowerCase","trim","parseInt","Strip","lines","markedDates","paddingTop","backgroundColor","calendarColor","selectedDate","startingDate","onDateSelected","toDate","shouldAllowFontScaling","iconContainer","calendarHeaderStyle","fontSize","highlightDateNameStyle","iconLeftStyle","tintColor","iconRightStyle","highlightDateNumberStyle","dateNumberStyle","dateNameStyle","TaskListScreen","ListHeaderComponent","AgendaContextSetScreen","setEnabled","setCount","Selector","getId","setVisible","selectedItem","select","display","PlanSettingsScreen","MainTabsNvaigator","createBottomTabNavigator","MainTabs","Navigator","screenOptions","tabBarActiveTintColor","Screen","headerShown","tabBarLabel","tabBarIcon","focused","component","RootNavigator","createNativeStackNavigator","Root","Group","presentation","Router","baseTheme","DefaultTheme","navigationTheme","shade","card","NavigationContainer","light","destructive","secondary","textShade","large","App","usableTime","StatusBar","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","module","exports"],"mappings":"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","file":"static/js/app.6f22e9c7.chunk.js","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from \"react\"\n\ntype AsyncCallbackOutput<TArgs extends any[], TResult> = [\n  (...args: TArgs) => Promise<TResult>,\n  {\n    loading: boolean;\n    error?: any;\n    result?: TResult;\n    args?: TArgs;\n  }\n];\n\ntype AsyncOutput<TResult> = [\n  TResult | undefined,\n  {\n    loading: boolean;\n    error?: any;\n    rerun: () => Promise<TResult>;\n  }\n]\n\nconst useAsyncCallback = <\n  TArgs extends any[],\n  TResult,\n>(fn: (...args: TArgs) => Promise<TResult>, deps: any[]): AsyncCallbackOutput<TArgs, TResult> => {\n  const [result, setResult] = useState<TResult>();\n  const [prevArgs, setPrevArgs] = useState<TArgs>();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<any>();\n\n  const action = useCallback(fn, deps);\n  \n  const invoke = useCallback(\n    async (...args: TArgs) => {\n      setLoading(true);\n      setError(false);\n      setPrevArgs(args);\n      try {\n        const output = await action(...args);\n        setResult(output);\n        return output;\n      } catch (err) {\n        setResult(undefined);\n        setError(err);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [setLoading, setError, setResult, action],\n  );\n\n  const options = useMemo(\n    () => {\n      const output: AsyncCallbackOutput<TArgs, TResult> = [\n        invoke,\n        {\n          result,\n          loading,\n          error,\n          args: prevArgs,\n        }\n      ];\n      return output;\n    },\n    [invoke, result, loading, error, prevArgs],\n  );\n\n  return options;\n};\n\nconst useAsync = <TResult>(fn: () => Promise<TResult>, deps: any[]): AsyncOutput<TResult> => {\n  const [invoke, options] = useAsyncCallback(fn, deps);\n  useEffect(\n    () => {\n      invoke();\n    },\n    [invoke],\n  );\n\n  const localOptions = useMemo(\n    () => ({\n      loading: options.loading,\n      error: options.error,\n      rerun: invoke,\n    }),\n    [invoke, options.loading, options.error],\n  );\n\n  return [\n    options.result,\n      localOptions,\n  ]\n};\n\nexport type { AsyncCallbackOutput };\nexport { useAsync, useAsyncCallback };\n","import { UserLocation } from \"#/types/location\"\nimport { createContext } from \"react\"\n\ntype AgendaContext = {\n  enabled: boolean;\n  locations?: UserLocation[];\n  startMax?: Date;\n  startMin?: Date;\n  duration?: number;\n  count?: number;\n}\n\ntype AgendaContextContextValue = {\n  contexts: {[id: string]: AgendaContext};\n  set: (id: string, context: AgendaContext) => Promise<void>;\n}\n\nconst AgendaContextContext = createContext<AgendaContextContextValue>(undefined as any);\n\nexport type { AgendaContext, AgendaContextContextValue };\nexport {AgendaContextContext };\n","import { useAsync } from \"#/hooks/async\";\nimport AsyncStorageLib from \"@react-native-async-storage/async-storage\";\nimport { format } from \"date-fns\";\nimport { ReactNode, useCallback, useMemo, useState } from \"react\";\nimport { AgendaContext, AgendaContextContext, AgendaContextContextValue } from \"./context\";\n\ntype AgendaContextProviderProps = {\n  children: ReactNode;\n  day: Date;\n}\n\nconst AGENDA_CONTEXT_STORAGE_KEY = 'agenda-contexts';\n\nconst AgendaContextProvider: React.FC<AgendaContextProviderProps> = ({\n  children,\n  day,\n}) => {\n  const [contexts, setContexts] = useState<AgendaContextContextValue['contexts']>({});\n  const key = useMemo(\n    () => `${AGENDA_CONTEXT_STORAGE_KEY}-${format(day, 'yyyy-MM-dd')}`,\n    [day],\n  );\n\n  const set = useCallback(\n    async (id: string, context: AgendaContext) => {\n      const index = {\n        ...contexts,\n        [id]: {...context},\n      };\n      setContexts(index);\n      await AsyncStorageLib.setItem(key, JSON.stringify(contexts));\n    },\n    [setContexts, contexts, key],\n  );\n\n  useAsync(\n    async () => {\n      const raw = await AsyncStorageLib.getItem(key);\n      if (!raw) {\n        return;\n      }\n      const items = JSON.parse(raw) as AgendaContextContextValue['contexts'];\n      Object.values(items).forEach((item) => {\n        if (item.startMax) {\n          item.startMax = new Date(item.startMax);\n        }\n        if (item.startMin) {\n          item.startMin = new Date(item.startMin);\n        }\n      })\n      setContexts(items);\n    },\n    [key],\n  )\n\n  return (\n    <AgendaContextContext.Provider value={{ contexts, set }}>\n      {children}\n    </AgendaContextContext.Provider>\n  );\n};\n\nexport type { AgendaContextProviderProps };\nexport { AgendaContextProvider };\n","import { Calendar } from \"expo-calendar\";\nimport { createContext } from \"react\";\n\ntype RejectedCalendarContextValue = {\n  status: 'rejected';\n  date: Date;\n  setDate: (date: Date) => void;\n}\n\ntype UnavailableCalendarContextValue = {\n  status: 'unavailable';\n  date: Date;\n  setDate: (date: Date) => void;\n}\n\ntype AcceptedCalendarContextValue = {\n  status: 'ready';\n  date: Date;\n  setDate: (date: Date) => void;\n  calendars: Calendar[];\n  calendar: Calendar;\n  selected: Calendar[];\n  setSelected: (calendars: Calendar[]) => void;\n  error?: any;\n}\n\ntype CalendarContextValue = RejectedCalendarContextValue\n  | UnavailableCalendarContextValue\n  | AcceptedCalendarContextValue\n\nconst CalendarContext = createContext<CalendarContextValue>(undefined as any);\n\nexport type { CalendarContextValue };\nexport { CalendarContext };\n","import { Calendar, CalendarAccessLevel, createCalendarAsync, EntityTypes, getCalendarsAsync, getDefaultCalendarAsync, requestCalendarPermissionsAsync } from \"expo-calendar\";\nimport React, { ReactNode, useCallback, useMemo, useState } from \"react\";\nimport { useAsync } from \"#/hooks/async\";\nimport { CalendarContext } from \"./context\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Platform } from \"react-native\";\n\nconst SELECTED_STORAGE_KEY = 'selected_calendars';\n\ntype CalendarProviderProps = {\n  calendarName?: string,\n  date: Date;\n  children: ReactNode;\n  setDate: (date: Date) => void;\n}\n\ntype SetupResponse = {\n  status: 'rejected';\n} | {\n  status: 'unavailable';\n} | {\n  status: 'ready';\n  calendar: Calendar;\n  calendars: Calendar[];\n};\n\nconst CalendarProvider: React.FC<CalendarProviderProps> = ({\n  date,\n  children,\n  setDate,\n  calendarName = 'Bob the planner',\n}) => {\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [value] = useAsync<SetupResponse>(\n    async () => {\n      const { status } = await requestCalendarPermissionsAsync(); \n      if (Platform.OS !== 'ios') {\n        return { status: 'unavailable' };\n      }\n      if (status !== 'granted') {\n        return { status: 'rejected' };\n      }\n      let calendars = await getCalendarsAsync(EntityTypes.EVENT);\n      let calendar = calendars.find(c => c.title === calendarName);\n      if (!calendar) {\n        const defaultCalendar = await getDefaultCalendarAsync();\n        await createCalendarAsync({\n          title: calendarName,\n          source: defaultCalendar.source,\n          sourceId: defaultCalendar.source.id,\n          ownerAccount: 'personal',\n          accessLevel: CalendarAccessLevel.OWNER,\n          entityType: EntityTypes.EVENT,\n          name: calendarName,\n        });\n        calendars = await getCalendarsAsync(EntityTypes.EVENT);\n        calendar = calendars.find(c => c.name === calendarName)!;\n      }\n      const selectedRaw = await AsyncStorage.getItem(SELECTED_STORAGE_KEY)\n      if (selectedRaw) {\n        setSelectedIds(JSON.parse(selectedRaw));\n      }\n      return {\n        status: 'ready',\n        calendars,\n        calendar,\n      };\n    },\n    [],\n  );\n\n  const setSelected = useCallback(\n    (calendars: Calendar[]) => {\n      const ids = calendars.map(c => c.id);\n      setSelectedIds(ids);\n      AsyncStorage.setItem(SELECTED_STORAGE_KEY, JSON.stringify(ids));\n    },\n    [setSelectedIds]\n  )\n  const selected = useMemo(\n    () => {\n      if (value?.status !== 'ready') {\n        return [];\n      }\n      return value.calendars.filter(c => selectedIds.includes(c.id));\n    },\n    [value, selectedIds],\n  );\n\n  if (!value) {\n    return <></>\n  }\n\n  if (value.status !== 'ready') {\n    return (\n      <CalendarContext.Provider value={{ status: value.status, date, setDate }}>\n        {children}\n      </CalendarContext.Provider>\n    );\n  }\n\n  return (\n    <CalendarContext.Provider \n      value={{\n        status: 'ready',\n        setDate,\n        date,\n        selected,\n        setSelected,\n        calendar: value.calendar,\n        calendars: value.calendars,\n      }}\n    >\n      {children}\n    </CalendarContext.Provider>\n  )\n};\n\nexport type { CalendarProviderProps };\nexport { CalendarProvider };\n","import { useContext } from \"react\"\nimport { CalendarContext } from \"./context\"\nimport { set } from 'date-fns'\nimport { useAsync, useAsyncCallback } from \"#/hooks/async\";\nimport { createEventAsync, deleteEventAsync, getEventsAsync } from \"expo-calendar\";\nimport { PlanItem } from \"#/types/plans\";\n\nconst emptyArray: never[] = [];\nconst emptyFn = () => undefined;\n\nexport const useCalendar = () => {\n  const context = useContext(CalendarContext);\n  if (context.status !== 'ready') {\n    return undefined;\n  }\n  return context.calendar;\n}\n\nexport const useCalendars = () => {\n  const context = useContext(CalendarContext);\n  if (context.status !== 'ready') {\n    return emptyArray;\n  }\n  return context.calendars;\n}\n\nexport const useSelectedCalendars = () => {\n  const context = useContext(CalendarContext);\n  if (context.status !== 'ready') {\n    return emptyArray;\n  }\n  return context.selected;\n}\n\nexport const useSetSelectedCalendars = () => {\n  const context = useContext(CalendarContext);\n  if (context.status !== 'ready') {\n    return emptyFn;\n  }\n  return context.setSelected;\n}\n\nexport const useDate = () => {\n  const { date } = useContext(CalendarContext);\n  return date;\n}\n\nexport const useSetDate = () => {\n  const { setDate } = useContext(CalendarContext);\n  return setDate;\n}\n\nexport const useCommit = () => {\n  const date = useDate();\n  const calendar = useCalendar();\n  const result = useAsyncCallback(\n    async (plan: PlanItem[]) => {\n      if (!calendar) {\n        return;\n      }\n      const end = set(date, {\n        hours: 24,\n        minutes: 0,\n        seconds: 0,\n        milliseconds: 0,\n      });\n      const current = await getEventsAsync([calendar.id], date, end);\n      await Promise.all(\n        current.map(async (item) => {\n          await deleteEventAsync(item.id)\n        }),\n      );\n      for (let item of plan) {\n        if (item.type === 'task' && item.external) {\n          continue;\n        }\n        const title = item.type === 'task' ? item.name : `${item.from.title} to ${item.to.title}`;\n        await createEventAsync(calendar.id, {\n          title: title,\n          startDate: item.start,\n          endDate: item.end,\n        })\n      }\n    },\n    [date, calendar],\n  );\n\n  return result;\n}\n\nexport const useToday = (start: Date, end?: Date) => {\n  const selectedCalendars = useSelectedCalendars();\n  if (!end) {\n    end = set(start, {\n      hours: 24,\n      minutes: 0,\n      seconds: 0,\n      milliseconds: 0,\n    });\n  }\n\n  const result = useAsync(\n    async () => {\n      if (selectedCalendars.length === 0) {\n        return [];\n      }\n      return getEventsAsync(selectedCalendars.map(c => c.id), start, end!)\n    },\n    [selectedCalendars, start.getTime()],\n  );\n\n  return result;\n}\n","import { UserLocation } from \"#/types/location\";\nimport { createContext } from \"react\"\n\nexport type Routine = {\n  id: string;\n  title: string;\n  required: boolean;\n  priority: number;\n  start: {\n    min: Date;\n    max: Date;\n  };\n  duration: number;\n  location?: UserLocation[];\n  days?: boolean[];\n}\n\nexport type RoutinesContextValue = {\n  routines: Routine[]; \n  remove: (id: string) => any;\n  set: (routine: Routine) => any;\n}\n\nconst RoutinesContext = createContext<RoutinesContextValue>(undefined as any);\n\nexport { RoutinesContext };\n","import { useAsync, useAsyncCallback } from \"#/hooks/async\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React, { ReactNode, useMemo, useState } from \"react\";\nimport { Routine, RoutinesContext } from \"./context\";\n\ntype RoutinesProviderProps = {\n  children: ReactNode;\n}\n\nconst ROUTINES_STORAGE_KEY = 'routines-items';\n\nconst RoutinesProvider: React.FC<RoutinesProviderProps> = ({ children }) => {\n  const [routineIndex, setRoutineIndex] = useState<{[id: string]: Routine}>({});\n  const routines = useMemo(\n    () => Object.values(routineIndex),\n    [routineIndex]\n  );\n\n  useAsync(\n    async () => {\n      const raw = await AsyncStorage.getItem(ROUTINES_STORAGE_KEY);\n      if (!raw) {\n        return;\n      }\n      const result = JSON.parse(raw) as {[name: string]: Routine};\n      Object.values(result).forEach(item => {\n        item.start.max = new Date(item.start.max);\n        item.start.min = new Date(item.start.min);\n      });\n      \n      setRoutineIndex(result);\n    },\n    [setRoutineIndex],\n  );\n\n  const [set] = useAsyncCallback(\n    async (routine: Routine) => {\n      const index = {\n        ...routineIndex,\n        [routine.id]: routine,\n      };\n      setRoutineIndex(index);\n      await AsyncStorage.setItem(ROUTINES_STORAGE_KEY, JSON.stringify(index));\n    },\n    [setRoutineIndex, routineIndex],\n  );\n\n  const [remove] = useAsyncCallback(\n    async (id: string) => {\n      const index = {\n        ...routineIndex,\n      };\n      delete index[id];\n      setRoutineIndex(index);\n      await AsyncStorage.setItem(ROUTINES_STORAGE_KEY, JSON.stringify(index));\n    },\n    [setRoutineIndex, routineIndex],\n  );\n\n  return (\n    <RoutinesContext.Provider\n      value={{\n        routines,\n        set,\n        remove,\n      }}\n    >\n      {children}\n    </RoutinesContext.Provider>\n  )\n}\n\nexport type { RoutinesProviderProps };\nexport { RoutinesProvider };\n","import { useCallback, useContext, useMemo } from \"react\"\nimport { Routine, RoutinesContext } from \"./context\"\n\nexport const useRoutines = (day?: number) => {\n  const { routines } = useContext(RoutinesContext);\n  const current = useMemo(\n    () => routines.filter(\n      r => typeof day === undefined\n        || !r.days\n        || r.days[day!],\n    ),\n    [routines],\n  );\n\n  return current;\n};\n\nexport const useSetRoutine = () => {\n  const { set } = useContext(RoutinesContext);\n  const setRoutine = useCallback(\n    (routine: Routine) => set(routine),\n    [set],\n  );\n\n  return setRoutine;\n}\n\nexport const useRemoveRoutine = () => {\n  const { remove } = useContext(RoutinesContext);\n  const removeRoutine = useCallback(\n    (id: string) => remove(id),\n    [remove],\n  );\n\n  return removeRoutine;\n}\n","import { useMemo } from \"react\";\nimport { useDate, useToday } from \"#/features/calendar\"\nimport { useRoutines } from \"#/features/routines\";\nimport { Task } from \"#/types/task\";\nimport { set } from \"date-fns\";\n\nconst toToday = (today: Date, target: Date) => set(target, {\n  year: today.getFullYear(),\n  month: today.getMonth(),\n  date: today.getDate(),\n})\n\nexport const useTasks = () => {\n  const start = useDate();\n  const day = useMemo(\n    () => start.getDay(),\n    [start],\n  )\n  const [fromCalendar = []] = useToday(start);\n  const fromRoutines = useRoutines(day);\n\n  const tasksFromCalendar = useMemo<Task[]>(\n    () => fromCalendar.filter(e => !e.allDay).map(task => {\n      const start = new Date(task.startDate);\n      const end = new Date(task.endDate);\n      const duration = end.getTime() - start.getTime();\n      return {\n        id: task.id,\n        name: task.title,\n        external: true,\n        required: true,\n        start: {\n          min: start,\n          max: start,\n        },\n        priority: 100,\n        duration: {\n          min: duration,\n        },\n      };\n    }),\n    [fromCalendar],\n  );\n\n  const tasksFromRoutines = useMemo<Task[]>(\n    () => fromRoutines.map(task => ({\n      id: task.id,\n      name: task.title,\n      locations:  task.location,\n      start: {\n        min: toToday(start, task.start.min),\n        max: toToday(start, task.start.max),\n      },\n      priority: task.priority,\n      required: task.required,\n      duration: {\n        min: task.duration,\n      },\n    })),\n    [fromRoutines, start],\n  );\n\n  const tasks = useMemo(\n    () => ({\n      calendar: tasksFromCalendar,\n      routines: tasksFromRoutines,\n      all: [\n        ...tasksFromRoutines,\n        ...tasksFromCalendar,\n      ],\n    }),\n    [tasksFromCalendar, tasksFromRoutines],\n  );\n\n  return tasks;\n}\n","import { useAsyncCallback } from \"#/hooks/async\";\nimport { Task } from \"#/types/task\";\nimport { set } from \"date-fns\";\nimport { useContext, useMemo } from \"react\"\nimport { useDate } from \"../calendar\";\nimport { useTasks } from \"../tasks\";\nimport { AgendaContextContext } from \"./context\"\n\nconst toToday = (today: Date, target: Date) => set(target, {\n  year: today.getFullYear(),\n  month: today.getMonth(),\n  date: today.getDate(),\n})\n\nexport const useAgendaContext = () => {\n  const { contexts } = useContext(AgendaContextContext);\n  return contexts;\n}\n\nexport const useSetAgendaContext = () => {\n  const { set } = useContext(AgendaContextContext);\n  const result = useAsyncCallback(set, [set]);\n  return result;\n}\n\nexport const useTasksWithContext = () => {\n  const { all } = useTasks();\n  const date = useDate();\n  const contexts = useAgendaContext();\n\n  const withContext = useMemo<(Task & { enabled: boolean })[]>(\n    () => all.map((task) => {\n      const context = contexts[task.id];\n      if (!context) {\n        return { ...task, enabled: true };\n      }\n      return {\n        ...task,\n        locations: context.locations?.length || 0 > 0 ? context.locations : task.locations,\n        start: {\n          min: context.startMin ? toToday(date, context.startMin) : task.start.min,\n          max: context.startMax ? toToday(date, context.startMax) : task.start.max,\n        },\n        duration: {\n          ...task.duration,\n          min: context.duration || task.duration.min,\n        },\n        count: context.count,\n        enabled: typeof context.enabled === 'undefined' ? true : context.enabled,\n      }\n    }),\n    [all, contexts],\n  );\n\n  return withContext;\n}\n","import { GetTransition, UserLocation } from \"#/types/location\";\nimport { createContext } from \"react\"\n\ntype LocationContextValue = {\n  locations: {\n    [id: string]: UserLocation;\n  };\n  set: (location: UserLocation) => any;\n  remove: (id: string) => any;\n  lookup?: (address: string) => UserLocation[];\n  getTransition: GetTransition;\n}\n\nconst LocationContext = createContext<LocationContextValue>(undefined as any);\n\nexport type { LocationContextValue };\nexport { LocationContext };\n","import { useAsync, useAsyncCallback } from \"#/hooks/async\";\nimport { GetTransition, UserLocation } from \"#/types/location\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { ReactNode, useState } from \"react\";\nimport { LocationContext } from \"./context\";\n\ntype LocationProviderProps = {\n  children: ReactNode;\n  lookup: (address: string) => UserLocation[];\n  getTransition: GetTransition;\n}\n\nconst LOCATION_STORAGE_KEY = 'location_storage';\n\nconst LocationProvider: React.FC<LocationProviderProps> = ({\n  children,\n  lookup,\n  getTransition,\n}) => {\n  const [locations, setLocations] = useState<{[id: string]: UserLocation}>({});\n\n  useAsync(\n    async () => {\n      const raw = await AsyncStorage.getItem(LOCATION_STORAGE_KEY);\n      if (raw) {\n        setLocations(JSON.parse(raw));\n      }\n    },\n    [],\n  );\n\n  const [set] = useAsyncCallback(\n    async (location: UserLocation) => {\n      const index = {\n        ...locations,\n        [location.id]: location,\n      }\n      setLocations(index);\n      await AsyncStorage.setItem(LOCATION_STORAGE_KEY, JSON.stringify(index));\n    },\n    [setLocations, locations],\n  )\n\n  const [remove] = useAsyncCallback(\n    async (id: string) => {\n      const index = {\n        ...locations,\n      }\n      delete index[id];\n      setLocations(index);\n      await AsyncStorage.setItem(LOCATION_STORAGE_KEY, JSON.stringify(index));\n    },\n    [setLocations, locations],\n  );\n\n  return (\n    <LocationContext.Provider\n      value={{\n        locations,\n        set,\n        remove,\n        lookup,\n        getTransition,\n      }}\n    >\n      {children}\n    </LocationContext.Provider>\n  )\n}\n\nexport type { LocationProviderProps };\nexport { LocationProvider };\n","export function getDistanceFromLatLonInKm(lat1: number, lon1: number, lat2: number, lon2: number) {\n  var R = 6371; // Radius of the earth in km\n  var dLat = deg2rad(lat2-lat1);  // deg2rad below\n  var dLon = deg2rad(lon2-lon1); \n  var a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n    Math.sin(dLon/2) * Math.sin(dLon/2)\n    ; \n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n  var d = R * c; // Distance in km\n  return d;\n}\n\nfunction deg2rad(deg: number) {\n  return deg * (Math.PI/180)\n}\n","import { useAsync } from \"#/hooks/async\";\nimport { useContext } from \"react\"\nimport { requestForegroundPermissionsAsync, getCurrentPositionAsync } from 'expo-location';\nimport { LocationContext } from \"./context\"\nimport { UserLocation } from \"#/types/location\";\nimport { getDistanceFromLatLonInKm } from \"./utils\";\n\nexport const useLocations = () => {\n  const { locations } = useContext(LocationContext);\n  return locations;\n}\n\nexport const useSetLocation = () => {\n  const { set } = useContext(LocationContext);\n  return set;\n}\n\nexport const useRemoveLocation = () => {\n  const { remove } = useContext(LocationContext);\n  return remove;\n}\n\nexport const useGetTransition = () => {\n  const { getTransition } = useContext(LocationContext);\n  return getTransition;\n}\n\nexport const useLookup = () => {\n  const { lookup } = useContext(LocationContext);\n  return lookup;\n}\n\nexport const useCurrentLocation = (proximity: number = 0.5) => {\n  const locations = useLocations();\n  const result = useAsync<UserLocation | undefined>(\n    async () => {\n      let { status } = await requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return undefined;\n      }\n      let position = await getCurrentPositionAsync({});\n      const withDistance = Object.values(locations).map((location) => {\n        if (!location.location) {\n          return;\n        }\n        const distance = getDistanceFromLatLonInKm(\n          position.coords.latitude,\n          position.coords.longitude,\n          location.location.latitude,\n          location.location.longitute,\n        )\n        return {\n          distance,\n          location,\n        }\n      }).filter(Boolean).sort((a, b) => a!.distance - b!.distance)\n      const current = withDistance.find(d => d!.distance < proximity);\n      if (!current) {\n        return {\n          id: `${position.coords.longitude} ${position.coords.latitude}`,\n          title: 'Unknown',\n          location: {\n            latitude: position.coords.latitude,\n            longitute: position.coords.longitude,\n          },\n        };\n      }\n      return current.location;\n    },\n    [],\n  );\n  return result;\n}\n","import { UserLocation } from \"#/types/location\";\nimport { Task } from \"#/types/task\";\n\nexport const locationEqual = (a: UserLocation, b: UserLocation) => {\n  if (a === b) {\n    return true;\n  }\n  if (a.location === b.location) {\n    return true;\n  }\n  if (a.location && b.location && a.location.latitude === b.location.latitude && a.location.longitute === b.location.longitute) {\n    return true;\n  }\n  if (a.title === b.title) {\n    return true;\n  }\n  return false;\n}\n\nexport const listContainLocation = (list: UserLocation[], target: UserLocation) => {\n  return !!list.find(l => locationEqual(l, target));\n}\n\nexport const getRemainingLocations = (tasks: Task[], current: UserLocation) => {\n  const result: UserLocation[] = [];\n  tasks.forEach((task) => {\n    if (!task.locations) {\n      return;\n    }\n    for (let location of task.locations) {\n      if (!listContainLocation(result, location) && !locationEqual(current, location)) {\n        result.push(location)\n      }\n    }\n  })\n  return result;\n};\n\n","import { GraphNode, Context } from '#/types/graph';\nimport { Transition } from '#/types/location';\nimport { Task } from '#/types/task';\nimport { getRemainingLocations, listContainLocation } from './utils';\n\nconst isDead = (impossible: Task[]) => {\n  const missingRequered = impossible.find(t => t.required);\n  return !!missingRequered;\n}\n\ntype GetImpossibleResult = {\n  remaining: Task[];\n  impossible: Task[];\n}\n\nexport const getImpossible = (\n  tasks: Task[],\n  time: Date,\n) => {\n  const result: GetImpossibleResult = {\n    remaining: [],\n    impossible: [],\n  }\n\n  for (let task of tasks) {\n    if (time > task.start.max) {\n      result.impossible.push(task);\n    } else {\n      result.remaining.push(task);\n    }\n  };\n\n  return result;\n}\n\ntype CalculateScoreOptions = {\n  tasks?: Task[];\n  transition?: Transition;\n  impossible: Task[];\n}\n\nconst calculateScore = ({\n  tasks,\n  transition,\n  impossible,\n}: CalculateScoreOptions) => {\n  let score = 0;\n\n  tasks?.forEach((task) => {\n    score += task.priority * 10;\n    impossible.forEach((task) => {\n      if (task.required) {\n        score -= 10000 + (1 * task.priority);\n      } else {\n        score -= 100 + (1 * task.priority);\n      }\n    });\n  });\n  if (transition) {\n    const minutes = transition.time / 1000 / 60\n    score -= 10 + (1 * minutes);\n  }\n  return score;\n}\nconst getNext = async (\n  currentNode: GraphNode,\n  context: Context,\n): Promise<GraphNode[]> => {\n  const nextNodes: GraphNode[] = [];\n  if (!currentNode.transition) {\n    const remainingLocations = getRemainingLocations(currentNode.remainingTasks, currentNode.location);\n    await Promise.all(remainingLocations.map(async(location) => {\n      const transition = await context.getTransition(currentNode.location, location, currentNode.time.end);\n      const endTime = new Date(currentNode.time.end.getTime() + transition.time);\n      const { remaining, impossible } = getImpossible(currentNode.remainingTasks, endTime);\n      const score = calculateScore({\n        transition, \n        impossible,\n      });\n      nextNodes.push({\n        parent: currentNode,\n        location: transition.to,\n        remainingTasks: remaining,\n        transition,\n        impossibeTasks: [\n          ...impossible,\n          ...currentNode.impossibeTasks,\n        ],\n        score: currentNode.score + score,\n        status: {\n          completed: false,\n          dead: isDead(impossible),\n        },\n        time: {\n          start: currentNode.time.end,\n          end: endTime,\n        },\n      })\n    }));\n  }\n  const possibleTasks = currentNode.remainingTasks.filter(task => !task.locations || listContainLocation(task.locations, currentNode.location))\n  await Promise.all(possibleTasks.map(async (orgTask) => {\n    const task = {...orgTask};\n    task.count = (task.count || 1) - 1 \n    let startTime = new Date(\n      Math.max(\n        currentNode.time.end.getTime(),\n        task.start.min.getTime(),\n      ),\n    );\n    const parentRemainging = currentNode.remainingTasks.filter(t => t !== orgTask);\n    let endTime = new Date(startTime.getTime() + task.duration.min);\n    const { remaining, impossible } = getImpossible(\n      task.count > 0\n        ? [...parentRemainging, task]\n        : parentRemainging,\n      endTime,\n    );\n    const score = calculateScore({\n      tasks: [task], \n      impossible,\n    });\n    nextNodes.push({\n      parent: currentNode,\n      location: currentNode.location,\n      task,\n      remainingTasks: remaining,\n      impossibeTasks: [\n        ...impossible,\n        ...currentNode.impossibeTasks,\n      ],\n      score: currentNode.score + score,\n      status: {\n        completed: remaining.length === 0,\n        dead: isDead(impossible),\n      },\n      time: {\n        start: startTime,\n        end: endTime,\n      },\n    })\n  }));\n  return nextNodes;\n};\n\nexport { getNext };\n","import { Context, GraphNode } from \"#/types/graph\";\nimport { UserLocation } from \"#/types/location\";\nimport { Task } from \"#/types/task\";\nimport { getImpossible, getNext } from \"./get-next\";\n\nenum Strategies {\n  all = 'all',\n  allValid = 'all-valid',\n  firstValid = 'first-valid',\n  firstComplet = 'first-complete',\n}\ntype RunningStatus = {\n  current: 'running';\n  nodes: number;\n  start: Date;\n  strategy: Strategies,\n  cancel: () => void;\n}\n\ntype CompletedStatus = {\n  current: 'completed';\n  start: Date;\n  end: Date;\n  nodes: number;\n  strategy: Strategies,\n}\n\ntype Status = RunningStatus | CompletedStatus;\n\ntype BuildGraphOptions = {\n  location: UserLocation;\n  time: Date;\n  tasks: Task[];\n  context: Context;\n  strategy?: Strategies;\n  batchSize?: number;\n  sleepTime?: number;\n  callback?: (status: Status) => void;\n};\n\nconst sleep = (time: number) => new Promise(resolve => setTimeout(resolve, time));\n\nconst fil = <T>(\n  fn: ((item: T) => boolean)[],\n  input: T[],\n): T[][] => {\n  const output: T[][] = new Array(fn.length).fill(undefined).map(() => []);\n  for (let i = 0; i < input.length; i++) {\n    for (let b = 0; b < fn.length; b++) {\n      if (fn[b](input[i])) {\n        output[b].push(input[i]);\n        continue;\n      }\n    }\n  }\n  return output;\n};\n\nconst buildGraph = async ({\n  location,\n  time,\n  tasks,\n  context,\n  strategy = Strategies.allValid,\n  callback,\n  batchSize = 1000,\n  sleepTime = 10,\n}: BuildGraphOptions) => {\n  const start = new Date();\n  let nodeCount = 0;\n  let running = true;\n  const { remaining, impossible } = getImpossible(tasks, time);\n  let leafList: GraphNode[] = [{\n    location,\n    time: {\n      end: time,\n      start: time,\n    },\n    score: 0,\n    remainingTasks: remaining,\n    impossibeTasks: impossible,\n    status: {\n      dead: false,\n      completed: false,\n    },\n  }];\n  const completedList: GraphNode[] = [];\n  const deadList: GraphNode[] = [];\n\n  const complete = (nodes: GraphNode[]) => {\n    if (callback) {\n      callback({\n        current: 'completed',\n        nodes: nodeCount,\n        start,\n        end: new Date(),\n        strategy,\n      });\n    }\n    return nodes.sort((a, b) => b.score - a.score);\n  }\n\n  while (true) {\n    nodeCount++;\n    if (!running) {\n      return [];\n    }\n    if (\n      leafList.length === 0\n      && completedList.length === 0\n      && strategy !== Strategies.all\n    ) {\n      strategy = Strategies.all;\n      leafList.push(...deadList);\n    }\n    const node = leafList.pop();\n    if (!node) {\n      break;\n    }\n    if (nodeCount % batchSize === 0) {\n      if (callback) {\n        callback({\n          current: 'running',\n          nodes: nodeCount,\n          strategy,\n          start,\n          cancel: () => {\n            running = false;\n          }\n        })\n      }\n      await sleep(sleepTime);\n    }\n    const next = await getNext(node, context); \n    const [alive, completed, dead] = fil([\n      n => (strategy === Strategies.all || !n.status.dead) && !n.status.completed,\n      n => !!n.status.completed && (strategy === Strategies.all || !n.status.dead),\n      n => n.status.dead,\n    ], next);\n    leafList.push(...alive);\n    if (strategy === Strategies.firstValid && completed.length > 0) {\n      return complete(completed);\n    }\n    if (completed.length > 0) {\n      completedList.push(...completed)\n    }\n    if (strategy === Strategies.firstComplet) {\n      const fullComplete = completed.find(c => c.impossibeTasks.length === 0);\n      if (fullComplete) {\n        return complete([fullComplete]);\n      }\n    }\n    deadList.push(...dead);\n  }\n\n  return complete(completedList);\n}\n\nexport type { Status, BuildGraphOptions };\nexport { buildGraph, Strategies };\n","import { createContext } from 'react';\nimport { Strategies } from \"./algorithm/build-graph\";\n\ntype PlannerOptions = {\n  strategy: Strategies;\n}\ntype PlannerContextValue = {\n  options: PlannerOptions;\n  setOptions: (options: Partial<PlannerOptions>) => void;\n}\n\nconst PlannerContext = createContext<PlannerContextValue>(undefined as any);\n\nexport type { PlannerContextValue, PlannerOptions };\nexport { PlannerContext };\n","import { ReactNode, useCallback, useState } from 'react';\nimport { Strategies } from './algorithm/build-graph';\nimport { PlannerContext, PlannerOptions } from './context';\n\ntype PlannerProviderProps = {\n  children: ReactNode;\n};\n\nconst PlannerProvider: React.FC<PlannerProviderProps> = ({ children }) => {\n  const [options, setOwnOptions] = useState<PlannerOptions>({\n    strategy: Strategies.firstComplet,\n  })\n\n  const setOptions = useCallback(\n    (next: Partial<PlannerOptions>) => {\n      setOwnOptions(current => ({\n        ...current,\n        ...next,\n      }))\n    },\n    [setOwnOptions],\n  );\n\n  return (\n    <PlannerContext.Provider value={{ options, setOptions }}>\n      {children}\n    </PlannerContext.Provider>\n  );\n}\n\nexport type { PlannerProviderProps };\nexport { PlannerProvider };\n","import { GraphNode } from \"#/types/graph\";\nimport { PlanItem } from \"#/types/plans\";\n\nconst constructDay = (node: GraphNode) => {\n  let current: GraphNode | undefined = node;\n  const plans: PlanItem[] = [];\n\n  while(current) {\n    if (current.task) {\n      plans.push({\n        type: 'task',\n        name: current.task?.name || 'start',\n        external: current.task?.external,\n        start: new Date(\n          current.time.start.getTime()\n          + (current.transition?.time || 0),\n        ),\n        end: current.time.end,\n        score: current.score,\n      })\n    }\n    if (current.transition) {\n      plans.push({\n        type: 'transition',\n        start: current.time.start,\n        end: new Date(\n          current.time.start.getTime()\n          + current.transition.time,\n        ),\n        from: current.transition.from,\n        to: current.transition.to,\n      })\n    }\n    current = current.parent;\n  }\n\n  return plans.reverse();\n}\n\nexport { constructDay };\n","import { useGetTransition } from \"#/features/location\";\nimport { buildGraph, Status, Strategies } from \"./algorithm/build-graph\";\nimport { constructDay } from \"./algorithm/construct-day\";\nimport { useAsyncCallback } from \"#/hooks/async\";\nimport { UserLocation } from \"#/types/location\";\nimport { useDate } from \"../calendar\";\nimport { useTasksWithContext } from \"../agenda-context\";\nimport { useContext, useMemo, useState } from \"react\";\nimport { PlanItem } from \"#/types/plans\";\nimport { Task } from \"#/types/task\";\nimport { PlannerContext } from \"./context\";\n\nexport type UsePlanOptions = {\n  location: UserLocation;\n}\n\nexport type UsePlan = [\n  (start?: Date) => Promise<any>,\n  { \n    result?: { agenda: PlanItem[], impossible: Task[] };\n    status?: Status;\n    loading: boolean;\n    error?: any;\n  }\n]\n\nexport const usePlanOptions = () => {\n  const { options } = useContext(PlannerContext);\n  return options;\n}\n\nexport const useSetPlanOptions = () => {\n  const { setOptions } = useContext(PlannerContext);\n  return setOptions;\n}\n\nexport const usePlan = ({\n  location,\n}: UsePlanOptions): UsePlan => {\n  const today = useDate();\n  const planOptions = usePlanOptions();\n  const [status, setStatus] = useState<Status>();\n  const all = useTasksWithContext();\n  const enabled = useMemo(() => all.filter(f => f.enabled), [all])\n  const getTransition = useGetTransition();\n  const [invoke, options] = useAsyncCallback(\n    async (start?: Date) => {\n      const graph = await buildGraph({\n        location,\n        time: start || today,\n        tasks: enabled,\n        strategy: planOptions.strategy,\n        context: {\n          getTransition,\n        },\n        callback: setStatus,\n      });\n      const valid = graph.filter(a => !a.status.dead && a.status.completed).sort((a, b) => b.score - a.score);\n      const day = constructDay(valid[0]);\n      return {\n        impossible: valid[0].impossibeTasks,\n        agenda: day, \n      };\n    },\n    [today, location, all, setStatus, planOptions],\n  );\n\n  return [\n    invoke,\n    {\n      result: options.result,\n      loading: options.loading,\n      error: options.error,\n      status: status,\n    }\n  ];\n}\n","import { GetTransition } from \"#/types/location\"\nimport { ReactNode } from \"react\"\nimport { AgendaContextProvider } from \"./agenda-context\"\nimport { CalendarProvider } from \"./calendar\"\nimport { LocationProvider } from \"./location\"\nimport { PlannerProvider } from \"./planner\"\nimport { RoutinesProvider } from \"./routines\"\n\ntype SetupProps = {\n  day: Date;\n  setDate: (date: Date) => void;\n  children: ReactNode;\n  getTransit: GetTransition;\n}\nconst Setup: React.FC<SetupProps> = ({\n  children,\n  day,\n  setDate,\n  getTransit,\n}) => (\n  <CalendarProvider date={day} setDate={setDate}>\n    <RoutinesProvider>\n      <LocationProvider getTransition={getTransit} lookup={() => []}>\n        <AgendaContextProvider day={day}>\n          <PlannerProvider>\n            {children}\n          </PlannerProvider>\n        </AgendaContextProvider>\n      </LocationProvider>\n    </RoutinesProvider>\n  </CalendarProvider>\n);\n\nexport type { SetupProps };\nexport { Setup };\n","import React from 'react';\nimport { Feather, } from '@expo/vector-icons';\nimport { useTheme } from 'styled-components/native';\nimport { Theme } from '#/ui/theme';\n\ntype IconNames = keyof typeof Feather.glyphMap;\ntype Props = {\n  size?: number;\n  color?: keyof Theme['colors'];\n  name: IconNames;\n}\n\nfunction Icon({\n  size,\n  color,\n  name,\n}: Props) {\n  const theme = useTheme();\n  return (\n    <Feather\n      name={name}\n      color={color ? theme.colors[color] : theme.colors.icon}\n      size={size ?? theme.sizes.icons}\n    />\n  ) \n};\n\nexport type { IconNames };\nexport { Icon };\n","import { Modal } from 'react-native';\n\nexport default Modal;\n","import React, { ReactNode } from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport styled from 'styled-components/native';\nimport { Theme } from '#/ui/theme';\n\ninterface Props {\n  accessibilityRole?: TouchableOpacity['props']['accessibilityRole'];\n  accessibilityLabel?: string;\n  accessibilityHint?: string;\n  children?: ReactNode;\n  onPress?: () => any;\n  background?: string;\n  flex?: string | number;\n  direction?: 'row' | 'column';\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch';\n  opacity?: number;\n}\n\nconst Wrapper = styled.View<{\n  background?: string;\n  flex?: string | number;\n  direction?: 'row' | 'column';\n  theme: Theme;\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch';\n  opacity?: number;\n}>`\n  padding: ${({ theme }) => theme.margins.medium / 2}px;\n  ${({ background }) => (background ? `background: ${background};` : '')}\n  ${({ flex }) => (flex ? `flex: ${flex};` : '')}\n  flex-direction: ${({ direction }) => (direction ? direction : 'row')};\n  align-items: ${({ align }) => (align ? align : 'center')};\n  ${({ opacity }) => (opacity? `opacity: ${opacity};` : '')}\n`;\n\nconst Touch = styled.TouchableOpacity``;\n\nconst Cell: React.FC<Props> = ({ children, onPress, ...props}) => {\n  const {\n    accessibilityLabel,\n    accessibilityRole,\n    accessibilityHint,\n    ...others\n  } = props;\n  const node = (\n    <Wrapper {...others}>\n      {children}\n    </Wrapper>\n  );\n  if (onPress) {\n    return (\n      <Touch\n        accessible\n        accessibilityRole={accessibilityRole || 'button'}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityHint={accessibilityHint}\n        onPress={onPress}\n      >\n        {node}\n      </Touch>\n    );\n  }\n  return node;\n};\n\nexport { Cell };\n","import styled from 'styled-components/native';\nimport { Theme } from 'theme';\n\ninterface TextProps {\n  color?: keyof Theme['colors'];\n  bold?: boolean;\n  theme: Theme;\n}\n\nconst BaseText = styled.Text<TextProps>`\n  color: ${({ color, theme }) =>\n    color ? theme.colors[color] : theme.colors.text};\n  font-weight: ${({ bold }) => (bold ? 'bold' : 'normal')};\n  font-size: ${({ theme }) => theme.font.baseSize}px;\n`;\n\nconst Jumbo = styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 2.8}px;\n  font-weight: bold;\n`;\n\nconst Title2 = styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 1.3}px;\n  font-weight: bold;\n`;\n\nconst Title1 = styled(BaseText)`\n  font-weight: bold;\n`;\n\nconst Body1 = styled(BaseText)``;\n\nconst Overline = styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 0.6}px;\n  text-transform: uppercase;\n`;\n\nconst Caption = styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 0.8}px;\n`;\n\nconst Link = styled(BaseText)`\n  text-transform: uppercase;\n`;\n\nexport type { TextProps };\nexport { Jumbo, Title2, Title1, Body1, Overline, Caption, Link };\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components/native';\nimport { Title1, Body1, Overline } from '#/ui/typography';\nimport { Cell } from './cell';\n\ntype RowProps = {\n  background?: string;\n  top?: ReactNode;\n  left?: ReactNode;\n  right?: ReactNode;\n  title?: ReactNode;\n  overline?: ReactNode;\n  description?: ReactNode;\n  children?: ReactNode;\n  opacity?: number;\n  onPress?: () => any;\n}\n\nconst Children = styled.View``;\n\nconst componentOrString = (\n  input: ReactNode,\n  Component: React.FC<{ children: ReactNode }>\n) => {\n  if (!input) {\n    return null;\n  }\n  if (typeof input === 'string') {\n    return <Component>{input}</Component>;\n  }\n  return input;\n};\n\nconst Row: React.FC<RowProps> = ({\n  background,\n  top,\n  left,\n  right,\n  title,\n  opacity,\n  overline,\n  description,\n  children,\n  onPress,\n}) => (\n  <Cell background={background} opacity={opacity} onPress={onPress}>\n    {left}\n    <Cell flex={1} direction=\"column\" align=\"stretch\">\n      {!!top}\n      {componentOrString(overline, Overline)}\n      {componentOrString(title, Title1)}\n      {componentOrString(description, Body1)}\n      {!!children && <Children>{children}</Children>}\n    </Cell>\n    {right}\n  </Cell>\n);\n\nexport type { RowProps };\nexport { Row };\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { Cell } from './cell';\n\ninterface Props {\n  color?: string;\n  size?: number;\n  onPress?: () => void;\n}\n\nconst Icon = styled.View<{ size: number; color: string }>`\n  background: ${({ color }) => color};\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  border-radius: ${({ size }) => size / 4}px;\n`;\n\nconst PlaceholderIcon: React.FC<Props> = ({\n  color = 'red',\n  size = 24,\n  onPress,\n}) => (\n  <Cell onPress={onPress}>\n    <Icon color={color} size={size} />\n  </Cell>\n);\n\nexport { PlaceholderIcon };\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components/native';\nimport { Keyboard, Platform } from 'react-native';\n\nconst KeyboardAvoiding = styled.KeyboardAvoidingView`\n  flex: 1;\n`;\n\nconst Pressable = styled.Pressable`\n  flex: 1;\n`\n// background-color: ${({ theme }) => theme.colors.background};\n\nconst Page: React.FC = ({ children }) => {\n  const [keyboardShown, setKeyboardShown] = useState(false);\n  useEffect(() => {\n    const keyboardDidShow = () => setKeyboardShown(true);\n    const keyboardDidHide = () => setKeyboardShown(false);\n    Keyboard.addListener('keyboardDidShow', keyboardDidShow);\n    Keyboard.addListener('keyboardDidHide', keyboardDidHide);\n\n    return () => {\n      Keyboard.removeListener('keyboardDidShow', keyboardDidShow);\n      Keyboard.removeListener('keyboardDidHide', keyboardDidHide);\n    };\n  }, []);\n  return (\n    <Pressable\n      disabled={!keyboardShown}\n      onPress={() => Keyboard.dismiss()}\n    >\n      <KeyboardAvoiding behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        {children}\n      </KeyboardAvoiding>\n    </Pressable>\n  );\n};\n\nexport { Page };\n","import React, { ReactNode } from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport styled from 'styled-components/native';\nimport { Icon } from '../icon';\nimport { Row, Cell } from '../row';\nimport { Page } from '../page';\n\ninterface Props {\n  onClose?: () => void;\n  children: ReactNode;\n}\n\nconst Top = styled.Pressable`\n  flex: 1;\n`;\n\nconst Wrapper = styled.View`\n  background: ${({ theme }) => theme.colors.background};\n  width: 100%;\n  shadow-color: ${({ theme }) => theme.colors.shadow};\n  shadow-offset: 0 0;\n  shadow-opacity: 1;\n  shadow-radius: 200px;\n  border-radius: 12px;\n  margin-bottom: -12px;\n`;\n\nconst Outer = styled.View`\n  flex: 1;\n`;\n\nconst Popup: React.FC<Props> = ({ visible, children, onClose }) => {\n  const insets = useSafeAreaInsets();\n\n  return (\n    <Page>\n      <Outer>\n        <Top onPress={onClose} />\n        <Wrapper style={{ paddingBottom: insets.bottom + 12 }}>\n          <Row\n            right={\n              <Cell onPress={onClose}>\n                <Icon name=\"x-circle\" />\n              </Cell>\n            }\n          />\n          {children}\n        </Wrapper>\n      </Outer>\n    </Page>\n  );\n};\n\nexport { Popup };\n","import { ReactNode } from 'react';\nimport Wrapper from './react-modal';\nimport { Popup } from '../popup';\ntype ModalProps = {\n  visible: boolean;\n  onClose: () => void;\n  children: ReactNode;\n}\n\nconst Modal: React.FC<ModalProps> = ({ visible, onClose, children }) => (\n  <Wrapper \n    transparent\n    visible={visible}\n    animationType=\"slide\"\n    onRequestClose={onClose}\n    onDismiss={onClose}\n  >\n    <Popup onClose={onClose}>\n      {children}\n    </Popup>\n  </Wrapper>\n);\n\nexport { Modal };\n","import React from 'react';\nimport styled, { useTheme } from 'styled-components/native';\nimport { Row, RowProps } from '../../row';\n\ntype Props = RowProps & {\n  placeholder?: string;\n  value: string;\n  onChangeText: (text: string) => any;\n}\n\nconst InputField = styled.TextInput`\n  background: ${({ theme }) => theme.colors.input};\n  color: ${({ theme }) => theme.colors.text};\n  padding: ${({ theme }) => theme.margins.small}px;\n  font-size: ${({ theme }) => theme.font.baseSize}px;\n  border-radius: ${({ theme }) => theme.sizes.corners}px;\n  width: 100%;\n`;\n\nconst TextInput: React.FC<Props> = ({ placeholder, value, onChangeText, children, ...row }) => {\n  const theme = useTheme();\n  return (\n    <Row overline={placeholder} {...row}>\n      <InputField\n        value={value}\n        onChangeText={onChangeText}\n      />\n      {children}\n    </Row>\n  );\n};\n\nexport { TextInput };\n","import { Row } from \"../../row\"\n\ntype CheckboxProps = {\n  value?: boolean;\n  label: string;\n  onChange: (value: boolean) => void;\n}\n\nconst Checkbok: React.FC<CheckboxProps> = ({\n  value,\n  label,\n  onChange,\n}) => (\n  <Row\n    overline={label}\n    title={value?  'Yes' : 'No'}\n    onPress={() => onChange(!value)}\n  />\n);\n\nexport { Checkbok };\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components/native';\nimport { TouchableOpacity } from 'react-native';\nimport { IconNames, Icon } from '../icon';\nimport { Theme } from '#/ui/theme';\nimport { Link } from '#/ui/typography';\n\ninterface Props {\n  title?: string;\n  icon?: IconNames;\n  onPress?: () => any;\n  accessibilityRole?: TouchableOpacity['props']['accessibilityRole'];\n  accessibilityLabel?: string;\n  accessibilityHint?: string;\n  type?: 'primary' | 'secondary' | 'destructive';\n}\n\nconst Touch = styled.TouchableOpacity``;\n\nconst Wrapper = styled.View<{ theme: Theme }>`\n  color: ${({ theme }) => theme.colors.primary};\n  padding: ${({ theme }) => theme.margins.small}px;\n  border-radius: ${({ theme }) => theme.sizes.corners}px;\n  align-items: center;\n`;\n\nconst Button: React.FC<Props> = ({\n  title,\n  icon,\n  type,\n  onPress,\n  accessibilityHint,\n  accessibilityRole,\n  accessibilityLabel,\n}) => (\n  <Touch\n    onPress={onPress}\n    accessible\n    accessibilityHint={accessibilityHint}\n    accessibilityRole={accessibilityRole}\n    accessibilityLabel={accessibilityLabel}\n  >\n    <Wrapper>\n      {title && <Link color={type}>{title}</Link>}\n      {icon && <Icon name={icon} color={type} />}\n    </Wrapper>\n  </Touch>\n);\n\nexport { Button };\n","import { useLocations, useRemoveLocation } from \"#/features/location\"\nimport { Button, Cell } from \"#/ui/components\";\nimport { Row } from \"#/ui/components/row/row\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FlatList } from \"react-native\";\nimport styled from \"styled-components/native\";\n\nconst Wrapper = styled.View`\n\n`;\n\nconst Name = styled.Text`\n\n`;\n\nconst LocationListScreen: React.FC = () => {\n  const locations  = useLocations();\n  const removeLocation = useRemoveLocation();\n  const { navigate } = useNavigation();\n  return (\n    <Wrapper>\n      <Button icon=\"plus-circle\" onPress={() => navigate('locationSet')} />\n      <FlatList\n        data={Object.values(locations)}\n        keyExtractor={item => item.id}\n        renderItem={({ item }) => (\n          <Row\n            title={item.title}\n            onPress={() => {\n              navigate('locationSet', { id: item.id });\n            }}\n            right={\n              <Cell>\n                <Button type=\"destructive\" icon=\"trash\" onPress={() => removeLocation(item.id)} />\n              </Cell>\n            }\n          />\n        )}\n      />\n    </Wrapper>\n  );\n}\n\nexport { LocationListScreen };\n","import { useRemoveRoutine, useRoutines } from \"#/features/routines\";\nimport { Button, Cell } from \"#/ui/components\";\nimport { Row } from \"#/ui/components/row/row\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FlatList } from \"react-native\";\nimport styled from \"styled-components/native\";\n\nconst Wrapper = styled.View`\n\n`;\n\nconst RoutinesListScreen: React.FC = () => {\n  const routines  = useRoutines();\n  const removeRoutine = useRemoveRoutine();\n  const { navigate } = useNavigation();\n  return (\n    <Wrapper>\n      <Button icon=\"plus-circle\" onPress={() => navigate('routineSet')} />\n      <FlatList\n        data={Object.values(routines)}\n        keyExtractor={item => item.id}\n        renderItem={({ item }) => (\n          <Row\n            title={item.title}\n            subtitle={item.location?.map(l => l.title).join(', ')}\n            onPress={() => {\n              navigate('routineSet', { id: item.id });\n            }}\n            right={\n              <Cell>\n                <Button icon=\"trash\" type=\"destructive\" onPress={() => removeRoutine(item.id)} />\n              </Cell>\n            }\n          />\n        )}\n      />\n    </Wrapper>\n  );\n}\n\nexport { RoutinesListScreen };\n","import { useLocations, useSetLocation } from \"#/features/location\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { Popup, Button, TextInput } from \"#/ui/components\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { nanoid } from 'nanoid';\n\nconst LocationSetScreen: React.FC = () => {\n  const { params = {} } = useRoute() as any;\n  const id = useMemo(\n    () => params.id || nanoid(),\n    [params.id],\n  )\n  const locations = useLocations();\n  const { navigate, goBack } = useNavigation();\n  const [title, setTitle] = useState('');\n  const [lng, setLng] = useState('');\n  const [lat, setLat] = useState('');\n  const set = useSetLocation();  \n\n  useEffect(\n    () => {\n      const current = locations[id];\n      if (!current) {\n        return;\n      }\n      setTitle(current.title);\n      setLng(current.location?.longitute.toString() || '');\n      setLat(current.location?.latitude.toString() || '');\n    },\n    [locations, id],\n  )\n\n  const save = useCallback(\n    () => {\n      const lngParsed = parseFloat(lng);\n      const latParsed = parseFloat(lat);\n      set({\n        id,\n        title,\n        location: {\n          longitute: lngParsed,\n          latitude: latParsed,\n        },\n      });\n      navigate('main');\n    },\n    [title, lng, lat, id],\n  )\n\n  return (\n    <Popup onClose={goBack}>\n      <TextInput value={title} onChangeText={setTitle} placeholder=\"Title\" />\n      <TextInput value={lng} onChangeText={setLng} placeholder=\"Longitute\" />\n      <TextInput value={lat} onChangeText={setLat} placeholder=\"Latitude\" />\n      <Button title=\"Save\" onPress={save} />\n    </Popup>\n  )\n}\n\nexport { LocationSetScreen };\n\n","\nimport React, { ReactNode, useMemo } from \"react\";\nimport styled from \"styled-components/native\";\nimport stringToColor from 'string-to-color';\nimport parseCSSColor from \"parse-css-color\";\nimport chroma from 'chroma-js';\nimport { PlanItem } from \"#/types/plans\";\n\ntype AgendaItemProps = {\n  item: LayoutItem;\n  onPress?: () => void;\n}\n\ntype LayoutItem = {\n  height: number;\n  color: string;\n  body?: ReactNode;\n  start: Date;\n  end: Date;\n}\n\nconst Time = styled.Text<{background : string}>`\n  font-size: 10px;\n  color: #fff;\n  font-weight: bold;\n  color: ${({ background }) => background === 'transparent' ? '#222' : '#fff'};\n`;\n\nconst TimeBox = styled.View<{\n  background: string;\n}>`\n  margin-right: 10px;\n  width: 50px;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  background: ${({ background }) => background === 'transparent' ? background : chroma(background).darken(1.5).hex()};\n`;\n\nconst Filler = styled.View`\n  margin: 10px;\n  width: 50px;\n  height: 50px;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Block = styled.View<{\n  background: string;\n  height: number;\n}>`\n  background: ${({ background }) => background};\n  height: ${({ height }) => height / 3}px;\n  max-height: 100px;\n  margin: 5px;\n  flex-direction: row;\n  align-items: center;\n  border-radius: 3px;\n  border: solid 1px ${({ background }) => background === 'transparent' ? background : chroma(background).darken(0.3).hex()};\n`;\n\nconst Main = styled.View`\n  flex: 1;\n`\n\nconst isDark = (color: string) => {\n  const parsed = parseCSSColor(color);\n  const [r, g, b] = parsed!.values;\n\n  var luma = 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709\n\n  return luma < 150;\n}\n\nconst formatTime = (time: Date) => {\n  const hours = time.getHours().toString().padStart(2, '0')\n  const minutes = time.getMinutes().toString().padStart(2, '0')\n\n  return `${hours}:${minutes}`;\n};\n\nconst Touch = styled.TouchableOpacity`\n\n`;\n\nconst AgendaItemView: React.FC<AgendaItemProps> = ({ item, onPress }) => {\n  const view = (\n    <Block height={Math.max(70, item.height / 15000)} background={item.color}>\n      <TimeBox background={item.color}>\n        <Time background={item.color}>{formatTime(item.start)}</Time>\n        <Time background={item.color}>{formatTime(item.end)}</Time>\n      </TimeBox>\n      <Main>\n        {item.body}\n      </Main>\n      <Filler />\n    </Block>\n  );\n\n  if (onPress) {\n    return (\n      <Touch onPress={onPress}>\n        {view}\n      </Touch>\n    );\n  }\n  return view;\n};\n\nexport type { AgendaItemProps };\nexport { AgendaItemView };\n","import React, { ReactNode, useMemo } from \"react\";\nimport styled from \"styled-components/native\";\nimport stringToColor from 'string-to-color';\nimport chroma from 'chroma-js';\nimport { PlanItem } from \"#/types/plans\";\nimport { AgendaItemView } from \"./agenda-item\";\n\ntype DayViewProps = {\n  plan: PlanItem[];\n}\n\ntype LayoutItem = {\n  height: number;\n  color: string;\n  body?: ReactNode;\n  start: Date;\n  end: Date;\n}\n\nconst Wrapper = styled.View`\n`;\n\nconst Title = styled.Text`\n`;\n\nconst getBody = (item: PlanItem) => {\n  if (item.type === 'transition') {\n    return <Title>{item.from.title} ➜ {item.to.title}</Title>\n  } else {\n    return <Title>{item.name}</Title>\n  }\n}\n\n\nconst DayView: React.FC<DayViewProps> = ({ plan }) => {\n  const layout = useMemo(\n    () => {\n      const [...planItems] = [...plan];\n      const items: LayoutItem[] = [];\n      var lastPlanItem: PlanItem | undefined;\n      for (let planItem of planItems) {\n        if (lastPlanItem && planItem.start.getTime() - lastPlanItem.end.getTime() > 0) {\n          items.push({\n            height: planItem.start.getTime() - lastPlanItem.end.getTime(),\n            color: 'transparent',\n            start: lastPlanItem.end,\n            end: planItem.start,\n          })\n        }\n        let color = planItem.type === 'transition' ? '#34495e' : stringToColor(planItem.name);\n        color = chroma(color).luminance(0.7).saturate(1).brighten(0.6).hex();\n        items.push({\n          height: planItem.end.getTime() - planItem.start.getTime(),\n          color,\n          start: planItem.start,\n          end: planItem.end,\n          body: getBody(planItem),\n        });\n        lastPlanItem = planItem;\n      }\n      return items;\n    },\n    [plan],\n  );\n\n  return (\n    <Wrapper>\n      {layout.map((item, i) => (\n        <AgendaItemView key={i} item={item} />\n      ))} \n    </Wrapper>\n  )\n};\n\nexport type { DayViewProps };\nexport { DayView };\n","import { useCurrentLocation } from \"#/features/location\"\nimport { usePlan } from \"#/features/planner\"\nimport { Button, Cell, Page, Row, TextInput } from \"#/ui/components\";\nimport { DayView } from \"#/ui/components/specialized/plan/day\";\nimport { Body1 } from \"#/ui/typography\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useCommit, useDate } from \"#/features/calendar\";\nimport { format, formatDistance, formatDistanceToNow, set } from \"date-fns\";\nimport styled from \"styled-components/native\";\nimport { Status } from \"#/features/planner/algorithm/build-graph\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst Wrapper = styled.ScrollView`\n\n`;\n\nconst getStats = (status: Status) => {\n  if (status.current === 'running') {\n    const runTime = formatDistanceToNow(status.start, { includeSeconds: true })\n    return `calulated ${status.nodes} nodes in ${runTime} using ${status.strategy}`;\n  }\n  const runTime = formatDistance(status.start, status.end, { includeSeconds: true })\n  return `calulated ${status.nodes} nodes in ${runTime} using ${status.strategy}`;\n};\n\nconst PlanDayScreen: React.FC = () => {\n  const date = useDate();\n  const [location] = useCurrentLocation();\n  const [startTime, setStartTime] = useState('06:00');\n  const [commit] = useCommit();\n  const { navigate } = useNavigation();\n  const current = useMemo(\n    () => location || {\n      id: 'unknown',\n      title: 'Unknown',\n    },\n    [location]\n  )\n  const [plan, options] = usePlan({\n    location: current,\n  })\n  const update = useCallback(\n    () => {\n      const target = new Date(`2000-01-01T${startTime}:00`)\n      const corrected = set(date, {\n        hours: target.getHours(),\n        minutes: target.getMinutes(),\n      })\n      plan(corrected);\n    },\n    [date, plan, startTime],\n  )\n  return (\n    <Wrapper>\n      <Page>\n        <TextInput\n          overline=\"Start time\"\n          value={startTime}\n          onChangeText={setStartTime}\n          right={(\n            <>\n              <Cell>\n                {!options.error && options.status && options.status.current === 'running' ? (\n                  <Button type=\"destructive\" onPress={options.status.cancel} icon=\"x\" />\n                ) : (\n                  <Button icon=\"play\" onPress={update} />\n                )}\n              </Cell>\n              {!!options.result?.agenda && (\n                <Cell>\n                  <Button onPress={() => commit(options.result?.agenda || [])} icon=\"download\" />\n                </Cell>\n              )}\n              <Cell>\n                <Button onPress={() => navigate('planSettings')} icon=\"settings\" />\n              </Cell>\n            </>\n          )}\n        />\n        {!!options.error && (\n          <Row title={JSON.stringify(options.error)} />\n        )}\n        {options.status?.current === 'running' && (\n          <Row\n            title={getStats(options.status)}\n          />\n        )}\n        {!!options.result && options.status?.current === 'completed' && (\n          <Row title={format(date, 'EEEE - do MMMM')} overline={getStats(options.status)}>\n\n            {options.result.impossible && options.result.impossible.length > 0 && <Body1>Impossible: {options.result.impossible.map(i => i.name).join(', ')}</Body1>}\n            <DayView plan={options.result.agenda} />\n          </Row>\n        )}\n      </Page>\n    </Wrapper>\n      \n  )\n}\n\nexport { PlanDayScreen };\n","import { useCalendars, useSelectedCalendars, useSetSelectedCalendars } from \"#/features/calendar\"\nimport { Calendar } from \"expo-calendar\";\nimport { useCallback } from \"react\";\nimport styled from \"styled-components/native\";\n\nconst Wrapper = styled.View`\n\n`;\n\nconst Button = styled.Button`\n\n`;\n\nconst CalendarSelectScreen: React.FC = () => {\n  const calendars = useCalendars();\n  const selected = useSelectedCalendars();\n  const setSelected = useSetSelectedCalendars();\n  const toggle = useCallback(\n    (calendar: Calendar) => {\n      const isSelected = !!selected.find(c => c.id === calendar.id);\n      if (isSelected) {\n        setSelected(selected.filter(c => c.id !== calendar.id));\n      } else {\n        setSelected([\n          ...selected,\n          calendar,\n        ]);\n      }\n    },\n    [selected]\n  )\n\n  return (\n    <Wrapper>\n      {calendars.map((calendar) => (\n        <Button \n          key={calendar.id}\n          title={calendar.title + (selected.includes(calendar) ? ' -y' : '-n')}\n          onPress={() => toggle(calendar)}\n        />\n\n      ))}\n    </Wrapper>\n  )\n}\n\nexport { CalendarSelectScreen };\n","import { useNavigation, useRoute } from '@react-navigation/native';\nimport { Popup, Button, Checkbok, TextInput } from \"#/ui/components\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { nanoid } from 'nanoid';\nimport { useRoutines, useSetRoutine } from '#/features/routines';\nimport { format } from 'date-fns';\nimport { useLocations } from '#/features/location';\n\nconst RoutineSetScreen: React.FC = () => {\n  const { params = {} } = useRoute() as any;\n  const id = useMemo(\n    () => params.id || nanoid(),\n    [params.id],\n  )\n  const routines = useRoutines();\n  const { navigate, goBack } = useNavigation();\n  const [title, setTitle] = useState('');\n  const [startMin, setStartMin] = useState('');\n  const [startMax, setStartMax] = useState('');\n  const [duration, setDuration] = useState('');\n  const locations = useLocations();\n  const [required, setRequired] = useState(false);\n  const [location, setLocation] = useState('');\n  const set = useSetRoutine();  \n\n  useEffect(\n    () => {\n      const current = routines.find(r => r.id === id);\n      if (!current) {\n        return;\n      }\n      setTitle(current.title);\n      if (current.start.min) {\n        setStartMin(format(current.start.min, 'HH:mm'));\n      }\n      if (current.start.max) {\n        setStartMax(format(current.start.max, 'HH:mm'));\n      }\n      if (current.duration) {\n        setDuration((current.duration / 1000 / 60).toString());\n      }\n      setRequired(!!current.required);\n      const name = current.location?.map(l => l.title).join(',') || '';\n      setLocation(name);\n    },\n    [routines, id],\n  )\n\n  const save = useCallback(\n    () => {\n      const name = location.split(',').map(a => Object.values(locations).find(i => i.title.toLowerCase() === a.trim().toLowerCase())).filter(Boolean);\n      set({\n        id,\n        title,\n        priority: 50,\n        required: required,\n        location: name.length > 0 ? name as any : undefined,\n        start: {\n          min: new Date(`2020-01-01T${startMin}:00`),\n          max: new Date(`2020-01-01T${startMax}:00`),\n        },\n        duration: parseInt(duration) * 1000 * 60\n      });\n      navigate('main');\n    },\n    [title, startMin, startMax, duration, location, required],\n  )\n\n  return (\n    <Popup onClose={goBack}>\n      <TextInput value={title} onChangeText={setTitle} placeholder=\"Title\" />\n      <TextInput value={startMin} onChangeText={setStartMin} placeholder=\"Start min\" />\n      <TextInput value={startMax} onChangeText={setStartMax} placeholder=\"Start max\" />\n      <TextInput value={duration} onChangeText={setDuration} placeholder=\"Duration\" />\n      <TextInput value={location} onChangeText={setLocation} placeholder=\"Location\" />\n      <Checkbok label=\"Required\" value={required} onChange={setRequired} />\n      <Button title=\"Save\" onPress={save} />\n    </Popup>\n  )\n}\n\nexport { RoutineSetScreen };\n\n","import { useAgendaContext, useSetAgendaContext, useTasksWithContext } from \"#/features/agenda-context\";\nimport { set } from 'date-fns';\nimport chroma from 'chroma-js';\nimport stringToColor from 'string-to-color';\nimport { Button, Cell, Icon } from \"#/ui/components\";\nimport { Row } from \"#/ui/components\";\nimport { AgendaItemView } from \"#/ui/components/specialized/plan/agenda-item\";\nimport { Body1 } from \"#/ui/typography\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useCallback, useMemo } from \"react\";\nimport { FlatList } from \"react-native\";\nimport CalendarStrip from 'react-native-calendar-strip';\nimport styled, { useTheme } from \"styled-components/native\";\nimport { useDate, useSetDate } from \"#/features/calendar\";\n\nconst Wrapper = styled.View`\n\n`;\n\nconst Strip = () => {\n  const date = useDate();\n  const theme = useTheme();\n  const setDate = useSetDate();\n  const selected = useMemo(\n    () => [{\n      date,\n      lines: [{ color: theme.colors.icon }],\n    }],\n    [date],\n  );\n  return (\n    <CalendarStrip\n      markedDates={selected}\n      style={{\n        height: 150,\n        paddingTop: 60,\n        paddingBottom: 10,\n        backgroundColor: theme.colors.background,\n      }}\n      calendarColor={'#fff'}\n      selectedDate={date}\n      startingDate={date}\n      onDateSelected={(date) => {\n        setDate(set(date.toDate(), { hours: 0, minutes: 0, seconds: 0, milliseconds: 0 }));\n      }}\n      shouldAllowFontScaling={false}\n      iconContainer={{flex: 0.1}}\n      calendarHeaderStyle={{\n        color: theme.colors.text,\n        fontSize: theme.font.baseSize * 1.2,\n      }}\n      highlightDateNameStyle={{\n        color: theme.colors.icon,\n        fontSize: theme.font.baseSize * 0.6,\n      }}\n      iconLeftStyle={{\n        tintColor: theme.colors.text,\n      }}\n      iconRightStyle={{\n        tintColor: theme.colors.text,\n      }}\n      highlightDateNumberStyle={{\n        color: theme.colors.icon,\n        fontSize: theme.font.baseSize * 1.2,\n      }}\n      dateNumberStyle={{\n        color: theme.colors.text,\n        fontSize: theme.font.baseSize * 1.2,\n      }}\n      dateNameStyle={{\n        color: theme.colors.text,\n        fontSize: theme.font.baseSize * 0.6,\n      }}\n    />\n  );\n}\n\nconst TaskListScreen: React.FC = () => {\n  const tasks = useTasksWithContext();\n  const { navigate } = useNavigation();\n  const contexts = useAgendaContext();\n  const [set] = useSetAgendaContext();\n\n  const toggle = useCallback(\n    (task: any) => {\n      const context = contexts[task.id] || {};\n      set(task.id, {\n        ...context,\n        enabled: !task.enabled,\n      })\n    },\n    [set],\n  )\n  return (\n    <Wrapper>\n      <FlatList\n        ListHeaderComponent={Strip}\n        data={Object.values(tasks)}\n        keyExtractor={item => item.id}\n        renderItem={({ item }) => (\n          <Row\n            onPress={() => {\n              toggle(item);\n              //navigate('agendaContextSet', { id: item.id });\n            }}\n            opacity={item.enabled ? undefined : 0.3}\n            right={(\n              <Button\n                icon=\"edit\"\n                onPress={() => {\n                  navigate('agendaContextSet', { id: item.id });\n                }}\n              />\n            )}\n          >\n            <AgendaItemView\n              item={{\n                height: 1000 * 60 * 30,\n                body: <Body1>{item.name}</Body1>,\n                start: item.start.min,\n                color: chroma(stringToColor(item.name)).luminance(0.7).saturate(1).brighten(0.6).hex(),\n                end: new Date(item.start.max.getTime() + item.duration.min),\n              }}\n            />\n          </Row>\n        )}\n      />\n    </Wrapper>\n  );\n}\n\nexport { TaskListScreen };\n","import { useLocations, useSetLocation } from \"#/features/location\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { Popup, Button, Checkbok, TextInput } from \"#/ui/components\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { nanoid } from 'nanoid';\nimport { useAgendaContext, useSetAgendaContext } from \"#/features/agenda-context\";\nimport { format } from \"date-fns\";\n\nconst AgendaContextSetScreen: React.FC = () => {\n  const { params = {} } = useRoute() as any;\n  const id = useMemo(\n    () => params.id || nanoid(),\n    [params.id],\n  )\n  const contexts = useAgendaContext();\n  const { navigate, goBack } = useNavigation();\n  const locations = useLocations();\n  const [location, setLocation] = useState('');\n  const [enabled, setEnabled] = useState(true);\n  const [startMin, setStartMin] = useState('');\n  const [startMax, setStartMax] = useState('');\n  const [duration, setDuration] = useState('');\n  const [count, setCount] = useState('1');\n  const [set] = useSetAgendaContext();  \n\n  useEffect(\n    () => {\n      const current = contexts[id];\n      if (!current) {\n        return;\n      }\n      const name = current.locations?.map(l => l.title).join(',') || '';\n      if (current.startMin) {\n        setStartMin(format(current.startMin, 'HH:mm'));\n      }\n      if (current.startMax) {\n        setStartMax(format(current.startMax, 'HH:mm'));\n      }\n      if (current.duration) {\n        setDuration((current.duration / 1000 / 60).toString());\n      }\n      if (current.count) {\n        setCount(current.count.toString());\n      }\n      setLocation(name);\n      setEnabled(current.enabled);\n    },\n    [contexts, id],\n  )\n\n  const save = useCallback(\n    () => {\n      const name = location.split(',').map(a => Object.values(locations).find(i => i.title.toLowerCase() === a.trim().toLowerCase())).filter(Boolean);\n      set(id, {\n        enabled,\n        locations: name as any,\n        count: parseInt(count),\n        startMin: startMin ? new Date(`2020-01-01T${startMin}:00`) : undefined,\n        startMax: startMax ? new Date(`2020-01-01T${startMax}:00`) : undefined,\n        duration: duration ? parseInt(duration) * 1000 * 60 : undefined,\n      });\n      navigate('main');\n    },\n    [set, id, enabled, location, count, locations, startMin, startMax, duration],\n  )\n\n  return (\n    <Popup onClose={goBack}>\n      <TextInput value={location} onChangeText={setLocation} placeholder=\"Locations\" />\n      <TextInput value={startMin} onChangeText={setStartMin} placeholder=\"Start min\" />\n      <TextInput value={startMax} onChangeText={setStartMax} placeholder=\"Start max\" />\n      <TextInput value={duration} onChangeText={setDuration} placeholder=\"Duration\" />\n      <TextInput value={count} onChangeText={setCount} placeholder=\"Count\" />\n      <Checkbok label=\"Enabled\" value={enabled} onChange={setEnabled} />\n      <Button title=\"Save\" onPress={save} />\n    </Popup>\n  )\n}\n\nexport { AgendaContextSetScreen };\n\n","import { cmyk } from \"chroma-js\";\nimport { ReactNode, useCallback, useMemo, useState } from \"react\";\nimport { Modal } from \"../../modal\";\nimport { Row } from \"../../row\";\n\ntype SelectorProps<T> = {\n  label: string;\n  items: {\n    display: ReactNode;\n    value: T;\n  }[];\n  getId: (item: T) => string;\n  selected?: T;\n  setSelected: (item?: T) => void;\n}\n\nfunction Selector<T = any>({\n  items,\n  label,\n  getId,\n  selected,\n  setSelected,\n}: SelectorProps<T>) {\n  const [visible, setVisible] = useState(false);\n  const selectedItem = useMemo(\n    () => selected ? items.find(i => getId(i.value) === getId(selected)) : undefined,\n    [selected, items],\n  );\n  const select = useCallback(\n    (item: T) => {\n      setSelected(item);\n      setVisible(false);\n    },\n    [setSelected, setVisible],\n  );\n  return (\n    <>\n      <Modal visible={visible} onClose={() => setVisible(false)}>\n        {items.map((item) => (\n          <Row\n            key={getId(item.value)}\n            onPress={() => select(item.value)}\n            title={item.display}\n          />\n        ))}\n      </Modal>\n      <Row\n        overline={label}\n        onPress={() => setVisible(true)}\n        title={selectedItem?.display || 'Select'}\n      />\n    </>\n  )\n}\n\nexport { Selector };\n","import { Strategies, usePlanOptions, useSetPlanOptions } from \"#/features/planner\"\nimport { Selector } from \"#/ui/components/form/selector\";\nimport { Popup } from \"#/ui/components\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst items = [{\n  display: 'First valid',\n  value: Strategies.firstValid,\n}, {\n  display: 'First complete',\n  value: Strategies.firstComplet,\n}, {\n  display: 'All valid',\n  value: Strategies.allValid,\n}, {\n  display: 'All',\n  value: Strategies.all,\n}];\n\nconst PlanSettingsScreen: React.FC = () => {\n  const options = usePlanOptions();\n  const setOptions = useSetPlanOptions();\n  const { goBack } = useNavigation();\n\n  return (\n    <Popup onClose={goBack}>\n      <Selector\n        label=\"Strategy\"\n        items={items}\n        getId={i => i}\n        selected={options.strategy}\n        setSelected={(strategy) => {\n          setOptions({ strategy: strategy || Strategies.firstComplet });\n        }}\n      />\n    </Popup>\n  );\n}\n\nexport { PlanSettingsScreen };\n","import { useMemo } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useTheme } from 'styled-components/native';\nimport { LocationListScreen } from '#/ui/screens/locations/list';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { RoutinesListScreen } from '../screens/routines/list';\nimport { LocationSetScreen } from '../screens/locations/set';\nimport { PlanDayScreen } from '../screens/plan/day';\nimport { CalendarSelectScreen } from '../screens/calendars/select';\nimport { RoutineSetScreen } from '../screens/routines/set';\nimport { TaskListScreen } from '../screens/plan/tasks';\nimport { AgendaContextSetScreen } from '../screens/plan/set';\nimport { Icon } from '../components';\nimport { PlanSettingsScreen } from '../screens/plan/settings';\n\nconst MainTabsNvaigator = createBottomTabNavigator();\n\nconst MainTabs: React.FC = () => {\n  const theme = useTheme();\n  return (\n    <MainTabsNvaigator.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: theme.colors.primary,\n      }}\n    >\n      <MainTabsNvaigator.Screen\n        options={{\n          headerShown: false,\n          tabBarLabel: 'Prepare',\n          tabBarIcon: ({ focused }) => <Icon color={focused ? 'primary' : 'text'} name=\"check-square\" />,\n        }}\n        name=\"tasks\"\n        component={TaskListScreen}\n      />\n      <MainTabsNvaigator.Screen\n        name=\"plan\"\n        component={PlanDayScreen}\n        options={{\n          tabBarLabel: 'Plan',\n          tabBarIcon: ({ focused }) => <Icon color={focused ? 'primary' : 'text'} name=\"calendar\" />,\n        }}\n      />\n      <MainTabsNvaigator.Screen\n        name=\"locations\"\n        component={LocationListScreen}\n        options={{\n          tabBarLabel: 'Locations',\n          tabBarIcon: ({ focused }) => <Icon color={focused ? 'primary' : 'text'} name=\"map-pin\" />,\n        }}\n      />\n      <MainTabsNvaigator.Screen\n        name=\"routines\"\n        component={RoutinesListScreen}\n        options={{\n          tabBarLabel: 'Routines',\n          tabBarIcon: ({ focused }) => <Icon color={focused ? 'primary' : 'text'} name=\"activity\" />,\n        }}\n      />\n      <MainTabsNvaigator.Screen\n        name=\"calendars\"\n        component={CalendarSelectScreen}\n        options={{\n          tabBarLabel: 'Calendars',\n          tabBarIcon: ({ focused }) => <Icon color={focused ? 'primary' : 'text'} name=\"more-vertical\" />,\n        }}\n      />\n    </MainTabsNvaigator.Navigator>\n  );\n};\n\nconst RootNavigator = createNativeStackNavigator();\n\nconst Root: React.FC = () => (\n  <RootNavigator.Navigator screenOptions={{ headerShown: false }}>\n    <RootNavigator.Group>\n      <RootNavigator.Screen name=\"main\" component={MainTabs} />\n    </RootNavigator.Group>\n    <RootNavigator.Group screenOptions={{ presentation: 'transparentModal' }}>\n      <RootNavigator.Screen name=\"locationSet\" component={LocationSetScreen} />\n      <RootNavigator.Screen name=\"routineSet\" component={RoutineSetScreen} />\n      <RootNavigator.Screen name=\"agendaContextSet\" component={AgendaContextSetScreen} />\n      <RootNavigator.Screen name=\"planSettings\" component={PlanSettingsScreen} />\n    </RootNavigator.Group>\n  </RootNavigator.Navigator>\n);\n\nconst Router: React.FC = () => {\n  const theme = useTheme();\n  const baseTheme = useMemo(\n    () => DefaultTheme,\n    [],\n  );\n  const navigationTheme = useMemo(\n    () => ({\n      ...baseTheme,\n      colors: {\n        ...baseTheme.colors,\n        background: theme.colors.shade,\n        card: theme.colors.background,\n        text: theme.colors.text,\n      }\n    }),\n    [baseTheme, theme],\n  );\n  return (\n    <NavigationContainer theme={navigationTheme}>\n      <Root />\n    </NavigationContainer>\n  )\n};\n\nexport { Router };\n","import { Theme } from './theme';\n\nconst light: Theme = {\n  colors: {\n    primary: '#1abc9c',\n    icon: '#1abc9c',\n    destructive: '#e74c3c',\n    shade: '#ededed',\n    input: '#ddd',\n    secondary: 'blue',\n    shadow: '#000',\n    background: '#fff',\n    text: '#000',\n    textShade: '#999',\n  },\n  sizes: {\n    corners: 5,\n    icons: 24,\n  },\n  margins: {\n    small: 8,\n    medium: 16,\n    large: 24,\n  },\n  font: {\n    baseSize: 14,\n  },\n};\n\nexport { light };\n","import 'react-native-get-random-values';\nimport { App } from './src/app';\n\nexport default App;\n","import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { useCallback, useMemo, useState } from 'react';\nimport { Setup } from './features/setup';\nimport { Router } from './ui/router';\nimport { ThemeProvider } from 'styled-components/native';\nimport { light } from './ui';\nimport { set } from 'date-fns';\n\nconst App: React.FC = () => {\n  const [day, setDate] = useState(() => set(new Date, {\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n  }));\n  const getTransit = useCallback(\n    async (from: any, to: any) => ({\n      to,\n      from,\n      time: 45 * 60 * 1000,\n      usableTime: 0,\n    }),\n    [],\n  )\n  return (\n    <SafeAreaProvider>\n      <StatusBar />\n      <ThemeProvider theme={light}>\n        <Setup getTransit={getTransit} day={day} setDate={setDate}>\n          <Router />\n        </Setup>\n      </ThemeProvider>\n    </SafeAreaProvider>\n  );\n};\n\nexport { App };\n","var map = {\n\t\"./af\": 147,\n\t\"./af.js\": 147,\n\t\"./ar\": 148,\n\t\"./ar-dz\": 149,\n\t\"./ar-dz.js\": 149,\n\t\"./ar-kw\": 150,\n\t\"./ar-kw.js\": 150,\n\t\"./ar-ly\": 151,\n\t\"./ar-ly.js\": 151,\n\t\"./ar-ma\": 152,\n\t\"./ar-ma.js\": 152,\n\t\"./ar-sa\": 153,\n\t\"./ar-sa.js\": 153,\n\t\"./ar-tn\": 154,\n\t\"./ar-tn.js\": 154,\n\t\"./ar.js\": 148,\n\t\"./az\": 155,\n\t\"./az.js\": 155,\n\t\"./be\": 156,\n\t\"./be.js\": 156,\n\t\"./bg\": 157,\n\t\"./bg.js\": 157,\n\t\"./bm\": 158,\n\t\"./bm.js\": 158,\n\t\"./bn\": 159,\n\t\"./bn-bd\": 160,\n\t\"./bn-bd.js\": 160,\n\t\"./bn.js\": 159,\n\t\"./bo\": 161,\n\t\"./bo.js\": 161,\n\t\"./br\": 162,\n\t\"./br.js\": 162,\n\t\"./bs\": 163,\n\t\"./bs.js\": 163,\n\t\"./ca\": 164,\n\t\"./ca.js\": 164,\n\t\"./cs\": 165,\n\t\"./cs.js\": 165,\n\t\"./cv\": 166,\n\t\"./cv.js\": 166,\n\t\"./cy\": 167,\n\t\"./cy.js\": 167,\n\t\"./da\": 168,\n\t\"./da.js\": 168,\n\t\"./de\": 169,\n\t\"./de-at\": 170,\n\t\"./de-at.js\": 170,\n\t\"./de-ch\": 171,\n\t\"./de-ch.js\": 171,\n\t\"./de.js\": 169,\n\t\"./dv\": 172,\n\t\"./dv.js\": 172,\n\t\"./el\": 173,\n\t\"./el.js\": 173,\n\t\"./en-au\": 174,\n\t\"./en-au.js\": 174,\n\t\"./en-ca\": 175,\n\t\"./en-ca.js\": 175,\n\t\"./en-gb\": 176,\n\t\"./en-gb.js\": 176,\n\t\"./en-ie\": 177,\n\t\"./en-ie.js\": 177,\n\t\"./en-il\": 178,\n\t\"./en-il.js\": 178,\n\t\"./en-in\": 179,\n\t\"./en-in.js\": 179,\n\t\"./en-nz\": 180,\n\t\"./en-nz.js\": 180,\n\t\"./en-sg\": 181,\n\t\"./en-sg.js\": 181,\n\t\"./eo\": 182,\n\t\"./eo.js\": 182,\n\t\"./es\": 183,\n\t\"./es-do\": 184,\n\t\"./es-do.js\": 184,\n\t\"./es-mx\": 185,\n\t\"./es-mx.js\": 185,\n\t\"./es-us\": 186,\n\t\"./es-us.js\": 186,\n\t\"./es.js\": 183,\n\t\"./et\": 187,\n\t\"./et.js\": 187,\n\t\"./eu\": 188,\n\t\"./eu.js\": 188,\n\t\"./fa\": 189,\n\t\"./fa.js\": 189,\n\t\"./fi\": 190,\n\t\"./fi.js\": 190,\n\t\"./fil\": 191,\n\t\"./fil.js\": 191,\n\t\"./fo\": 192,\n\t\"./fo.js\": 192,\n\t\"./fr\": 193,\n\t\"./fr-ca\": 194,\n\t\"./fr-ca.js\": 194,\n\t\"./fr-ch\": 195,\n\t\"./fr-ch.js\": 195,\n\t\"./fr.js\": 193,\n\t\"./fy\": 196,\n\t\"./fy.js\": 196,\n\t\"./ga\": 197,\n\t\"./ga.js\": 197,\n\t\"./gd\": 198,\n\t\"./gd.js\": 198,\n\t\"./gl\": 199,\n\t\"./gl.js\": 199,\n\t\"./gom-deva\": 200,\n\t\"./gom-deva.js\": 200,\n\t\"./gom-latn\": 201,\n\t\"./gom-latn.js\": 201,\n\t\"./gu\": 202,\n\t\"./gu.js\": 202,\n\t\"./he\": 203,\n\t\"./he.js\": 203,\n\t\"./hi\": 204,\n\t\"./hi.js\": 204,\n\t\"./hr\": 205,\n\t\"./hr.js\": 205,\n\t\"./hu\": 206,\n\t\"./hu.js\": 206,\n\t\"./hy-am\": 207,\n\t\"./hy-am.js\": 207,\n\t\"./id\": 208,\n\t\"./id.js\": 208,\n\t\"./is\": 209,\n\t\"./is.js\": 209,\n\t\"./it\": 210,\n\t\"./it-ch\": 211,\n\t\"./it-ch.js\": 211,\n\t\"./it.js\": 210,\n\t\"./ja\": 212,\n\t\"./ja.js\": 212,\n\t\"./jv\": 213,\n\t\"./jv.js\": 213,\n\t\"./ka\": 214,\n\t\"./ka.js\": 214,\n\t\"./kk\": 215,\n\t\"./kk.js\": 215,\n\t\"./km\": 216,\n\t\"./km.js\": 216,\n\t\"./kn\": 217,\n\t\"./kn.js\": 217,\n\t\"./ko\": 218,\n\t\"./ko.js\": 218,\n\t\"./ku\": 219,\n\t\"./ku.js\": 219,\n\t\"./ky\": 220,\n\t\"./ky.js\": 220,\n\t\"./lb\": 221,\n\t\"./lb.js\": 221,\n\t\"./lo\": 222,\n\t\"./lo.js\": 222,\n\t\"./lt\": 223,\n\t\"./lt.js\": 223,\n\t\"./lv\": 224,\n\t\"./lv.js\": 224,\n\t\"./me\": 225,\n\t\"./me.js\": 225,\n\t\"./mi\": 226,\n\t\"./mi.js\": 226,\n\t\"./mk\": 227,\n\t\"./mk.js\": 227,\n\t\"./ml\": 228,\n\t\"./ml.js\": 228,\n\t\"./mn\": 229,\n\t\"./mn.js\": 229,\n\t\"./mr\": 230,\n\t\"./mr.js\": 230,\n\t\"./ms\": 231,\n\t\"./ms-my\": 232,\n\t\"./ms-my.js\": 232,\n\t\"./ms.js\": 231,\n\t\"./mt\": 233,\n\t\"./mt.js\": 233,\n\t\"./my\": 234,\n\t\"./my.js\": 234,\n\t\"./nb\": 235,\n\t\"./nb.js\": 235,\n\t\"./ne\": 236,\n\t\"./ne.js\": 236,\n\t\"./nl\": 237,\n\t\"./nl-be\": 238,\n\t\"./nl-be.js\": 238,\n\t\"./nl.js\": 237,\n\t\"./nn\": 239,\n\t\"./nn.js\": 239,\n\t\"./oc-lnc\": 240,\n\t\"./oc-lnc.js\": 240,\n\t\"./pa-in\": 241,\n\t\"./pa-in.js\": 241,\n\t\"./pl\": 242,\n\t\"./pl.js\": 242,\n\t\"./pt\": 243,\n\t\"./pt-br\": 244,\n\t\"./pt-br.js\": 244,\n\t\"./pt.js\": 243,\n\t\"./ro\": 245,\n\t\"./ro.js\": 245,\n\t\"./ru\": 246,\n\t\"./ru.js\": 246,\n\t\"./sd\": 247,\n\t\"./sd.js\": 247,\n\t\"./se\": 248,\n\t\"./se.js\": 248,\n\t\"./si\": 249,\n\t\"./si.js\": 249,\n\t\"./sk\": 250,\n\t\"./sk.js\": 250,\n\t\"./sl\": 251,\n\t\"./sl.js\": 251,\n\t\"./sq\": 252,\n\t\"./sq.js\": 252,\n\t\"./sr\": 253,\n\t\"./sr-cyrl\": 254,\n\t\"./sr-cyrl.js\": 254,\n\t\"./sr.js\": 253,\n\t\"./ss\": 255,\n\t\"./ss.js\": 255,\n\t\"./sv\": 256,\n\t\"./sv.js\": 256,\n\t\"./sw\": 257,\n\t\"./sw.js\": 257,\n\t\"./ta\": 258,\n\t\"./ta.js\": 258,\n\t\"./te\": 259,\n\t\"./te.js\": 259,\n\t\"./tet\": 260,\n\t\"./tet.js\": 260,\n\t\"./tg\": 261,\n\t\"./tg.js\": 261,\n\t\"./th\": 262,\n\t\"./th.js\": 262,\n\t\"./tk\": 263,\n\t\"./tk.js\": 263,\n\t\"./tl-ph\": 264,\n\t\"./tl-ph.js\": 264,\n\t\"./tlh\": 265,\n\t\"./tlh.js\": 265,\n\t\"./tr\": 266,\n\t\"./tr.js\": 266,\n\t\"./tzl\": 267,\n\t\"./tzl.js\": 267,\n\t\"./tzm\": 268,\n\t\"./tzm-latn\": 269,\n\t\"./tzm-latn.js\": 269,\n\t\"./tzm.js\": 268,\n\t\"./ug-cn\": 270,\n\t\"./ug-cn.js\": 270,\n\t\"./uk\": 271,\n\t\"./uk.js\": 271,\n\t\"./ur\": 272,\n\t\"./ur.js\": 272,\n\t\"./uz\": 273,\n\t\"./uz-latn\": 274,\n\t\"./uz-latn.js\": 274,\n\t\"./uz.js\": 273,\n\t\"./vi\": 275,\n\t\"./vi.js\": 275,\n\t\"./x-pseudo\": 276,\n\t\"./x-pseudo.js\": 276,\n\t\"./yo\": 277,\n\t\"./yo.js\": 277,\n\t\"./zh-cn\": 278,\n\t\"./zh-cn.js\": 278,\n\t\"./zh-hk\": 279,\n\t\"./zh-hk.js\": 279,\n\t\"./zh-mo\": 280,\n\t\"./zh-mo.js\": 280,\n\t\"./zh-tw\": 281,\n\t\"./zh-tw.js\": 281\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 395;"],"sourceRoot":""}